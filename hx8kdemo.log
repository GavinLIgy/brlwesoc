
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+932 (git sha1 81876a37, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Parsing `hx8kdemo.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: hx8kdemo.v
Parsing Verilog input from `hx8kdemo.v' to AST representation.
Generating RTLIL representation for module `\hx8kdemo'.
Successfully finished Verilog frontend.

-- Parsing `spimemio.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: spimemio.v
Parsing Verilog input from `spimemio.v' to AST representation.
Generating RTLIL representation for module `\spimemio'.
Generating RTLIL representation for module `\spimemio_xfer'.
Successfully finished Verilog frontend.

-- Parsing `simpleuart.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: simpleuart.v
Parsing Verilog input from `simpleuart.v' to AST representation.
Generating RTLIL representation for module `\simpleuart'.
Successfully finished Verilog frontend.

-- Parsing `picosoc.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: picosoc.v
Parsing Verilog input from `picosoc.v' to AST representation.
Generating RTLIL representation for module `\picosoc'.
Generating RTLIL representation for module `\picosoc_regs'.
Generating RTLIL representation for module `\picosoc_mem'.
Successfully finished Verilog frontend.

-- Parsing `../picorv32.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: ../picorv32.v
Parsing Verilog input from `../picorv32.v' to AST representation.
Generating RTLIL representation for module `\picorv32'.
Generating RTLIL representation for module `\picorv32_regs'.
Generating RTLIL representation for module `\picorv32_pcpi_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_fast_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_div'.
Generating RTLIL representation for module `\picorv32_axi'.
Generating RTLIL representation for module `\picorv32_axi_adapter'.
Generating RTLIL representation for module `\picorv32_wb'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top hx8kdemo -blif hx8kdemo.blif' --

6. Executing SYNTH_ICE40 pass.

6.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Successfully finished Verilog frontend.

6.2. Executing HIERARCHY pass (managing design hierarchy).

6.2.1. Analyzing design hierarchy..
Top module:  \hx8kdemo
Used module:     \picosoc
Used module:         \picosoc_mem
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         \picorv32
Used module:             \picosoc_regs
Parameter \WORDS = 256

6.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\picosoc_mem'.
Parameter \WORDS = 256
Generating RTLIL representation for module `$paramod\picosoc_mem\WORDS=256'.
Parameter \ENABLE_COUNTERS = 1'1
Parameter \BARREL_SHIFTER = 1'1
Parameter \COMPRESSED_ISA = 1'1
Parameter \ENABLE_MUL = 1'1
Parameter \ENABLE_DIV = 1'1
Parameter \ENABLE_IRQ = 1
Parameter \ENABLE_IRQ_QREGS = 1'0
Parameter \PROGADDR_RESET = 1048576
Parameter \PROGADDR_IRQ = 0
Parameter \STACKADDR = 1024

6.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\picorv32'.
Parameter \ENABLE_COUNTERS = 1'1
Parameter \BARREL_SHIFTER = 1'1
Parameter \COMPRESSED_ISA = 1'1
Parameter \ENABLE_MUL = 1'1
Parameter \ENABLE_DIV = 1'1
Parameter \ENABLE_IRQ = 1
Parameter \ENABLE_IRQ_QREGS = 1'0
Parameter \PROGADDR_RESET = 1048576
Parameter \PROGADDR_IRQ = 0
Parameter \STACKADDR = 1024
Generating RTLIL representation for module `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32'.

6.2.4. Analyzing design hierarchy..
Top module:  \hx8kdemo
Used module:     \picosoc
Used module:         $paramod\picosoc_mem\WORDS=256
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32
Used module:             \picorv32_pcpi_div
Used module:             \picorv32_pcpi_mul
Used module:             \picosoc_regs

6.2.5. Analyzing design hierarchy..
Top module:  \hx8kdemo
Used module:     \picosoc
Used module:         $paramod\picosoc_mem\WORDS=256
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32
Used module:             \picorv32_pcpi_div
Used module:             \picorv32_pcpi_mul
Used module:             \picosoc_regs
Removing unused module `\picorv32_wb'.
Removing unused module `\picorv32_axi_adapter'.
Removing unused module `\picorv32_axi'.
Removing unused module `\picorv32_pcpi_fast_mul'.
Removing unused module `\picorv32_regs'.
Removing unused module `\picorv32'.
Removing unused module `\picosoc_mem'.
Removed 7 unused modules.

6.3. Executing PROC pass (convert processes to netlists).

6.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 16 empty switches in `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
Found and cleaned up 1 empty switch in `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1382$1605'.
Found and cleaned up 6 empty switches in `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:546$1247'.
Removing empty process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:546$1247'.
Found and cleaned up 1 empty switch in `\picorv32_pcpi_mul.$proc$../picorv32.v:2243$935'.
Cleaned up 24 empty switches.

6.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 41 switch rules as full_case in process $proc$../picorv32.v:1397$1619 in module $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.
Marked 2 switch rules as full_case in process $proc$../picorv32.v:1304$1588 in module $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.
Marked 2 switch rules as full_case in process $proc$../picorv32.v:1290$1583 in module $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.
Marked 8 switch rules as full_case in process $proc$../picorv32.v:1181$1548 in module $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.
Marked 3 switch rules as full_case in process $proc$../picorv32.v:856$1287 in module $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.
Marked 3 switch rules as full_case in process $proc$../picorv32.v:807$1285 in module $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.
Marked 2 switch rules as full_case in process $proc$../picorv32.v:776$1281 in module $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.
Marked 47 switch rules as full_case in process $proc$../picorv32.v:700$1280 in module $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.
Marked 4 switch rules as full_case in process $proc$../picorv32.v:565$1256 in module $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.
Marked 1 switch rules as full_case in process $proc$../picorv32.v:430$1216 in module $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.
Removed 2 dead cases from process $proc$../picorv32.v:401$1213 in module $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.
Marked 2 switch rules as full_case in process $proc$../picorv32.v:401$1213 in module $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.
Marked 1 switch rules as full_case in process $proc$../picorv32.v:390$1208 in module $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.
Marked 1 switch rules as full_case in process $proc$../picorv32.v:325$1134 in module $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.
Marked 4 switch rules as full_case in process $proc$../picorv32.v:2458$1029 in module picorv32_pcpi_div.
Marked 4 switch rules as full_case in process $proc$../picorv32.v:2267$973 in module picorv32_pcpi_mul.
Marked 3 switch rules as full_case in process $proc$simpleuart.v:109$128 in module simpleuart.
Marked 2 switch rules as full_case in process $proc$simpleuart.v:66$119 in module simpleuart.
Marked 1 switch rules as full_case in process $proc$simpleuart.v:55$117 in module simpleuart.
Marked 2 switch rules as full_case in process $proc$spimemio.v:535$97 in module spimemio_xfer.
Marked 5 switch rules as full_case in process $proc$spimemio.v:447$73 in module spimemio_xfer.
Marked 3 switch rules as full_case in process $proc$spimemio.v:207$43 in module spimemio.
Marked 1 switch rules as full_case in process $proc$spimemio.v:99$21 in module spimemio.
Marked 1 switch rules as full_case in process $proc$hx8kdemo.v:77$5 in module hx8kdemo.
Removed a total of 2 dead cases.

6.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 8 redundant assignments.
Promoted 113 assignments to connections.

6.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\hx8kdemo.$proc$hx8kdemo.v:45$11'.
  Set init value: \reset_cnt = 6'000000

6.3.5. Executing PROC_ARST pass (detect async resets in processes).

6.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
     1/85: $23\next_irq_pending[2:2]
     2/85: $22\next_irq_pending[2:2]
     3/85: $21\next_irq_pending[2:2]
     4/85: $20\next_irq_pending[2:2]
     5/85: $19\next_irq_pending[2:2]
     6/85: $18\next_irq_pending[2:2]
     7/85: $17\next_irq_pending[2:2]
     8/85: $5\next_irq_pending[31:0] [31:2]
     9/85: $3\set_mem_do_rdata[0:0]
    10/85: $5\next_irq_pending[31:0] [1]
    11/85: $3\set_mem_do_wdata[0:0]
    12/85: $5\next_irq_pending[31:0] [0]
    13/85: $4\set_mem_do_rinst[0:0]
    14/85: $3\set_mem_do_rinst[0:0]
    15/85: $4\set_mem_do_wdata[0:0]
    16/85: $15\next_irq_pending[1:1]
    17/85: $14\next_irq_pending[1:1]
    18/85: $13\next_irq_pending[1:1]
    19/85: $4\set_mem_do_rdata[0:0]
    20/85: $11\next_irq_pending[1:1]
    21/85: $10\next_irq_pending[1:1]
    22/85: $9\next_irq_pending[1:1]
    23/85: $8\next_irq_pending[1:1]
    24/85: $7\next_irq_pending[1:1]
    25/85: $16\next_irq_pending[1:1]
    26/85: $5\set_mem_do_rinst[0:0]
    27/85: $12\next_irq_pending[1:1]
    28/85: $6\next_irq_pending[31:0]
    29/85: $3\current_pc[31:0]
    30/85: $2\current_pc[31:0]
    31/85: $2\set_mem_do_wdata[0:0]
    32/85: $2\set_mem_do_rdata[0:0]
    33/85: $2\set_mem_do_rinst[0:0]
    34/85: $4\next_irq_pending[31:0]
    35/85: $1\current_pc[31:0]
    36/85: $1\set_mem_do_wdata[0:0]
    37/85: $1\set_mem_do_rdata[0:0]
    38/85: $1\set_mem_do_rinst[0:0]
    39/85: $0\trace_data[35:0]
    40/85: $3\next_irq_pending[31:0]
    41/85: $2\next_irq_pending[0:0]
    42/85: $1\next_irq_pending[0:0]
    43/85: $0\count_cycle[63:0]
    44/85: $0\pcpi_timeout[0:0]
    45/85: $0\trace_valid[0:0]
    46/85: $0\do_waitirq[0:0]
    47/85: $0\decoder_pseudo_trigger[0:0]
    48/85: $0\decoder_trigger[0:0]
    49/85: $0\alu_wait_2[0:0]
    50/85: $0\alu_wait[0:0]
    51/85: $0\reg_out[31:0]
    52/85: $0\reg_sh[4:0]
    53/85: $0\trap[0:0]
    54/85: $0\pcpi_timeout_counter[3:0]
    55/85: $0\latched_rd[4:0]
    56/85: $0\latched_is_lb[0:0]
    57/85: $0\latched_is_lh[0:0]
    58/85: $0\latched_is_lu[0:0]
    59/85: $0\latched_trace[0:0]
    60/85: $0\latched_compr[0:0]
    61/85: $0\latched_branch[0:0]
    62/85: $0\latched_stalu[0:0]
    63/85: $0\latched_store[0:0]
    64/85: $0\irq_state[1:0]
    65/85: $0\cpu_state[7:0]
    66/85: $0\dbg_rs2val_valid[0:0]
    67/85: $0\dbg_rs1val_valid[0:0]
    68/85: $0\dbg_rs2val[31:0]
    69/85: $0\dbg_rs1val[31:0]
    70/85: $0\mem_do_wdata[0:0]
    71/85: $0\mem_do_rdata[0:0]
    72/85: $0\mem_do_rinst[0:0]
    73/85: $0\mem_do_prefetch[0:0]
    74/85: $0\mem_wordsize[1:0]
    75/85: $0\timer[31:0]
    76/85: $0\irq_mask[31:0]
    77/85: $0\irq_active[0:0]
    78/85: $0\irq_delay[0:0]
    79/85: $0\reg_op2[31:0]
    80/85: $0\reg_op1[31:0]
    81/85: $0\reg_next_pc[31:0]
    82/85: $0\reg_pc[31:0]
    83/85: $0\count_instr[63:0]
    84/85: $0\eoi[31:0]
    85/85: $0\pcpi_valid[0:0]
Creating decoders for process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1382$1605'.
Creating decoders for process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1304$1588'.
     1/4: $2\cpuregs_write[0:0]
     2/4: $2\cpuregs_wrdata[31:0]
     3/4: $1\cpuregs_wrdata[31:0]
     4/4: $1\cpuregs_write[0:0]
Creating decoders for process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1290$1583'.
     1/2: $2\clear_prefetched_high_word[0:0]
     2/2: $1\clear_prefetched_high_word[0:0]
Creating decoders for process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1288$1582'.
Creating decoders for process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1244$1560'.
     1/2: $1\alu_out[31:0]
     2/2: $1\alu_out_0[0:0]
Creating decoders for process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1181$1548'.
     1/8: $8\dbg_ascii_state[127:0]
     2/8: $7\dbg_ascii_state[127:0]
     3/8: $6\dbg_ascii_state[127:0]
     4/8: $5\dbg_ascii_state[127:0]
     5/8: $4\dbg_ascii_state[127:0]
     6/8: $3\dbg_ascii_state[127:0]
     7/8: $2\dbg_ascii_state[127:0]
     8/8: $1\dbg_ascii_state[127:0]
Creating decoders for process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
     1/76: $0\decoded_rs1[4:0] [4]
     2/76: $0\decoded_imm_j[31:0] [10]
     3/76: $0\decoded_imm_j[31:0] [7]
     4/76: $0\decoded_imm_j[31:0] [6]
     5/76: $0\decoded_imm_j[31:0] [3:1]
     6/76: $0\decoded_imm_j[31:0] [5]
     7/76: $0\decoded_imm_j[31:0] [9:8]
     8/76: $0\decoded_imm_j[31:0] [31:20]
     9/76: $0\decoded_imm_j[31:0] [4]
    10/76: $0\decoded_imm_j[31:0] [11]
    11/76: $0\decoded_imm_j[31:0] [0]
    12/76: $0\decoded_rs1[4:0] [3:0]
    13/76: $0\is_lui_auipc_jal_jalr_addi_add_sub[0:0]
    14/76: $0\is_alu_reg_reg[0:0]
    15/76: $0\is_alu_reg_imm[0:0]
    16/76: $0\is_beq_bne_blt_bge_bltu_bgeu[0:0]
    17/76: $0\is_sll_srl_sra[0:0]
    18/76: $0\is_sb_sh_sw[0:0]
    19/76: $0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0]
    20/76: $0\is_slli_srli_srai[0:0]
    21/76: $0\is_lb_lh_lw_lbu_lhu[0:0]
    22/76: $0\compressed_instr[0:0]
    23/76: $0\is_compare[0:0]
    24/76: $0\decoded_imm[31:0]
    25/76: $0\decoded_rs2[4:0]
    26/76: $0\decoded_imm_j[31:0] [19:12]
    27/76: $0\decoded_rd[4:0]
    28/76: $0\instr_timer[0:0]
    29/76: $0\instr_waitirq[0:0]
    30/76: $0\instr_maskirq[0:0]
    31/76: $0\instr_retirq[0:0]
    32/76: $0\instr_setq[0:0]
    33/76: $0\instr_getq[0:0]
    34/76: $0\instr_ecall_ebreak[0:0]
    35/76: $0\instr_rdinstrh[0:0]
    36/76: $0\instr_rdinstr[0:0]
    37/76: $0\instr_rdcycleh[0:0]
    38/76: $0\instr_rdcycle[0:0]
    39/76: $0\instr_and[0:0]
    40/76: $0\instr_or[0:0]
    41/76: $0\instr_sra[0:0]
    42/76: $0\instr_srl[0:0]
    43/76: $0\instr_xor[0:0]
    44/76: $0\instr_sltu[0:0]
    45/76: $0\instr_slt[0:0]
    46/76: $0\instr_sll[0:0]
    47/76: $0\instr_sub[0:0]
    48/76: $0\instr_add[0:0]
    49/76: $0\instr_srai[0:0]
    50/76: $0\instr_srli[0:0]
    51/76: $0\instr_slli[0:0]
    52/76: $0\instr_andi[0:0]
    53/76: $0\instr_ori[0:0]
    54/76: $0\instr_xori[0:0]
    55/76: $0\instr_sltiu[0:0]
    56/76: $0\instr_slti[0:0]
    57/76: $0\instr_addi[0:0]
    58/76: $0\instr_sw[0:0]
    59/76: $0\instr_sh[0:0]
    60/76: $0\instr_sb[0:0]
    61/76: $0\instr_lhu[0:0]
    62/76: $0\instr_lbu[0:0]
    63/76: $0\instr_lw[0:0]
    64/76: $0\instr_lh[0:0]
    65/76: $0\instr_lb[0:0]
    66/76: $0\instr_bgeu[0:0]
    67/76: $0\instr_bltu[0:0]
    68/76: $0\instr_bge[0:0]
    69/76: $0\instr_blt[0:0]
    70/76: $0\instr_bne[0:0]
    71/76: $0\instr_beq[0:0]
    72/76: $0\instr_jalr[0:0]
    73/76: $0\instr_jal[0:0]
    74/76: $0\instr_auipc[0:0]
    75/76: $0\instr_lui[0:0]
    76/76: $0\pcpi_insn[31:0]
Creating decoders for process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:807$1285'.
     1/13: $3\dbg_insn_opcode[31:0]
     2/13: $2\dbg_insn_rd[4:0]
     3/13: $2\dbg_insn_rs2[4:0]
     4/13: $2\dbg_insn_rs1[4:0]
     5/13: $2\dbg_insn_opcode[31:0]
     6/13: $2\dbg_insn_imm[31:0]
     7/13: $2\dbg_ascii_instr[63:0]
     8/13: $1\dbg_insn_rd[4:0]
     9/13: $1\dbg_insn_rs2[4:0]
    10/13: $1\dbg_insn_rs1[4:0]
    11/13: $1\dbg_insn_imm[31:0]
    12/13: $1\dbg_ascii_instr[63:0]
    13/13: $1\dbg_insn_opcode[31:0]
Creating decoders for process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:776$1281'.
     1/8: $0\cached_insn_rd[4:0]
     2/8: $0\cached_insn_rs2[4:0]
     3/8: $0\cached_insn_rs1[4:0]
     4/8: $0\cached_insn_opcode[31:0]
     5/8: $0\cached_insn_imm[31:0]
     6/8: $0\cached_ascii_instr[63:0]
     7/8: $0\dbg_valid_insn[0:0]
     8/8: $0\dbg_insn_addr[31:0]
Creating decoders for process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:700$1280'.
     1/47: $47\new_ascii_instr[63:0]
     2/47: $46\new_ascii_instr[63:0]
     3/47: $45\new_ascii_instr[63:0]
     4/47: $44\new_ascii_instr[63:0]
     5/47: $43\new_ascii_instr[63:0]
     6/47: $42\new_ascii_instr[63:0]
     7/47: $41\new_ascii_instr[63:0]
     8/47: $40\new_ascii_instr[63:0]
     9/47: $39\new_ascii_instr[63:0]
    10/47: $38\new_ascii_instr[63:0]
    11/47: $37\new_ascii_instr[63:0]
    12/47: $36\new_ascii_instr[63:0]
    13/47: $35\new_ascii_instr[63:0]
    14/47: $34\new_ascii_instr[63:0]
    15/47: $33\new_ascii_instr[63:0]
    16/47: $32\new_ascii_instr[63:0]
    17/47: $31\new_ascii_instr[63:0]
    18/47: $30\new_ascii_instr[63:0]
    19/47: $29\new_ascii_instr[63:0]
    20/47: $28\new_ascii_instr[63:0]
    21/47: $27\new_ascii_instr[63:0]
    22/47: $26\new_ascii_instr[63:0]
    23/47: $25\new_ascii_instr[63:0]
    24/47: $24\new_ascii_instr[63:0]
    25/47: $23\new_ascii_instr[63:0]
    26/47: $22\new_ascii_instr[63:0]
    27/47: $21\new_ascii_instr[63:0]
    28/47: $20\new_ascii_instr[63:0]
    29/47: $19\new_ascii_instr[63:0]
    30/47: $18\new_ascii_instr[63:0]
    31/47: $17\new_ascii_instr[63:0]
    32/47: $16\new_ascii_instr[63:0]
    33/47: $15\new_ascii_instr[63:0]
    34/47: $14\new_ascii_instr[63:0]
    35/47: $13\new_ascii_instr[63:0]
    36/47: $12\new_ascii_instr[63:0]
    37/47: $11\new_ascii_instr[63:0]
    38/47: $10\new_ascii_instr[63:0]
    39/47: $9\new_ascii_instr[63:0]
    40/47: $8\new_ascii_instr[63:0]
    41/47: $7\new_ascii_instr[63:0]
    42/47: $6\new_ascii_instr[63:0]
    43/47: $5\new_ascii_instr[63:0]
    44/47: $4\new_ascii_instr[63:0]
    45/47: $3\new_ascii_instr[63:0]
    46/47: $2\new_ascii_instr[63:0]
    47/47: $1\new_ascii_instr[63:0]
Creating decoders for process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:565$1256'.
     1/9: $0\mem_16bit_buffer[15:0]
     2/9: $0\prefetched_high_word[0:0]
     3/9: $0\mem_la_secondword[0:0]
     4/9: $0\mem_state[1:0]
     5/9: $0\mem_wstrb[3:0]
     6/9: $0\mem_wdata[31:0]
     7/9: $0\mem_addr[31:0]
     8/9: $0\mem_instr[0:0]
     9/9: $0\mem_valid[0:0]
Creating decoders for process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1234$1805'.
Creating decoders for process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:430$1216'.
     1/9: $0\mem_rdata_q[31:0] [31]
     2/9: $0\mem_rdata_q[31:0] [7]
     3/9: $0\mem_rdata_q[31:0] [24:20]
     4/9: $0\mem_rdata_q[31:0] [19:15]
     5/9: $0\mem_rdata_q[31:0] [6:0]
     6/9: $0\mem_rdata_q[31:0] [14:12]
     7/9: $0\mem_rdata_q[31:0] [11:8]
     8/9: $0\mem_rdata_q[31:0] [30:25]
     9/9: $0\next_insn_opcode[31:0]
Creating decoders for process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:401$1213'.
     1/5: $3\mem_rdata_word[31:0]
     2/5: $2\mem_rdata_word[31:0]
     3/5: $1\mem_rdata_word[31:0]
     4/5: $1\mem_la_wstrb[3:0]
     5/5: $1\mem_la_wdata[31:0]
Creating decoders for process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:390$1208'.
     1/2: $0\last_mem_valid[0:0]
     2/2: $0\mem_la_firstword_reg[0:0]
Creating decoders for process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:325$1134'.
     1/2: $1\pcpi_int_rd[31:0]
     2/2: $1\pcpi_int_wr[0:0]
Creating decoders for process `$paramod\picosoc_mem\WORDS=256.$proc$picosoc.v:253$1103'.
     1/12: $0$memwr$\mem$picosoc.v:255$1099_EN[31:0]$1106
     2/12: $0$memwr$\mem$picosoc.v:255$1099_DATA[31:0]$1105
     3/12: $0$memwr$\mem$picosoc.v:255$1099_ADDR[21:0]$1104
     4/12: $0$memwr$\mem$picosoc.v:256$1100_EN[31:0]$1109
     5/12: $0$memwr$\mem$picosoc.v:256$1100_DATA[31:0]$1108
     6/12: $0$memwr$\mem$picosoc.v:256$1100_ADDR[21:0]$1107
     7/12: $0$memwr$\mem$picosoc.v:257$1101_EN[31:0]$1112
     8/12: $0$memwr$\mem$picosoc.v:257$1101_DATA[31:0]$1111
     9/12: $0$memwr$\mem$picosoc.v:257$1101_ADDR[21:0]$1110
    10/12: $0$memwr$\mem$picosoc.v:258$1102_EN[31:0]$1115
    11/12: $0$memwr$\mem$picosoc.v:258$1102_DATA[31:0]$1114
    12/12: $0$memwr$\mem$picosoc.v:258$1102_ADDR[21:0]$1113
Creating decoders for process `\picorv32_pcpi_div.$proc$../picorv32.v:2458$1029'.
     1/9: $0\pcpi_rd[31:0]
     2/9: $0\pcpi_wr[0:0]
     3/9: $0\pcpi_ready[0:0]
     4/9: $0\outsign[0:0]
     5/9: $0\running[0:0]
     6/9: $0\quotient_msk[31:0]
     7/9: $0\quotient[31:0]
     8/9: $0\divisor[62:0]
     9/9: $0\dividend[31:0]
Creating decoders for process `\picorv32_pcpi_div.$proc$../picorv32.v:2432$1019'.
     1/4: $0\instr_remu[0:0]
     2/4: $0\instr_rem[0:0]
     3/4: $0\instr_divu[0:0]
     4/4: $0\instr_div[0:0]
Creating decoders for process `\picorv32_pcpi_mul.$proc$../picorv32.v:2301$978'.
     1/3: $0\pcpi_ready[0:0]
     2/3: $0\pcpi_wr[0:0]
     3/3: $0\pcpi_rd[31:0]
Creating decoders for process `\picorv32_pcpi_mul.$proc$../picorv32.v:2267$973'.
     1/7: $0\mul_finish[0:0]
     2/7: $0\mul_waiting[0:0]
     3/7: $0\mul_counter[6:0]
     4/7: $0\rdx[63:0]
     5/7: $0\rd[63:0]
     6/7: $0\rs2[63:0]
     7/7: $0\rs1[63:0]
Creating decoders for process `\picorv32_pcpi_mul.$proc$../picorv32.v:2243$935'.
Creating decoders for process `\picorv32_pcpi_mul.$proc$../picorv32.v:2215$929'.
     1/4: $0\instr_mulhu[0:0]
     2/4: $0\instr_mulhsu[0:0]
     3/4: $0\instr_mulh[0:0]
     4/4: $0\instr_mul[0:0]
Creating decoders for process `\picosoc_regs.$proc$picosoc.v:235$183'.
     1/3: $0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186
     2/3: $0$memwr$\regs$picosoc.v:236$182_DATA[31:0]$185
     3/3: $0$memwr$\regs$picosoc.v:236$182_ADDR[4:0]$184
Creating decoders for process `\picosoc.$proc$picosoc.v:207$172'.
Creating decoders for process `\picosoc.$proc$picosoc.v:87$139'.
Creating decoders for process `\simpleuart.$proc$simpleuart.v:109$128'.
     1/4: $0\send_divcnt[31:0]
     2/4: $0\send_dummy[0:0]
     3/4: $0\send_bitcnt[3:0]
     4/4: $0\send_pattern[9:0]
Creating decoders for process `\simpleuart.$proc$simpleuart.v:66$119'.
     1/5: $0\recv_divcnt[31:0]
     2/5: $0\recv_buf_valid[0:0]
     3/5: $0\recv_buf_data[7:0]
     4/5: $0\recv_pattern[7:0]
     5/5: $0\recv_state[3:0]
Creating decoders for process `\simpleuart.$proc$simpleuart.v:55$117'.
     1/4: $0\cfg_divider[31:0] [31:24]
     2/4: $0\cfg_divider[31:0] [23:16]
     3/4: $0\cfg_divider[31:0] [15:8]
     4/4: $0\cfg_divider[31:0] [7:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:535$97'.
     1/14: $0\last_fetch[0:0]
     2/14: $0\fetch[0:0]
     3/14: $0\xfer_tag[3:0]
     4/14: $0\xfer_rd[0:0]
     5/14: $0\xfer_qspi[0:0]
     6/14: $0\xfer_cont[0:0]
     7/14: $0\dummy_count[3:0]
     8/14: $0\count[3:0]
     9/14: $0\ibuffer[7:0]
    10/14: $0\obuffer[7:0]
    11/14: $0\xfer_ddr[0:0]
    12/14: $0\xfer_dspi[0:0]
    13/14: $0\flash_clk[0:0]
    14/14: $0\flash_csb[0:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:447$73'.
     1/33: $5\next_count[3:0]
     2/33: $5\next_obuffer[7:0]
     3/33: $5\next_ibuffer[7:0]
     4/33: $4\next_count[3:0]
     5/33: $4\next_obuffer[7:0]
     6/33: $4\next_ibuffer[7:0]
     7/33: $3\next_count[3:0]
     8/33: $3\next_obuffer[7:0]
     9/33: $3\next_ibuffer[7:0]
    10/33: $2\next_fetch[0:0]
    11/33: $2\next_count[3:0]
    12/33: $2\next_ibuffer[7:0]
    13/33: $2\next_obuffer[7:0]
    14/33: $2\flash_io0_do[0:0]
    15/33: $2\flash_io0_oe[0:0]
    16/33: $2\flash_io3_do[0:0]
    17/33: $2\flash_io3_oe[0:0]
    18/33: $2\flash_io2_do[0:0]
    19/33: $2\flash_io2_oe[0:0]
    20/33: $2\flash_io1_do[0:0]
    21/33: $2\flash_io1_oe[0:0]
    22/33: $1\next_fetch[0:0]
    23/33: $1\next_count[3:0]
    24/33: $1\next_ibuffer[7:0]
    25/33: $1\next_obuffer[7:0]
    26/33: $1\flash_io3_do[0:0]
    27/33: $1\flash_io3_oe[0:0]
    28/33: $1\flash_io2_do[0:0]
    29/33: $1\flash_io2_oe[0:0]
    30/33: $1\flash_io1_do[0:0]
    31/33: $1\flash_io1_oe[0:0]
    32/33: $1\flash_io0_do[0:0]
    33/33: $1\flash_io0_oe[0:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:436$64'.
Creating decoders for process `\spimemio.$proc$spimemio.v:207$43'.
     1/17: $0\buffer[23:0] [23:16]
     2/17: $0\buffer[23:0] [15:8]
     3/17: $0\buffer[23:0] [7:0]
     4/17: $0\xfer_resetn[0:0]
     5/17: $0\state[3:0]
     6/17: $0\rd_inc[0:0]
     7/17: $0\rd_wait[0:0]
     8/17: $0\rd_valid[0:0]
     9/17: $0\rd_addr[23:0]
    10/17: $0\din_valid[0:0]
    11/17: $0\din_rd[0:0]
    12/17: $0\din_ddr[0:0]
    13/17: $0\din_qspi[0:0]
    14/17: $0\din_cont[0:0]
    15/17: $0\din_tag[3:0]
    16/17: $0\din_data[7:0]
    17/17: $0\rdata[31:0]
Creating decoders for process `\spimemio.$proc$spimemio.v:151$25'.
Creating decoders for process `\spimemio.$proc$spimemio.v:99$21'.
     1/10: $0\softreset[0:0]
     2/10: $0\config_do[3:0]
     3/10: $0\config_clk[0:0]
     4/10: $0\config_csb[0:0]
     5/10: $0\config_oe[3:0]
     6/10: $0\config_dummy[3:0]
     7/10: $0\config_cont[0:0]
     8/10: $0\config_qspi[0:0]
     9/10: $0\config_ddr[0:0]
    10/10: $0\config_en[0:0]
Creating decoders for process `\hx8kdemo.$proc$hx8kdemo.v:45$11'.
Creating decoders for process `\hx8kdemo.$proc$hx8kdemo.v:77$5'.
     1/6: $0\gpio[31:0] [31:24]
     2/6: $0\gpio[31:0] [23:16]
     3/6: $0\gpio[31:0] [15:8]
     4/6: $0\gpio[31:0] [7:0]
     5/6: $0\iomem_rdata[31:0]
     6/6: $0\iomem_ready[0:0]
Creating decoders for process `\hx8kdemo.$proc$hx8kdemo.v:48$2'.

6.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\cpuregs_rs1' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1382$1605'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\cpuregs_rs2' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1382$1605'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\decoded_rs' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1382$1605'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\cpuregs_write' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1304$1588'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\cpuregs_wrdata' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1304$1588'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\clear_prefetched_high_word' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1290$1583'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\alu_out' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1244$1560'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\alu_out_0' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1244$1560'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\dbg_ascii_state' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1181$1548'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\dbg_insn_opcode' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:807$1285'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\dbg_ascii_instr' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:807$1285'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\dbg_insn_imm' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:807$1285'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\dbg_insn_rs1' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:807$1285'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\dbg_insn_rs2' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:807$1285'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\dbg_insn_rd' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:807$1285'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\new_ascii_instr' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:700$1280'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\alu_add_sub' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1234$1805'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\alu_shl' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1234$1805'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\alu_shr' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1234$1805'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\alu_eq' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1234$1805'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\alu_ltu' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1234$1805'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\alu_lts' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1234$1805'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\mem_la_wdata' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:401$1213'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\mem_la_wstrb' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:401$1213'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\mem_rdata_word' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:401$1213'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\pcpi_int_wr' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:325$1134'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\pcpi_int_rd' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:325$1134'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\pcpi_int_wait' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:325$1134'.
No latch inferred for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\pcpi_int_ready' from process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:325$1134'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rs1' from process `\picorv32_pcpi_mul.$proc$../picorv32.v:2243$935'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rs2' from process `\picorv32_pcpi_mul.$proc$../picorv32.v:2243$935'.
No latch inferred for signal `\picorv32_pcpi_mul.\this_rs2' from process `\picorv32_pcpi_mul.$proc$../picorv32.v:2243$935'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rd' from process `\picorv32_pcpi_mul.$proc$../picorv32.v:2243$935'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rdx' from process `\picorv32_pcpi_mul.$proc$../picorv32.v:2243$935'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rdt' from process `\picorv32_pcpi_mul.$proc$../picorv32.v:2243$935'.
No latch inferred for signal `\picorv32_pcpi_mul.\i' from process `\picorv32_pcpi_mul.$proc$../picorv32.v:2243$935'.
No latch inferred for signal `\picorv32_pcpi_mul.\j' from process `\picorv32_pcpi_mul.$proc$../picorv32.v:2243$935'.
No latch inferred for signal `\picosoc.\irq' from process `\picosoc.$proc$picosoc.v:87$139'.
No latch inferred for signal `\spimemio_xfer.\flash_io0_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$73'.
No latch inferred for signal `\spimemio_xfer.\flash_io0_do' from process `\spimemio_xfer.$proc$spimemio.v:447$73'.
No latch inferred for signal `\spimemio_xfer.\flash_io1_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$73'.
No latch inferred for signal `\spimemio_xfer.\flash_io1_do' from process `\spimemio_xfer.$proc$spimemio.v:447$73'.
No latch inferred for signal `\spimemio_xfer.\flash_io2_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$73'.
No latch inferred for signal `\spimemio_xfer.\flash_io2_do' from process `\spimemio_xfer.$proc$spimemio.v:447$73'.
No latch inferred for signal `\spimemio_xfer.\flash_io3_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$73'.
No latch inferred for signal `\spimemio_xfer.\flash_io3_do' from process `\spimemio_xfer.$proc$spimemio.v:447$73'.
No latch inferred for signal `\spimemio_xfer.\next_obuffer' from process `\spimemio_xfer.$proc$spimemio.v:447$73'.
No latch inferred for signal `\spimemio_xfer.\next_ibuffer' from process `\spimemio_xfer.$proc$spimemio.v:447$73'.
No latch inferred for signal `\spimemio_xfer.\next_count' from process `\spimemio_xfer.$proc$spimemio.v:447$73'.
No latch inferred for signal `\spimemio_xfer.\next_fetch' from process `\spimemio_xfer.$proc$spimemio.v:447$73'.

6.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\trap' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5688' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\pcpi_valid' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5689' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\eoi' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5690' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\trace_valid' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5691' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\trace_data' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5692' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\count_cycle' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5693' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\count_instr' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5694' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\reg_pc' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5695' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\reg_next_pc' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5696' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\reg_op1' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5697' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\reg_op2' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5698' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\reg_out' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5699' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\reg_sh' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5700' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\irq_delay' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5701' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\irq_active' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5702' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\irq_mask' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5703' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\irq_pending' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5704' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\timer' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5705' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\mem_wordsize' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5706' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\mem_do_prefetch' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5707' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\mem_do_rinst' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5708' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\mem_do_rdata' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5709' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\mem_do_wdata' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5710' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\decoder_trigger' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5711' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\decoder_trigger_q' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5712' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\decoder_pseudo_trigger' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5713' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\decoder_pseudo_trigger_q' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5714' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\dbg_rs1val' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5715' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\dbg_rs2val' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5716' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\dbg_rs1val_valid' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5717' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\dbg_rs2val_valid' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5718' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\cpu_state' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5719' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\irq_state' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5720' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\set_mem_do_rinst' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5721' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\set_mem_do_rdata' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5722' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\set_mem_do_wdata' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5723' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\latched_store' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5724' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\latched_stalu' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5725' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\latched_branch' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5726' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\latched_compr' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5727' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\latched_trace' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5728' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\latched_is_lu' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5729' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\latched_is_lh' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5730' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\latched_is_lb' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5731' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\latched_rd' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5732' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\current_pc' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5733' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\pcpi_timeout_counter' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5734' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\pcpi_timeout' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5735' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\next_irq_pending' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5736' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\do_waitirq' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5737' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\alu_out_q' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5738' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\alu_out_0_q' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5739' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\alu_wait' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5740' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\alu_wait_2' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
  created $dff cell `$procdff$5741' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\clear_prefetched_high_word_q' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1288$1582'.
  created $dff cell `$procdff$5742' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\pcpi_insn' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5743' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_lui' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5744' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_auipc' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5745' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_jal' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5746' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_jalr' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5747' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_beq' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5748' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_bne' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5749' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_blt' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5750' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_bge' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5751' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_bltu' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5752' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_bgeu' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5753' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_lb' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5754' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_lh' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5755' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_lw' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5756' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_lbu' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5757' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_lhu' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5758' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_sb' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5759' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_sh' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5760' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_sw' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5761' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_addi' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5762' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_slti' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5763' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_sltiu' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5764' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_xori' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5765' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_ori' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5766' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_andi' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5767' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_slli' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5768' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_srli' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5769' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_srai' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5770' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_add' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5771' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_sub' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5772' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_sll' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5773' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_slt' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5774' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_sltu' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5775' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_xor' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5776' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_srl' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5777' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_sra' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5778' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_or' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5779' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_and' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5780' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_rdcycle' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5781' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_rdcycleh' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5782' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_rdinstr' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5783' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_rdinstrh' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5784' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_ecall_ebreak' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5785' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_getq' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5786' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_setq' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5787' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_retirq' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5788' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_maskirq' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5789' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_waitirq' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5790' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\instr_timer' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5791' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\decoded_rd' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5792' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\decoded_rs1' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5793' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\decoded_rs2' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5794' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\decoded_imm' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5795' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\decoded_imm_j' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5796' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\compressed_instr' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5797' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\is_lui_auipc_jal' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5798' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\is_lb_lh_lw_lbu_lhu' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5799' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\is_slli_srli_srai' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5800' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\is_jalr_addi_slti_sltiu_xori_ori_andi' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5801' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\is_sb_sh_sw' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5802' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\is_sll_srl_sra' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5803' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\is_lui_auipc_jal_jalr_addi_add_sub' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5804' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\is_slti_blt_slt' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5805' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\is_sltiu_bltu_sltu' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5806' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\is_beq_bne_blt_bge_bltu_bgeu' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5807' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\is_lbu_lhu_lw' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5808' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\is_alu_reg_imm' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5809' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\is_alu_reg_reg' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5810' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\is_compare' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
  created $dff cell `$procdff$5811' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\dbg_insn_addr' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:776$1281'.
  created $dff cell `$procdff$5812' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\q_ascii_instr' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:776$1281'.
  created $dff cell `$procdff$5813' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\q_insn_imm' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:776$1281'.
  created $dff cell `$procdff$5814' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\q_insn_opcode' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:776$1281'.
  created $dff cell `$procdff$5815' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\q_insn_rs1' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:776$1281'.
  created $dff cell `$procdff$5816' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\q_insn_rs2' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:776$1281'.
  created $dff cell `$procdff$5817' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\q_insn_rd' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:776$1281'.
  created $dff cell `$procdff$5818' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\dbg_next' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:776$1281'.
  created $dff cell `$procdff$5819' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\dbg_valid_insn' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:776$1281'.
  created $dff cell `$procdff$5820' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\cached_ascii_instr' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:776$1281'.
  created $dff cell `$procdff$5821' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\cached_insn_imm' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:776$1281'.
  created $dff cell `$procdff$5822' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\cached_insn_opcode' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:776$1281'.
  created $dff cell `$procdff$5823' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\cached_insn_rs1' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:776$1281'.
  created $dff cell `$procdff$5824' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\cached_insn_rs2' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:776$1281'.
  created $dff cell `$procdff$5825' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\cached_insn_rd' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:776$1281'.
  created $dff cell `$procdff$5826' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\mem_valid' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:565$1256'.
  created $dff cell `$procdff$5827' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\mem_instr' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:565$1256'.
  created $dff cell `$procdff$5828' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\mem_addr' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:565$1256'.
  created $dff cell `$procdff$5829' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\mem_wdata' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:565$1256'.
  created $dff cell `$procdff$5830' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\mem_wstrb' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:565$1256'.
  created $dff cell `$procdff$5831' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\mem_state' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:565$1256'.
  created $dff cell `$procdff$5832' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\mem_la_secondword' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:565$1256'.
  created $dff cell `$procdff$5833' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\prefetched_high_word' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:565$1256'.
  created $dff cell `$procdff$5834' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\mem_16bit_buffer' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:565$1256'.
  created $dff cell `$procdff$5835' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\next_insn_opcode' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:430$1216'.
  created $dff cell `$procdff$5836' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\mem_rdata_q' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:430$1216'.
  created $dff cell `$procdff$5837' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\mem_la_firstword_reg' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:390$1208'.
  created $dff cell `$procdff$5838' with positive edge clock.
Creating register for signal `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.\last_mem_valid' using process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:390$1208'.
  created $dff cell `$procdff$5839' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=256.$memwr$\mem$picosoc.v:255$1099_ADDR' using process `$paramod\picosoc_mem\WORDS=256.$proc$picosoc.v:253$1103'.
  created $dff cell `$procdff$5840' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=256.$memwr$\mem$picosoc.v:255$1099_DATA' using process `$paramod\picosoc_mem\WORDS=256.$proc$picosoc.v:253$1103'.
  created $dff cell `$procdff$5841' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=256.$memwr$\mem$picosoc.v:255$1099_EN' using process `$paramod\picosoc_mem\WORDS=256.$proc$picosoc.v:253$1103'.
  created $dff cell `$procdff$5842' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=256.\rdata' using process `$paramod\picosoc_mem\WORDS=256.$proc$picosoc.v:253$1103'.
  created $dff cell `$procdff$5843' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=256.$memwr$\mem$picosoc.v:256$1100_ADDR' using process `$paramod\picosoc_mem\WORDS=256.$proc$picosoc.v:253$1103'.
  created $dff cell `$procdff$5844' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=256.$memwr$\mem$picosoc.v:256$1100_DATA' using process `$paramod\picosoc_mem\WORDS=256.$proc$picosoc.v:253$1103'.
  created $dff cell `$procdff$5845' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=256.$memwr$\mem$picosoc.v:256$1100_EN' using process `$paramod\picosoc_mem\WORDS=256.$proc$picosoc.v:253$1103'.
  created $dff cell `$procdff$5846' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=256.$memwr$\mem$picosoc.v:257$1101_ADDR' using process `$paramod\picosoc_mem\WORDS=256.$proc$picosoc.v:253$1103'.
  created $dff cell `$procdff$5847' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=256.$memwr$\mem$picosoc.v:257$1101_DATA' using process `$paramod\picosoc_mem\WORDS=256.$proc$picosoc.v:253$1103'.
  created $dff cell `$procdff$5848' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=256.$memwr$\mem$picosoc.v:257$1101_EN' using process `$paramod\picosoc_mem\WORDS=256.$proc$picosoc.v:253$1103'.
  created $dff cell `$procdff$5849' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=256.$memwr$\mem$picosoc.v:258$1102_ADDR' using process `$paramod\picosoc_mem\WORDS=256.$proc$picosoc.v:253$1103'.
  created $dff cell `$procdff$5850' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=256.$memwr$\mem$picosoc.v:258$1102_DATA' using process `$paramod\picosoc_mem\WORDS=256.$proc$picosoc.v:253$1103'.
  created $dff cell `$procdff$5851' with positive edge clock.
Creating register for signal `$paramod\picosoc_mem\WORDS=256.$memwr$\mem$picosoc.v:258$1102_EN' using process `$paramod\picosoc_mem\WORDS=256.$proc$picosoc.v:253$1103'.
  created $dff cell `$procdff$5852' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_wr' using process `\picorv32_pcpi_div.$proc$../picorv32.v:2458$1029'.
  created $dff cell `$procdff$5853' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_rd' using process `\picorv32_pcpi_div.$proc$../picorv32.v:2458$1029'.
  created $dff cell `$procdff$5854' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_ready' using process `\picorv32_pcpi_div.$proc$../picorv32.v:2458$1029'.
  created $dff cell `$procdff$5855' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\dividend' using process `\picorv32_pcpi_div.$proc$../picorv32.v:2458$1029'.
  created $dff cell `$procdff$5856' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\divisor' using process `\picorv32_pcpi_div.$proc$../picorv32.v:2458$1029'.
  created $dff cell `$procdff$5857' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\quotient' using process `\picorv32_pcpi_div.$proc$../picorv32.v:2458$1029'.
  created $dff cell `$procdff$5858' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\quotient_msk' using process `\picorv32_pcpi_div.$proc$../picorv32.v:2458$1029'.
  created $dff cell `$procdff$5859' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\running' using process `\picorv32_pcpi_div.$proc$../picorv32.v:2458$1029'.
  created $dff cell `$procdff$5860' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\outsign' using process `\picorv32_pcpi_div.$proc$../picorv32.v:2458$1029'.
  created $dff cell `$procdff$5861' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_wait' using process `\picorv32_pcpi_div.$proc$../picorv32.v:2432$1019'.
  created $dff cell `$procdff$5862' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\pcpi_wait_q' using process `\picorv32_pcpi_div.$proc$../picorv32.v:2432$1019'.
  created $dff cell `$procdff$5863' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\instr_div' using process `\picorv32_pcpi_div.$proc$../picorv32.v:2432$1019'.
  created $dff cell `$procdff$5864' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\instr_divu' using process `\picorv32_pcpi_div.$proc$../picorv32.v:2432$1019'.
  created $dff cell `$procdff$5865' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\instr_rem' using process `\picorv32_pcpi_div.$proc$../picorv32.v:2432$1019'.
  created $dff cell `$procdff$5866' with positive edge clock.
Creating register for signal `\picorv32_pcpi_div.\instr_remu' using process `\picorv32_pcpi_div.$proc$../picorv32.v:2432$1019'.
  created $dff cell `$procdff$5867' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_wr' using process `\picorv32_pcpi_mul.$proc$../picorv32.v:2301$978'.
  created $dff cell `$procdff$5868' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_rd' using process `\picorv32_pcpi_mul.$proc$../picorv32.v:2301$978'.
  created $dff cell `$procdff$5869' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_ready' using process `\picorv32_pcpi_mul.$proc$../picorv32.v:2301$978'.
  created $dff cell `$procdff$5870' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rs1' using process `\picorv32_pcpi_mul.$proc$../picorv32.v:2267$973'.
  created $dff cell `$procdff$5871' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rs2' using process `\picorv32_pcpi_mul.$proc$../picorv32.v:2267$973'.
  created $dff cell `$procdff$5872' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rd' using process `\picorv32_pcpi_mul.$proc$../picorv32.v:2267$973'.
  created $dff cell `$procdff$5873' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rdx' using process `\picorv32_pcpi_mul.$proc$../picorv32.v:2267$973'.
  created $dff cell `$procdff$5874' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\mul_counter' using process `\picorv32_pcpi_mul.$proc$../picorv32.v:2267$973'.
  created $dff cell `$procdff$5875' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\mul_waiting' using process `\picorv32_pcpi_mul.$proc$../picorv32.v:2267$973'.
  created $dff cell `$procdff$5876' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\mul_finish' using process `\picorv32_pcpi_mul.$proc$../picorv32.v:2267$973'.
  created $dff cell `$procdff$5877' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_wait' using process `\picorv32_pcpi_mul.$proc$../picorv32.v:2215$929'.
  created $dff cell `$procdff$5878' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mul' using process `\picorv32_pcpi_mul.$proc$../picorv32.v:2215$929'.
  created $dff cell `$procdff$5879' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mulh' using process `\picorv32_pcpi_mul.$proc$../picorv32.v:2215$929'.
  created $dff cell `$procdff$5880' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mulhsu' using process `\picorv32_pcpi_mul.$proc$../picorv32.v:2215$929'.
  created $dff cell `$procdff$5881' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mulhu' using process `\picorv32_pcpi_mul.$proc$../picorv32.v:2215$929'.
  created $dff cell `$procdff$5882' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_wait_q' using process `\picorv32_pcpi_mul.$proc$../picorv32.v:2215$929'.
  created $dff cell `$procdff$5883' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:236$182_ADDR' using process `\picosoc_regs.$proc$picosoc.v:235$183'.
  created $dff cell `$procdff$5884' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:236$182_DATA' using process `\picosoc_regs.$proc$picosoc.v:235$183'.
  created $dff cell `$procdff$5885' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:236$182_EN' using process `\picosoc_regs.$proc$picosoc.v:235$183'.
  created $dff cell `$procdff$5886' with positive edge clock.
Creating register for signal `\picosoc.\ram_ready' using process `\picosoc.$proc$picosoc.v:207$172'.
  created $dff cell `$procdff$5887' with positive edge clock.
Creating register for signal `\simpleuart.\send_pattern' using process `\simpleuart.$proc$simpleuart.v:109$128'.
  created $dff cell `$procdff$5888' with positive edge clock.
Creating register for signal `\simpleuart.\send_bitcnt' using process `\simpleuart.$proc$simpleuart.v:109$128'.
  created $dff cell `$procdff$5889' with positive edge clock.
Creating register for signal `\simpleuart.\send_divcnt' using process `\simpleuart.$proc$simpleuart.v:109$128'.
  created $dff cell `$procdff$5890' with positive edge clock.
Creating register for signal `\simpleuart.\send_dummy' using process `\simpleuart.$proc$simpleuart.v:109$128'.
  created $dff cell `$procdff$5891' with positive edge clock.
Creating register for signal `\simpleuart.\recv_state' using process `\simpleuart.$proc$simpleuart.v:66$119'.
  created $dff cell `$procdff$5892' with positive edge clock.
Creating register for signal `\simpleuart.\recv_divcnt' using process `\simpleuart.$proc$simpleuart.v:66$119'.
  created $dff cell `$procdff$5893' with positive edge clock.
Creating register for signal `\simpleuart.\recv_pattern' using process `\simpleuart.$proc$simpleuart.v:66$119'.
  created $dff cell `$procdff$5894' with positive edge clock.
Creating register for signal `\simpleuart.\recv_buf_data' using process `\simpleuart.$proc$simpleuart.v:66$119'.
  created $dff cell `$procdff$5895' with positive edge clock.
Creating register for signal `\simpleuart.\recv_buf_valid' using process `\simpleuart.$proc$simpleuart.v:66$119'.
  created $dff cell `$procdff$5896' with positive edge clock.
Creating register for signal `\simpleuart.\cfg_divider' using process `\simpleuart.$proc$simpleuart.v:55$117'.
  created $dff cell `$procdff$5897' with positive edge clock.
Creating register for signal `\spimemio_xfer.\flash_csb' using process `\spimemio_xfer.$proc$spimemio.v:535$97'.
  created $dff cell `$procdff$5898' with positive edge clock.
Creating register for signal `\spimemio_xfer.\flash_clk' using process `\spimemio_xfer.$proc$spimemio.v:535$97'.
  created $dff cell `$procdff$5899' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_dspi' using process `\spimemio_xfer.$proc$spimemio.v:535$97'.
  created $dff cell `$procdff$5900' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_ddr' using process `\spimemio_xfer.$proc$spimemio.v:535$97'.
  created $dff cell `$procdff$5901' with positive edge clock.
Creating register for signal `\spimemio_xfer.\obuffer' using process `\spimemio_xfer.$proc$spimemio.v:535$97'.
  created $dff cell `$procdff$5902' with positive edge clock.
Creating register for signal `\spimemio_xfer.\ibuffer' using process `\spimemio_xfer.$proc$spimemio.v:535$97'.
  created $dff cell `$procdff$5903' with positive edge clock.
Creating register for signal `\spimemio_xfer.\count' using process `\spimemio_xfer.$proc$spimemio.v:535$97'.
  created $dff cell `$procdff$5904' with positive edge clock.
Creating register for signal `\spimemio_xfer.\dummy_count' using process `\spimemio_xfer.$proc$spimemio.v:535$97'.
  created $dff cell `$procdff$5905' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_cont' using process `\spimemio_xfer.$proc$spimemio.v:535$97'.
  created $dff cell `$procdff$5906' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_qspi' using process `\spimemio_xfer.$proc$spimemio.v:535$97'.
  created $dff cell `$procdff$5907' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_rd' using process `\spimemio_xfer.$proc$spimemio.v:535$97'.
  created $dff cell `$procdff$5908' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_tag' using process `\spimemio_xfer.$proc$spimemio.v:535$97'.
  created $dff cell `$procdff$5909' with positive edge clock.
Creating register for signal `\spimemio_xfer.\fetch' using process `\spimemio_xfer.$proc$spimemio.v:535$97'.
  created $dff cell `$procdff$5910' with positive edge clock.
Creating register for signal `\spimemio_xfer.\last_fetch' using process `\spimemio_xfer.$proc$spimemio.v:535$97'.
  created $dff cell `$procdff$5911' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_ddr_q' using process `\spimemio_xfer.$proc$spimemio.v:436$64'.
  created $dff cell `$procdff$5912' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_tag_q' using process `\spimemio_xfer.$proc$spimemio.v:436$64'.
  created $dff cell `$procdff$5913' with positive edge clock.
Creating register for signal `\spimemio.\rdata' using process `\spimemio.$proc$spimemio.v:207$43'.
  created $dff cell `$procdff$5914' with positive edge clock.
Creating register for signal `\spimemio.\xfer_resetn' using process `\spimemio.$proc$spimemio.v:207$43'.
  created $dff cell `$procdff$5915' with positive edge clock.
Creating register for signal `\spimemio.\din_valid' using process `\spimemio.$proc$spimemio.v:207$43'.
  created $dff cell `$procdff$5916' with positive edge clock.
Creating register for signal `\spimemio.\din_data' using process `\spimemio.$proc$spimemio.v:207$43'.
  created $dff cell `$procdff$5917' with positive edge clock.
Creating register for signal `\spimemio.\din_tag' using process `\spimemio.$proc$spimemio.v:207$43'.
  created $dff cell `$procdff$5918' with positive edge clock.
Creating register for signal `\spimemio.\din_cont' using process `\spimemio.$proc$spimemio.v:207$43'.
  created $dff cell `$procdff$5919' with positive edge clock.
Creating register for signal `\spimemio.\din_qspi' using process `\spimemio.$proc$spimemio.v:207$43'.
  created $dff cell `$procdff$5920' with positive edge clock.
Creating register for signal `\spimemio.\din_ddr' using process `\spimemio.$proc$spimemio.v:207$43'.
  created $dff cell `$procdff$5921' with positive edge clock.
Creating register for signal `\spimemio.\din_rd' using process `\spimemio.$proc$spimemio.v:207$43'.
  created $dff cell `$procdff$5922' with positive edge clock.
Creating register for signal `\spimemio.\buffer' using process `\spimemio.$proc$spimemio.v:207$43'.
  created $dff cell `$procdff$5923' with positive edge clock.
Creating register for signal `\spimemio.\rd_addr' using process `\spimemio.$proc$spimemio.v:207$43'.
  created $dff cell `$procdff$5924' with positive edge clock.
Creating register for signal `\spimemio.\rd_valid' using process `\spimemio.$proc$spimemio.v:207$43'.
  created $dff cell `$procdff$5925' with positive edge clock.
Creating register for signal `\spimemio.\rd_wait' using process `\spimemio.$proc$spimemio.v:207$43'.
  created $dff cell `$procdff$5926' with positive edge clock.
Creating register for signal `\spimemio.\rd_inc' using process `\spimemio.$proc$spimemio.v:207$43'.
  created $dff cell `$procdff$5927' with positive edge clock.
Creating register for signal `\spimemio.\state' using process `\spimemio.$proc$spimemio.v:207$43'.
  created $dff cell `$procdff$5928' with positive edge clock.
Creating register for signal `\spimemio.\xfer_io0_90' using process `\spimemio.$proc$spimemio.v:151$25'.
  created $dff cell `$procdff$5929' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io1_90' using process `\spimemio.$proc$spimemio.v:151$25'.
  created $dff cell `$procdff$5930' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io2_90' using process `\spimemio.$proc$spimemio.v:151$25'.
  created $dff cell `$procdff$5931' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io3_90' using process `\spimemio.$proc$spimemio.v:151$25'.
  created $dff cell `$procdff$5932' with negative edge clock.
Creating register for signal `\spimemio.\softreset' using process `\spimemio.$proc$spimemio.v:99$21'.
  created $dff cell `$procdff$5933' with positive edge clock.
Creating register for signal `\spimemio.\config_en' using process `\spimemio.$proc$spimemio.v:99$21'.
  created $dff cell `$procdff$5934' with positive edge clock.
Creating register for signal `\spimemio.\config_ddr' using process `\spimemio.$proc$spimemio.v:99$21'.
  created $dff cell `$procdff$5935' with positive edge clock.
Creating register for signal `\spimemio.\config_qspi' using process `\spimemio.$proc$spimemio.v:99$21'.
  created $dff cell `$procdff$5936' with positive edge clock.
Creating register for signal `\spimemio.\config_cont' using process `\spimemio.$proc$spimemio.v:99$21'.
  created $dff cell `$procdff$5937' with positive edge clock.
Creating register for signal `\spimemio.\config_dummy' using process `\spimemio.$proc$spimemio.v:99$21'.
  created $dff cell `$procdff$5938' with positive edge clock.
Creating register for signal `\spimemio.\config_oe' using process `\spimemio.$proc$spimemio.v:99$21'.
  created $dff cell `$procdff$5939' with positive edge clock.
Creating register for signal `\spimemio.\config_csb' using process `\spimemio.$proc$spimemio.v:99$21'.
  created $dff cell `$procdff$5940' with positive edge clock.
Creating register for signal `\spimemio.\config_clk' using process `\spimemio.$proc$spimemio.v:99$21'.
  created $dff cell `$procdff$5941' with positive edge clock.
Creating register for signal `\spimemio.\config_do' using process `\spimemio.$proc$spimemio.v:99$21'.
  created $dff cell `$procdff$5942' with positive edge clock.
Creating register for signal `\hx8kdemo.\iomem_ready' using process `\hx8kdemo.$proc$hx8kdemo.v:77$5'.
  created $dff cell `$procdff$5943' with positive edge clock.
Creating register for signal `\hx8kdemo.\iomem_rdata' using process `\hx8kdemo.$proc$hx8kdemo.v:77$5'.
  created $dff cell `$procdff$5944' with positive edge clock.
Creating register for signal `\hx8kdemo.\gpio' using process `\hx8kdemo.$proc$hx8kdemo.v:77$5'.
  created $dff cell `$procdff$5945' with positive edge clock.
Creating register for signal `\hx8kdemo.\reset_cnt' using process `\hx8kdemo.$proc$hx8kdemo.v:48$2'.
  created $dff cell `$procdff$5946' with positive edge clock.

6.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 60 empty switches in `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
Removing empty process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1397$1619'.
Removing empty process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1382$1605'.
Found and cleaned up 2 empty switches in `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1304$1588'.
Removing empty process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1304$1588'.
Found and cleaned up 2 empty switches in `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1290$1583'.
Removing empty process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1290$1583'.
Removing empty process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1288$1582'.
Found and cleaned up 2 empty switches in `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1244$1560'.
Removing empty process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1244$1560'.
Found and cleaned up 8 empty switches in `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1181$1548'.
Removing empty process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1181$1548'.
Found and cleaned up 22 empty switches in `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
Removing empty process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:856$1287'.
Found and cleaned up 3 empty switches in `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:807$1285'.
Removing empty process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:807$1285'.
Found and cleaned up 5 empty switches in `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:776$1281'.
Removing empty process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:776$1281'.
Found and cleaned up 47 empty switches in `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:700$1280'.
Removing empty process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:700$1280'.
Found and cleaned up 16 empty switches in `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:565$1256'.
Removing empty process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:565$1256'.
Removing empty process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:1234$1805'.
Found and cleaned up 19 empty switches in `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:430$1216'.
Removing empty process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:430$1216'.
Found and cleaned up 3 empty switches in `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:401$1213'.
Removing empty process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:401$1213'.
Found and cleaned up 2 empty switches in `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:390$1208'.
Removing empty process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:390$1208'.
Found and cleaned up 1 empty switch in `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:325$1134'.
Removing empty process `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.$proc$../picorv32.v:325$1134'.
Found and cleaned up 4 empty switches in `$paramod\picosoc_mem\WORDS=256.$proc$picosoc.v:253$1103'.
Removing empty process `$paramod\picosoc_mem\WORDS=256.$proc$picosoc.v:253$1103'.
Found and cleaned up 5 empty switches in `\picorv32_pcpi_div.$proc$../picorv32.v:2458$1029'.
Removing empty process `picorv32_pcpi_div.$proc$../picorv32.v:2458$1029'.
Found and cleaned up 2 empty switches in `\picorv32_pcpi_div.$proc$../picorv32.v:2432$1019'.
Removing empty process `picorv32_pcpi_div.$proc$../picorv32.v:2432$1019'.
Found and cleaned up 1 empty switch in `\picorv32_pcpi_mul.$proc$../picorv32.v:2301$978'.
Removing empty process `picorv32_pcpi_mul.$proc$../picorv32.v:2301$978'.
Found and cleaned up 5 empty switches in `\picorv32_pcpi_mul.$proc$../picorv32.v:2267$973'.
Removing empty process `picorv32_pcpi_mul.$proc$../picorv32.v:2267$973'.
Removing empty process `picorv32_pcpi_mul.$proc$../picorv32.v:2243$935'.
Found and cleaned up 2 empty switches in `\picorv32_pcpi_mul.$proc$../picorv32.v:2215$929'.
Removing empty process `picorv32_pcpi_mul.$proc$../picorv32.v:2215$929'.
Found and cleaned up 1 empty switch in `\picosoc_regs.$proc$picosoc.v:235$183'.
Removing empty process `picosoc_regs.$proc$picosoc.v:235$183'.
Removing empty process `picosoc.$proc$picosoc.v:207$172'.
Removing empty process `picosoc.$proc$picosoc.v:87$139'.
Found and cleaned up 5 empty switches in `\simpleuart.$proc$simpleuart.v:109$128'.
Removing empty process `simpleuart.$proc$simpleuart.v:109$128'.
Found and cleaned up 7 empty switches in `\simpleuart.$proc$simpleuart.v:66$119'.
Removing empty process `simpleuart.$proc$simpleuart.v:66$119'.
Found and cleaned up 5 empty switches in `\simpleuart.$proc$simpleuart.v:55$117'.
Removing empty process `simpleuart.$proc$simpleuart.v:55$117'.
Found and cleaned up 4 empty switches in `\spimemio_xfer.$proc$spimemio.v:535$97'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:535$97'.
Found and cleaned up 5 empty switches in `\spimemio_xfer.$proc$spimemio.v:447$73'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:447$73'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:436$64'.
Found and cleaned up 25 empty switches in `\spimemio.$proc$spimemio.v:207$43'.
Removing empty process `spimemio.$proc$spimemio.v:207$43'.
Removing empty process `spimemio.$proc$spimemio.v:151$25'.
Found and cleaned up 5 empty switches in `\spimemio.$proc$spimemio.v:99$21'.
Removing empty process `spimemio.$proc$spimemio.v:99$21'.
Removing empty process `hx8kdemo.$proc$hx8kdemo.v:45$11'.
Found and cleaned up 6 empty switches in `\hx8kdemo.$proc$hx8kdemo.v:77$5'.
Removing empty process `hx8kdemo.$proc$hx8kdemo.v:77$5'.
Removing empty process `hx8kdemo.$proc$hx8kdemo.v:48$2'.
Cleaned up 274 empty switches.

6.4. Executing FLATTEN pass (flatten design).
Using template picosoc for cells of type picosoc.
Using template $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32 for cells of type $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.
Using template $paramod\picosoc_mem\WORDS=256 for cells of type $paramod\picosoc_mem\WORDS=256.
Using template simpleuart for cells of type simpleuart.
Using template spimemio for cells of type spimemio.
Using template picorv32_pcpi_div for cells of type picorv32_pcpi_div.
Using template picorv32_pcpi_mul for cells of type picorv32_pcpi_mul.
Using template picosoc_regs for cells of type picosoc_regs.
Using template spimemio_xfer for cells of type spimemio_xfer.
<suppressed ~9 debug messages>
No more expansions possible.
Deleting now unused module $paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32.
Deleting now unused module $paramod\picosoc_mem\WORDS=256.
Deleting now unused module picorv32_pcpi_div.
Deleting now unused module picorv32_pcpi_mul.
Deleting now unused module picosoc_regs.
Deleting now unused module picosoc.
Deleting now unused module simpleuart.
Deleting now unused module spimemio_xfer.
Deleting now unused module spimemio.

6.5. Executing TRIBUF pass.

6.6. Executing DEMINOUT pass (demote inout ports to input or output).

6.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.
<suppressed ~711 debug messages>

6.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..
Removed 288 unused cells and 2190 unused wires.
<suppressed ~351 debug messages>

6.9. Executing CHECK pass (checking for obvious problems).
checking module hx8kdemo..
found and reported 0 problems.

6.10. Executing OPT pass (performing simple optimizations).

6.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.

6.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
<suppressed ~1650 debug messages>
Removed a total of 550 cells.

6.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hx8kdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $techmap\soc.cpu.pcpi_mul.$procmux$4802: \soc.cpu.pcpi_mul.mul_waiting -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1820.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1830.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1832.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1838.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1845.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1847.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1853.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1869.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1875.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1878.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1891.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1898.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1901.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1914.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1926.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1929.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1938.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1941.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1949.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1951.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1954.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$1968.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1970.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1972.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1975.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1988.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1990.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$1993.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2005.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2008.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2015.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2017.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2020.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$2043.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2045.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2047.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2050.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2072.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2074.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2077.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2096.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2098.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2101.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2120.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2122.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2125.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2146.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2149.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2163.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$2166.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2168.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2170.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2173.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2183.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2188.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2191.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2214.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$2217.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2219.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2221.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2224.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2236.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2239.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2282.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2295.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2308.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2348.
    dead port 4/8 on $pmux $techmap\soc.cpu.$procmux$2548.
    dead port 5/8 on $pmux $techmap\soc.cpu.$procmux$2548.
    dead port 2/11 on $pmux $techmap\soc.cpu.$procmux$2591.
    dead port 7/11 on $pmux $techmap\soc.cpu.$procmux$2591.
    dead port 8/11 on $pmux $techmap\soc.cpu.$procmux$2591.
    dead port 4/8 on $pmux $techmap\soc.cpu.$procmux$2798.
    dead port 5/8 on $pmux $techmap\soc.cpu.$procmux$2798.
    dead port 1/4 on $pmux $techmap\soc.cpu.$procmux$2866.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$2881.
    dead port 2/12 on $pmux $techmap\soc.cpu.$procmux$2885.
    dead port 7/12 on $pmux $techmap\soc.cpu.$procmux$2885.
    dead port 8/12 on $pmux $techmap\soc.cpu.$procmux$2885.
    dead port 1/4 on $pmux $techmap\soc.cpu.$procmux$3069.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$3081.
    dead port 2/12 on $pmux $techmap\soc.cpu.$procmux$3085.
    dead port 7/12 on $pmux $techmap\soc.cpu.$procmux$3085.
    dead port 8/12 on $pmux $techmap\soc.cpu.$procmux$3085.
    dead port 2/11 on $pmux $techmap\soc.cpu.$procmux$3270.
    dead port 7/11 on $pmux $techmap\soc.cpu.$procmux$3270.
    dead port 8/11 on $pmux $techmap\soc.cpu.$procmux$3270.
    dead port 4/8 on $pmux $techmap\soc.cpu.$procmux$3320.
    dead port 5/8 on $pmux $techmap\soc.cpu.$procmux$3320.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3461.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3470.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$4616.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$4623.
    dead port 3/4 on $pmux $techmap\soc.cpu.$procmux$4649.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5096.
    dead port 1/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5098.
    dead port 2/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5098.
    dead port 3/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5098.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5102.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5109.
    dead port 1/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5111.
    dead port 2/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5111.
    dead port 3/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5111.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5115.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5135.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5137.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5146.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5148.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5170.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5172.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5182.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5184.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5194.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5204.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5214.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5224.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5234.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5244.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5252.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5260.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5268.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5276.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5286.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5296.
Removed 124 multiplexer ports.
<suppressed ~299 debug messages>

6.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hx8kdemo.
    New input vector for $reduce_or cell $techmap\soc.spimemio.xfer.$reduce_or$spimemio.v:491$82: { \soc.spimemio.xfer.count [0] \soc.spimemio.xfer.count [1] \soc.spimemio.xfer.count [2] \soc.spimemio.xfer.count [3] }
    New input vector for $reduce_or cell $techmap\soc.spimemio.xfer.$reduce_or$spimemio.v:471$75: { \soc.spimemio.xfer.count [0] \soc.spimemio.xfer.count [1] \soc.spimemio.xfer.count [2] \soc.spimemio.xfer.count [3] }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_mul.$reduce_or$../picorv32.v:2209$925: { \soc.cpu.pcpi_mul.instr_mulhsu \soc.cpu.pcpi_mul.instr_mulh }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_mul.$reduce_or$../picorv32.v:2208$924: { \soc.cpu.pcpi_mul.instr_mulhu \soc.cpu.pcpi_mul.instr_mulhsu \soc.cpu.pcpi_mul.instr_mulh }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_mul.$reduce_or$../picorv32.v:2207$923: { \soc.cpu.pcpi_mul.instr_mulhu \soc.cpu.pcpi_mul.instr_mulhsu \soc.cpu.pcpi_mul.instr_mulh \soc.cpu.pcpi_mul.instr_mul }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_div.$reduce_or$../picorv32.v:2470$1044: { \soc.cpu.reg_op2 [0] \soc.cpu.reg_op2 [1] \soc.cpu.reg_op2 [2] \soc.cpu.reg_op2 [3] \soc.cpu.reg_op2 [4] \soc.cpu.reg_op2 [5] \soc.cpu.reg_op2 [6] \soc.cpu.reg_op2 [7] \soc.cpu.reg_op2 [8] \soc.cpu.reg_op2 [9] \soc.cpu.reg_op2 [10] \soc.cpu.reg_op2 [11] \soc.cpu.reg_op2 [12] \soc.cpu.reg_op2 [13] \soc.cpu.reg_op2 [14] \soc.cpu.reg_op2 [15] \soc.cpu.reg_op2 [16] \soc.cpu.reg_op2 [17] \soc.cpu.reg_op2 [18] \soc.cpu.reg_op2 [19] \soc.cpu.reg_op2 [20] \soc.cpu.reg_op2 [21] \soc.cpu.reg_op2 [22] \soc.cpu.reg_op2 [23] \soc.cpu.reg_op2 [24] \soc.cpu.reg_op2 [25] \soc.cpu.reg_op2 [26] \soc.cpu.reg_op2 [27] \soc.cpu.reg_op2 [28] \soc.cpu.reg_op2 [29] \soc.cpu.reg_op2 [30] \soc.cpu.reg_op2 [31] }
    New input vector for $reduce_or cell $techmap\soc.cpu.pcpi_div.$reduce_or$../picorv32.v:2427$1016: { \soc.cpu.pcpi_div.instr_remu \soc.cpu.pcpi_div.instr_rem \soc.cpu.pcpi_div.instr_divu \soc.cpu.pcpi_div.instr_div }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$../picorv32.v:904$1325: { \soc.cpu.mem_rdata_latched [5] \soc.cpu.mem_rdata_latched [6] \soc.cpu.mem_rdata_latched [7] \soc.cpu.mem_rdata_latched [8] \soc.cpu.mem_rdata_latched [9] \soc.cpu.mem_rdata_latched [10] \soc.cpu.mem_rdata_latched [11] \soc.cpu.mem_rdata_latched [12] }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$../picorv32.v:862$1293: { \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu \soc.cpu.instr_sltu \soc.cpu.instr_slt \soc.cpu.instr_sltiu \soc.cpu.instr_slti }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$../picorv32.v:861$1292: { \soc.cpu.instr_lhu \soc.cpu.instr_lbu \soc.cpu.instr_lw }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$../picorv32.v:860$1291: { \soc.cpu.instr_sltu \soc.cpu.instr_sltiu \soc.cpu.instr_bltu }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$../picorv32.v:859$1290: { \soc.cpu.instr_slt \soc.cpu.instr_slti \soc.cpu.instr_blt }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$../picorv32.v:858$1289: { \soc.cpu.instr_sub \soc.cpu.instr_add \soc.cpu.instr_addi \soc.cpu.instr_jalr \soc.cpu.instr_jal \soc.cpu.instr_auipc \soc.cpu.instr_lui }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$../picorv32.v:857$1288: { \soc.cpu.instr_jal \soc.cpu.instr_auipc \soc.cpu.instr_lui }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$../picorv32.v:687$1279: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$../picorv32.v:376$1163: { \soc.cpu.mem_state [0] \soc.cpu.mem_state [1] }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$../picorv32.v:329$1142: { \soc.cpu.pcpi_div.pcpi_ready \soc.cpu.pcpi_mul.pcpi_ready }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$../picorv32.v:328$1138: { \soc.cpu.pcpi_div.pcpi_wait \soc.cpu.pcpi_mul.pcpi_wait }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$../picorv32.v:1539$1667: { $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [0] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [1] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [2] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [3] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [4] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [5] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [6] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [7] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [8] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [9] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [10] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [11] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [12] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [13] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [14] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [15] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [16] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [17] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [18] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [19] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [20] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [21] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [22] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [23] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [24] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [25] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [26] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [27] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [28] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [29] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [30] $techmap\soc.cpu.$and$../picorv32.v:1324$1599_Y [31] }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$../picorv32.v:1122$1546: { \soc.cpu.is_alu_reg_imm \soc.cpu.is_lb_lh_lw_lbu_lhu \soc.cpu.instr_jalr }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$../picorv32.v:1120$1544: { \soc.cpu.instr_auipc \soc.cpu.instr_lui }
    New input vector for $reduce_or cell $techmap\soc.cpu.$reduce_or$../picorv32.v:1105$1530: { $techmap\soc.cpu.$eq$../picorv32.v:1057$1400_Y $techmap\soc.cpu.$eq$../picorv32.v:1047$1384_Y $techmap\soc.cpu.$eq$../picorv32.v:1043$1378_Y $techmap\soc.cpu.$eq$../picorv32.v:1042$1376_Y $techmap\soc.cpu.$eq$../picorv32.v:1040$1372_Y $techmap\soc.cpu.$eq$../picorv32.v:1038$1368_Y }
    New input vector for $reduce_or cell $techmap\soc.cpu.$procmux$2592_ANY: { \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai }
    New input vector for $reduce_and cell $reduce_and$hx8kdemo.v:46$1: { \reset_cnt [0] \reset_cnt [1] \reset_cnt [2] \reset_cnt [3] \reset_cnt [4] \reset_cnt [5] }
    New input vector for $reduce_and cell $techmap\soc.cpu.$reduce_and$../picorv32.v:610$1272: { \soc.cpu.mem_rdata [0] \soc.cpu.mem_rdata [1] }
    New input vector for $reduce_and cell $techmap\soc.cpu.$reduce_and$../picorv32.v:377$1173: { \soc.cpu.mem_rdata_latched [0] \soc.cpu.mem_rdata_latched [1] }
    New input vector for $reduce_and cell $techmap\soc.cpu.$reduce_and$../picorv32.v:376$1168: { \soc.cpu.mem_state [0] \soc.cpu.mem_state [1] }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$1859: { $techmap\soc.cpu.$eq$../picorv32.v:1308$1589_Y $auto$opt_reduce.cc:132:opt_mux$5948 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$1881: { $techmap\soc.cpu.$eq$../picorv32.v:1308$1589_Y $techmap\soc.cpu.$procmux$1865_CMP $techmap\soc.cpu.$procmux$1864_CMP $auto$opt_reduce.cc:132:opt_mux$5950 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2272: { $techmap\soc.cpu.$procmux$1861_CMP $auto$opt_reduce.cc:132:opt_mux$5952 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2285: { $auto$opt_reduce.cc:132:opt_mux$5954 $techmap\soc.cpu.$procmux$1860_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2298: { $techmap\soc.cpu.$procmux$1863_CMP $auto$opt_reduce.cc:132:opt_mux$5956 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2591: $auto$opt_reduce.cc:132:opt_mux$5958
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2635: { $techmap\soc.cpu.$eq$../picorv32.v:1308$1589_Y $techmap\soc.cpu.$procmux$1863_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2775: { $techmap\soc.cpu.$eq$../picorv32.v:1308$1589_Y $techmap\soc.cpu.$procmux$1865_CMP $techmap\soc.cpu.$procmux$1864_CMP $techmap\soc.cpu.$procmux$1863_CMP $auto$opt_reduce.cc:132:opt_mux$5960 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2798: { \soc.cpu.instr_trap $auto$opt_reduce.cc:132:opt_mux$5962 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2885: { \soc.cpu.instr_trap $auto$opt_reduce.cc:132:opt_mux$5966 $techmap\soc.cpu.$logic_and$../picorv32.v:1697$1710_Y $auto$opt_reduce.cc:132:opt_mux$5964 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3059: { $techmap\soc.cpu.$eq$../picorv32.v:1308$1589_Y $techmap\soc.cpu.$procmux$1865_CMP $techmap\soc.cpu.$procmux$1864_CMP $techmap\soc.cpu.$procmux$1862_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3085: { \soc.cpu.instr_trap $auto$opt_reduce.cc:132:opt_mux$5970 $techmap\soc.cpu.$logic_and$../picorv32.v:1697$1710_Y $auto$opt_reduce.cc:132:opt_mux$5968 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3270: { \soc.cpu.is_lui_auipc_jal $auto$opt_reduce.cc:132:opt_mux$5972 $techmap\soc.cpu.$procmux$2592_CTRL }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3320: { \soc.cpu.is_lui_auipc_jal $auto$opt_reduce.cc:132:opt_mux$5974 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3456: $auto$opt_reduce.cc:132:opt_mux$5976
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3546: { $techmap\soc.cpu.$procmux$3543_CMP $techmap\soc.cpu.$procmux$3561_CMP $techmap\soc.cpu.$procmux$3539_CMP $auto$opt_reduce.cc:132:opt_mux$5978 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3564: $auto$opt_reduce.cc:132:opt_mux$5980
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3632: { $techmap\soc.cpu.$procmux$3543_CMP $techmap\soc.cpu.$procmux$3561_CMP $techmap\soc.cpu.$procmux$3539_CMP $auto$opt_reduce.cc:132:opt_mux$5982 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3650: { $techmap\soc.cpu.$procmux$3543_CMP $auto$opt_reduce.cc:132:opt_mux$5984 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3698: { $auto$opt_reduce.cc:132:opt_mux$5986 $techmap\soc.cpu.$procmux$3561_CMP $techmap\soc.cpu.$procmux$3539_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3719: $auto$opt_reduce.cc:132:opt_mux$5988
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3840: { $techmap\soc.cpu.$procmux$3848_CMP $auto$opt_reduce.cc:132:opt_mux$5990 $techmap\soc.cpu.$procmux$3561_CMP $techmap\soc.cpu.$procmux$3539_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3852: $auto$opt_reduce.cc:132:opt_mux$5992
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4008: $auto$opt_reduce.cc:132:opt_mux$5994
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4395: { $techmap\soc.cpu.$procmux$3539_CMP $auto$opt_reduce.cc:132:opt_mux$5996 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4410: { $techmap\soc.cpu.$procmux$3539_CMP $auto$opt_reduce.cc:132:opt_mux$5998 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4428: $auto$opt_reduce.cc:132:opt_mux$6000
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4441: $auto$opt_reduce.cc:132:opt_mux$6002
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4466: { $auto$opt_reduce.cc:132:opt_mux$6004 $techmap\soc.cpu.$procmux$3561_CMP $techmap\soc.cpu.$procmux$3539_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4501: { $techmap\soc.cpu.$procmux$3543_CMP $techmap\soc.cpu.$procmux$3539_CMP $auto$opt_reduce.cc:132:opt_mux$6006 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4516: { $techmap\soc.cpu.$procmux$3561_CMP $techmap\soc.cpu.$procmux$3539_CMP $auto$opt_reduce.cc:132:opt_mux$6008 $techmap\soc.cpu.$procmux$3547_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4543: { $techmap\soc.cpu.$procmux$3543_CMP $auto$opt_reduce.cc:132:opt_mux$6010 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4556: $auto$opt_reduce.cc:132:opt_mux$6012
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4582: { $auto$opt_reduce.cc:132:opt_mux$6016 $techmap\soc.cpu.$procmux$3561_CMP $techmap\soc.cpu.$procmux$3539_CMP $auto$opt_reduce.cc:132:opt_mux$6014 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4601: { $techmap\soc.cpu.$procmux$3543_CMP $auto$opt_reduce.cc:132:opt_mux$6018 }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.cpuregs.$procmux$4868:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186
      New ports: A=1'0, B=1'1, Y=$techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0]
      New connections: $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [31:1] = { $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:236$182_EN[31:0]$186 [0] }
    Consolidated identical input bits for $mux cell $techmap\soc.memory.$procmux$4657:
      Old ports: A=0, B=255, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:255$1099_EN[31:0]$1106
      New ports: A=1'0, B=1'1, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:255$1099_EN[31:0]$1106 [0]
      New connections: $techmap\soc.memory.$0$memwr$\mem$picosoc.v:255$1099_EN[31:0]$1106 [31:1] = { 24'000000000000000000000000 $techmap\soc.memory.$0$memwr$\mem$picosoc.v:255$1099_EN[31:0]$1106 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:255$1099_EN[31:0]$1106 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:255$1099_EN[31:0]$1106 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:255$1099_EN[31:0]$1106 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:255$1099_EN[31:0]$1106 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:255$1099_EN[31:0]$1106 [0] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:255$1099_EN[31:0]$1106 [0] }
    Consolidated identical input bits for $mux cell $techmap\soc.memory.$procmux$4663:
      Old ports: A=0, B=65280, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:256$1100_EN[31:0]$1109
      New ports: A=1'0, B=1'1, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:256$1100_EN[31:0]$1109 [8]
      New connections: { $techmap\soc.memory.$0$memwr$\mem$picosoc.v:256$1100_EN[31:0]$1109 [31:9] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:256$1100_EN[31:0]$1109 [7:0] } = { 16'0000000000000000 $techmap\soc.memory.$0$memwr$\mem$picosoc.v:256$1100_EN[31:0]$1109 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:256$1100_EN[31:0]$1109 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:256$1100_EN[31:0]$1109 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:256$1100_EN[31:0]$1109 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:256$1100_EN[31:0]$1109 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:256$1100_EN[31:0]$1109 [8] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:256$1100_EN[31:0]$1109 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\soc.memory.$procmux$4669:
      Old ports: A=0, B=16711680, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:257$1101_EN[31:0]$1112
      New ports: A=1'0, B=1'1, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:257$1101_EN[31:0]$1112 [16]
      New connections: { $techmap\soc.memory.$0$memwr$\mem$picosoc.v:257$1101_EN[31:0]$1112 [31:17] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:257$1101_EN[31:0]$1112 [15:0] } = { 8'00000000 $techmap\soc.memory.$0$memwr$\mem$picosoc.v:257$1101_EN[31:0]$1112 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:257$1101_EN[31:0]$1112 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:257$1101_EN[31:0]$1112 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:257$1101_EN[31:0]$1112 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:257$1101_EN[31:0]$1112 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:257$1101_EN[31:0]$1112 [16] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:257$1101_EN[31:0]$1112 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\soc.memory.$procmux$4675:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:258$1102_EN[31:0]$1115
      New ports: A=1'0, B=1'1, Y=$techmap\soc.memory.$0$memwr$\mem$picosoc.v:258$1102_EN[31:0]$1115 [24]
      New connections: { $techmap\soc.memory.$0$memwr$\mem$picosoc.v:258$1102_EN[31:0]$1115 [31:25] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:258$1102_EN[31:0]$1115 [23:0] } = { $techmap\soc.memory.$0$memwr$\mem$picosoc.v:258$1102_EN[31:0]$1115 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:258$1102_EN[31:0]$1115 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:258$1102_EN[31:0]$1115 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:258$1102_EN[31:0]$1115 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:258$1102_EN[31:0]$1115 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:258$1102_EN[31:0]$1115 [24] $techmap\soc.memory.$0$memwr$\mem$picosoc.v:258$1102_EN[31:0]$1115 [24] 24'000000000000000000000000 }
    New ctrl vector for $pmux cell $techmap\soc.simpleuart.$procmux$4948: $auto$opt_reduce.cc:132:opt_mux$6020
    New ctrl vector for $pmux cell $techmap\soc.spimemio.$procmux$5555: { $techmap\soc.spimemio.$procmux$5398_CMP $auto$opt_reduce.cc:132:opt_mux$6022 $techmap\soc.spimemio.$procmux$5384_CMP $techmap\soc.spimemio.$procmux$5381_CMP $techmap\soc.spimemio.$procmux$5378_CMP $techmap\soc.spimemio.$procmux$5375_CMP }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5085: $auto$opt_reduce.cc:132:opt_mux$6024
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$1904: { $techmap\soc.cpu.$eq$../picorv32.v:1308$1589_Y $auto$opt_reduce.cc:132:opt_mux$6026 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5230: { $techmap\soc.spimemio.xfer.$procmux$5088_CMP $auto$opt_reduce.cc:132:opt_mux$6028 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5240: { $techmap\soc.spimemio.xfer.$procmux$5088_CMP $auto$opt_reduce.cc:132:opt_mux$6030 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5249: $auto$opt_reduce.cc:132:opt_mux$6032
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5257: $auto$opt_reduce.cc:132:opt_mux$6034
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5265: $auto$opt_reduce.cc:132:opt_mux$6036
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5273: $auto$opt_reduce.cc:132:opt_mux$6038
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5282: { $techmap\soc.spimemio.xfer.$procmux$5088_CMP $auto$opt_reduce.cc:132:opt_mux$6040 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5292: { $techmap\soc.spimemio.xfer.$procmux$5088_CMP $auto$opt_reduce.cc:132:opt_mux$6042 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5951: { $techmap\soc.cpu.$procmux$1867_CMP $techmap\soc.cpu.$procmux$1865_CMP $techmap\soc.cpu.$procmux$1864_CMP $techmap\soc.cpu.$procmux$1863_CMP $techmap\soc.cpu.$procmux$1862_CMP $techmap\soc.cpu.$procmux$1860_CMP $techmap\soc.cpu.$eq$../picorv32.v:1308$1589_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5953: { $techmap\soc.cpu.$procmux$1867_CMP $techmap\soc.cpu.$procmux$1865_CMP $techmap\soc.cpu.$procmux$1864_CMP $techmap\soc.cpu.$procmux$1863_CMP $techmap\soc.cpu.$procmux$1862_CMP $techmap\soc.cpu.$procmux$1861_CMP $techmap\soc.cpu.$eq$../picorv32.v:1308$1589_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5955: { $techmap\soc.cpu.$procmux$1867_CMP $techmap\soc.cpu.$procmux$1865_CMP $techmap\soc.cpu.$procmux$1864_CMP $techmap\soc.cpu.$procmux$1862_CMP $techmap\soc.cpu.$procmux$1861_CMP $techmap\soc.cpu.$procmux$1860_CMP $techmap\soc.cpu.$eq$../picorv32.v:1308$1589_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5957: { \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai $techmap\soc.cpu.$logic_and$../picorv32.v:1697$1710_Y \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.is_lui_auipc_jal \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5961: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5963: { \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai \soc.cpu.is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5965: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5967: { \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai \soc.cpu.is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5969: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5971: { $techmap\soc.cpu.$logic_and$../picorv32.v:1697$1710_Y \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5973: { \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5975: { $techmap\soc.cpu.$logic_and$../picorv32.v:1315$1593_Y \soc.cpu.latched_branch \soc.cpu.irq_state [0] \soc.cpu.irq_state [1] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5985: { $techmap\soc.cpu.$procmux$3566_CMP $techmap\soc.cpu.$procmux$3543_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5989: { $techmap\soc.cpu.$procmux$3566_CMP $techmap\soc.cpu.$procmux$3543_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5991: { $techmap\soc.cpu.$procmux$3566_CMP $techmap\soc.cpu.$procmux$3543_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5993: { $techmap\soc.cpu.$procmux$4009_CMP $techmap\soc.cpu.$procmux$3848_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5995: { $techmap\soc.cpu.$procmux$3566_CMP $techmap\soc.cpu.$procmux$3548_CMP $techmap\soc.cpu.$procmux$3543_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5997: { $techmap\soc.cpu.$procmux$3566_CMP $techmap\soc.cpu.$procmux$3561_CMP $techmap\soc.cpu.$procmux$3548_CMP $techmap\soc.cpu.$procmux$3547_CMP $techmap\soc.cpu.$procmux$3543_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5999: { $techmap\soc.cpu.$procmux$3566_CMP $techmap\soc.cpu.$procmux$3548_CMP $techmap\soc.cpu.$procmux$3543_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6003: { $techmap\soc.cpu.$procmux$3566_CMP $techmap\soc.cpu.$procmux$3543_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6007: { $techmap\soc.cpu.$procmux$3566_CMP $techmap\soc.cpu.$procmux$3548_CMP $techmap\soc.cpu.$procmux$3543_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6015: { $techmap\soc.cpu.$procmux$3566_CMP $techmap\soc.cpu.$procmux$3543_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5957: { $techmap\soc.cpu.$logic_and$../picorv32.v:1697$1710_Y \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_slli_srli_srai \soc.cpu.is_lui_auipc_jal \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5961: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5965: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5969: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5971: { $techmap\soc.cpu.$logic_and$../picorv32.v:1697$1710_Y \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5973: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
  Optimizing cells in module \hx8kdemo.
Performed a total of 107 changes.

6.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
<suppressed ~234 debug messages>
Removed a total of 78 cells.

6.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $techmap\soc.cpu.$procdff$5786 ($dff) from module hx8kdemo.
Removing $techmap\soc.cpu.$procdff$5787 ($dff) from module hx8kdemo.
Replaced 2 DFF cells.

6.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..
Removed 2 unused cells and 727 unused wires.
<suppressed ~6 debug messages>

6.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.

6.10.9. Rerunning OPT passes. (Maybe there is more to do..)

6.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hx8kdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $techmap\soc.cpu.$procmux$4654: { \soc.cpu.pcpi_mul.pcpi_wr \soc.cpu.pcpi_div.pcpi_wr } -> 2'11
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~304 debug messages>

6.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hx8kdemo.
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$1881: { $techmap\soc.cpu.$eq$../picorv32.v:1308$1589_Y $auto$opt_reduce.cc:132:opt_mux$6044 $auto$opt_reduce.cc:132:opt_mux$5950 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2399: $auto$opt_reduce.cc:132:opt_mux$6046
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2416: { $techmap\soc.cpu.$procmux$1863_CMP $auto$opt_reduce.cc:132:opt_mux$6048 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2844: { $techmap\soc.cpu.$eq$../picorv32.v:1308$1589_Y $techmap\soc.cpu.$procmux$1865_CMP $techmap\soc.cpu.$procmux$1864_CMP $techmap\soc.cpu.$procmux$1863_CMP $techmap\soc.cpu.$procmux$1862_CMP $auto$opt_reduce.cc:132:opt_mux$6050 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3429: $auto$opt_reduce.cc:132:opt_mux$6052
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3734: $auto$opt_reduce.cc:132:opt_mux$6054
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4439: { $techmap\soc.cpu.$procmux$3563_CMP $auto$opt_reduce.cc:132:opt_mux$6056 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4654: $auto$opt_reduce.cc:132:opt_mux$6058
    New ctrl vector for $pmux cell $techmap\soc.spimemio.$procmux$5360: $auto$opt_reduce.cc:132:opt_mux$6060
    New ctrl vector for $pmux cell $techmap\soc.spimemio.$procmux$5462: { $techmap\soc.spimemio.$procmux$5398_CMP $auto$opt_reduce.cc:132:opt_mux$6062 $techmap\soc.spimemio.$procmux$5375_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$6057: { \soc.cpu.pcpi_div.pcpi_wr \soc.cpu.pcpi_mul.pcpi_wr }
  Optimizing cells in module \hx8kdemo.
Performed a total of 11 changes.

6.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

6.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

6.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

6.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.

6.10.16. Rerunning OPT passes. (Maybe there is more to do..)

6.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hx8kdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~304 debug messages>

6.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hx8kdemo.
Performed a total of 0 changes.

6.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

6.10.20. Executing OPT_RMDFF pass (remove dff with constant values).

6.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

6.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.

6.10.23. Rerunning OPT passes. (Maybe there is more to do..)

6.10.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hx8kdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$4654.
Removed 1 multiplexer ports.
<suppressed ~304 debug messages>

6.10.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hx8kdemo.
Performed a total of 0 changes.

6.10.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
Removed a total of 0 cells.

6.10.27. Executing OPT_RMDFF pass (remove dff with constant values).

6.10.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..

6.10.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.

6.10.30. Rerunning OPT passes. (Maybe there is more to do..)

6.10.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hx8kdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~304 debug messages>

6.10.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hx8kdemo.
Performed a total of 0 changes.

6.10.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
Removed a total of 0 cells.

6.10.34. Executing OPT_RMDFF pass (remove dff with constant values).

6.10.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..

6.10.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.

6.10.37. Finished OPT passes. (There is nothing left to do.)

6.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 14 address bits (of 22) from memory read port hx8kdemo.$techmap\soc.memory.$memrd$\mem$picosoc.v:254$1116 (soc.memory.mem).
Removed top 14 address bits (of 22) from memory write port hx8kdemo.$techmap\soc.memory.$memwr$\mem$picosoc.v:255$1117 (soc.memory.mem).
Removed top 14 address bits (of 22) from memory write port hx8kdemo.$techmap\soc.memory.$memwr$\mem$picosoc.v:256$1118 (soc.memory.mem).
Removed top 14 address bits (of 22) from memory write port hx8kdemo.$techmap\soc.memory.$memwr$\mem$picosoc.v:257$1119 (soc.memory.mem).
Removed top 14 address bits (of 22) from memory write port hx8kdemo.$techmap\soc.memory.$memwr$\mem$picosoc.v:258$1120 (soc.memory.mem).
Removed top 5 bits (of 6) from port B of cell hx8kdemo.$add$hx8kdemo.v:49$4 ($add).
Removed top 6 bits (of 8) from port B of cell hx8kdemo.$eq$hx8kdemo.v:82$9 ($eq).
Removed top 21 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.$lt$picosoc.v:208$175 ($lt).
Removed top 6 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.$lt$picosoc.v:159$165 ($lt).
Removed top 21 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.$ge$picosoc.v:159$163 ($ge).
Removed top 6 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.$eq$picosoc.v:121$146 ($eq).
Removed top 6 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.$eq$picosoc.v:118$144 ($eq).
Removed top 6 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.$eq$picosoc.v:115$142 ($eq).
Removed top 7 bits (of 8) from port B of cell hx8kdemo.$techmap\soc.$gt$picosoc.v:110$140 ($gt).
Removed top 16 bits (of 32) from mux cell hx8kdemo.$techmap\soc.cpu.$procmux$4620 ($pmux).
Removed top 1 bits (of 2) from port B of cell hx8kdemo.$techmap\soc.cpu.$procmux$4614_CMP0 ($eq).
Removed top 24 bits (of 32) from mux cell hx8kdemo.$techmap\soc.cpu.$procmux$4611 ($pmux).
Removed top 2 bits (of 6) from mux cell hx8kdemo.$techmap\soc.cpu.$procmux$4595 ($mux).
Removed top 1 bits (of 2) from port B of cell hx8kdemo.$techmap\soc.cpu.$procmux$4280_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell hx8kdemo.$techmap\soc.cpu.$procmux$3848_CMP0 ($eq).
Removed top 2 bits (of 4) from mux cell hx8kdemo.$techmap\soc.cpu.$procmux$3624 ($mux).
Removed top 1 bits (of 3) from port B of cell hx8kdemo.$techmap\soc.cpu.$procmux$3566_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell hx8kdemo.$techmap\soc.cpu.$procmux$3563_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell hx8kdemo.$techmap\soc.cpu.$procmux$3561_CMP0 ($eq).
Removed cell hx8kdemo.$techmap\soc.cpu.$procmux$3473 ($mux).
Removed top 4 bits (of 8) from mux cell hx8kdemo.$techmap\soc.cpu.$procmux$2881 ($mux).
Removed cell hx8kdemo.$techmap\soc.cpu.$procmux$2604 ($mux).
Removed cell hx8kdemo.$techmap\soc.cpu.$procmux$2591 ($mux).
Removed cell hx8kdemo.$techmap\soc.cpu.$procmux$2585 ($mux).
Removed cell hx8kdemo.$techmap\soc.cpu.$procmux$2572 ($mux).
Removed cell hx8kdemo.$techmap\soc.cpu.$procmux$2569 ($mux).
Removed cell hx8kdemo.$techmap\soc.cpu.$procmux$2567 ($mux).
Removed cell hx8kdemo.$techmap\soc.cpu.$procmux$2541 ($mux).
Removed cell hx8kdemo.$techmap\soc.cpu.$procmux$2539 ($mux).
Removed cell hx8kdemo.$techmap\soc.cpu.$procmux$2531 ($mux).
Removed cell hx8kdemo.$techmap\soc.cpu.$procmux$2526 ($mux).
Removed cell hx8kdemo.$techmap\soc.cpu.$procmux$2524 ($mux).
Removed cell hx8kdemo.$techmap\soc.cpu.$procmux$2256 ($mux).
Removed cell hx8kdemo.$techmap\soc.cpu.$procmux$2253 ($mux).
Removed top 2 bits (of 8) from port B of cell hx8kdemo.$techmap\soc.cpu.$procmux$1865_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell hx8kdemo.$techmap\soc.cpu.$procmux$1864_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell hx8kdemo.$techmap\soc.cpu.$procmux$1863_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell hx8kdemo.$techmap\soc.cpu.$procmux$1862_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell hx8kdemo.$techmap\soc.cpu.$procmux$1861_CMP0 ($eq).
Removed top 7 bits (of 8) from port B of cell hx8kdemo.$techmap\soc.cpu.$procmux$1860_CMP0 ($eq).
Removed top 1 bits (of 33) from port Y of cell hx8kdemo.$techmap\soc.cpu.$sshr$../picorv32.v:1240$1815 ($sshr).
Removed top 1 bits (of 2) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:1924$1782 ($eq).
Removed top 31 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.cpu.$sub$../picorv32.v:1851$1757 ($sub).
Removed top 27 bits (of 32) from port Y of cell hx8kdemo.$techmap\soc.cpu.$sub$../picorv32.v:1851$1757 ($sub).
Removed top 29 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.cpu.$sub$../picorv32.v:1843$1750 ($sub).
Removed top 27 bits (of 32) from port Y of cell hx8kdemo.$techmap\soc.cpu.$sub$../picorv32.v:1843$1750 ($sub).
Removed top 29 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.cpu.$ge$../picorv32.v:1836$1742 ($ge).
Removed top 31 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.cpu.$add$../picorv32.v:1565$1684 ($add).
Removed top 29 bits (of 32) from mux cell hx8kdemo.$techmap\soc.cpu.$ternary$../picorv32.v:1553$1680 ($mux).
Removed top 29 bits (of 32) from mux cell hx8kdemo.$techmap\soc.cpu.$ternary$../picorv32.v:1547$1675 ($mux).
Removed top 1 bits (of 2) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:1542$1672 ($eq).
Removed top 31 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.cpu.$sub$../picorv32.v:1438$1632 ($sub).
Removed top 31 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.cpu.$add$../picorv32.v:1428$1626 ($add).
Removed top 31 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.cpu.$sub$../picorv32.v:1421$1624 ($sub).
Removed top 28 bits (of 32) from port Y of cell hx8kdemo.$techmap\soc.cpu.$sub$../picorv32.v:1421$1624 ($sub).
Removed top 29 bits (of 32) from mux cell hx8kdemo.$techmap\soc.cpu.$ternary$../picorv32.v:1312$1590 ($mux).
Removed top 1 bits (of 8) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:1308$1589 ($eq).
Removed top 4 bits (of 7) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:1090$1509 ($eq).
Removed top 5 bits (of 7) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:1089$1505 ($eq).
Removed top 3 bits (of 7) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:1089$1504 ($eq).
Removed top 1 bits (of 7) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:1064$1418 ($eq).
Removed top 1 bits (of 3) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:1057$1400 ($eq).
Removed top 1 bits (of 3) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:1047$1384 ($eq).
Removed top 2 bits (of 3) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:1039$1370 ($eq).
Removed top 28 bits (of 32) from port A of cell hx8kdemo.$techmap\soc.cpu.$add$../picorv32.v:910$1327 ($add).
Removed top 27 bits (of 32) from port Y of cell hx8kdemo.$techmap\soc.cpu.$add$../picorv32.v:910$1327 ($add).
Removed top 28 bits (of 32) from port A of cell hx8kdemo.$techmap\soc.cpu.$add$../picorv32.v:906$1326 ($add).
Removed top 27 bits (of 32) from port Y of cell hx8kdemo.$techmap\soc.cpu.$add$../picorv32.v:906$1326 ($add).
Removed top 1 bits (of 7) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:876$1313 ($eq).
Removed top 2 bits (of 7) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:875$1312 ($eq).
Removed top 1 bits (of 7) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:874$1311 ($eq).
Removed top 5 bits (of 7) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:873$1310 ($eq).
Removed top 4 bits (of 7) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:870$1306 ($eq).
Removed top 5 bits (of 7) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:869$1302 ($eq).
Removed top 3 bits (of 7) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:869$1301 ($eq).
Removed top 2 bits (of 7) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:866$1296 ($eq).
Removed top 1 bits (of 7) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:865$1295 ($eq).
Removed top 30 bits (of 32) from mux cell hx8kdemo.$techmap\soc.cpu.$ternary$../picorv32.v:617$1276 ($mux).
Removed top 1 bits (of 7) from mux cell hx8kdemo.$techmap\soc.cpu.$ternary$../picorv32.v:491$1232 ($mux).
Removed top 1 bits (of 2) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:488$1228 ($eq).
Removed top 1 bits (of 3) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:486$1226 ($eq).
Removed top 1 bits (of 2) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:478$1224 ($eq).
Removed top 3 bits (of 5) from port B of cell hx8kdemo.$techmap\soc.cpu.$eq$../picorv32.v:465$1222 ($eq).
Removed top 3 bits (of 4) from port A of cell hx8kdemo.$techmap\soc.cpu.$shl$../picorv32.v:419$1215 ($shl).
Removed top 16 bits (of 32) from mux cell hx8kdemo.$techmap\soc.cpu.$ternary$../picorv32.v:388$1207 ($mux).
Removed top 16 bits (of 32) from mux cell hx8kdemo.$techmap\soc.cpu.$ternary$../picorv32.v:388$1205 ($mux).
Removed top 7 bits (of 32) from FF cell hx8kdemo.$techmap\soc.memory.$procdff$5852 ($dff).
Removed top 14 bits (of 22) from FF cell hx8kdemo.$techmap\soc.memory.$procdff$5850 ($dff).
Removed top 8 bits (of 32) from FF cell hx8kdemo.$techmap\soc.memory.$procdff$5849 ($dff).
Removed top 14 bits (of 22) from FF cell hx8kdemo.$techmap\soc.memory.$procdff$5847 ($dff).
Removed top 16 bits (of 32) from FF cell hx8kdemo.$techmap\soc.memory.$procdff$5846 ($dff).
Removed top 14 bits (of 22) from FF cell hx8kdemo.$techmap\soc.memory.$procdff$5844 ($dff).
Removed top 24 bits (of 32) from FF cell hx8kdemo.$techmap\soc.memory.$procdff$5842 ($dff).
Removed top 14 bits (of 22) from FF cell hx8kdemo.$techmap\soc.memory.$procdff$5840 ($dff).
Removed cell hx8kdemo.$techmap\soc.memory.$procmux$4679 ($mux).
Removed cell hx8kdemo.$techmap\soc.memory.$procmux$4677 ($mux).
Removed cell hx8kdemo.$techmap\soc.memory.$procmux$4673 ($mux).
Removed cell hx8kdemo.$techmap\soc.memory.$procmux$4671 ($mux).
Removed cell hx8kdemo.$techmap\soc.memory.$procmux$4667 ($mux).
Removed cell hx8kdemo.$techmap\soc.memory.$procmux$4665 ($mux).
Removed cell hx8kdemo.$techmap\soc.memory.$procmux$4661 ($mux).
Removed cell hx8kdemo.$techmap\soc.memory.$procmux$4659 ($mux).
Removed top 3 bits (of 4) from port B of cell hx8kdemo.$techmap\soc.simpleuart.$procmux$4922_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.simpleuart.$sub$simpleuart.v:132$138 ($sub).
Removed top 28 bits (of 32) from port Y of cell hx8kdemo.$techmap\soc.simpleuart.$sub$simpleuart.v:132$138 ($sub).
Removed top 31 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.simpleuart.$add$simpleuart.v:112$130 ($add).
Removed top 31 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.simpleuart.$add$simpleuart.v:99$127 ($add).
Removed top 28 bits (of 32) from port Y of cell hx8kdemo.$techmap\soc.simpleuart.$add$simpleuart.v:99$127 ($add).
Removed top 31 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.simpleuart.$add$simpleuart.v:74$121 ($add).
Removed top 1 bits (of 2) from port B of cell hx8kdemo.$techmap\soc.spimemio.$procmux$5589_CMP0 ($eq).
Removed top 3 bits (of 4) from mux cell hx8kdemo.$techmap\soc.spimemio.$procmux$5415 ($mux).
Removed top 2 bits (of 4) from port B of cell hx8kdemo.$techmap\soc.spimemio.$procmux$5407_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell hx8kdemo.$techmap\soc.spimemio.$procmux$5401_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell hx8kdemo.$techmap\soc.spimemio.$procmux$5398_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell hx8kdemo.$techmap\soc.spimemio.$procmux$5393_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell hx8kdemo.$techmap\soc.spimemio.$procmux$5390_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell hx8kdemo.$techmap\soc.spimemio.$procmux$5364_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell hx8kdemo.$techmap\soc.spimemio.$procmux$5361_CMP0 ($eq).
Removed top 1 bits (of 8) from mux cell hx8kdemo.$techmap\soc.spimemio.$ternary$spimemio.v:316$61 ($mux).
Removed top 31 bits (of 32) from mux cell hx8kdemo.$techmap\soc.spimemio.$ternary$spimemio.v:310$60 ($mux).
Removed top 8 bits (of 32) from mux cell hx8kdemo.$techmap\soc.spimemio.$ternary$spimemio.v:226$56 ($mux).
Removed top 29 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.spimemio.$add$spimemio.v:226$54 ($add).
Removed top 7 bits (of 32) from port Y of cell hx8kdemo.$techmap\soc.spimemio.$add$spimemio.v:226$54 ($add).
Removed top 1 bits (of 4) from port B of cell hx8kdemo.$techmap\soc.spimemio.$eq$spimemio.v:224$52 ($eq).
Removed top 2 bits (of 4) from port B of cell hx8kdemo.$techmap\soc.spimemio.$eq$spimemio.v:223$50 ($eq).
Removed top 2 bits (of 4) from port B of cell hx8kdemo.$techmap\soc.spimemio.$eq$spimemio.v:222$48 ($eq).
Removed top 3 bits (of 4) from port B of cell hx8kdemo.$techmap\soc.spimemio.$eq$spimemio.v:221$46 ($eq).
Removed top 7 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.spimemio.$ne$spimemio.v:72$18 ($ne).
Removed cell hx8kdemo.$techmap\soc.cpu.pcpi_div.$procmux$4691 ($mux).
Removed cell hx8kdemo.$techmap\soc.cpu.pcpi_div.$procmux$4688 ($mux).
Removed cell hx8kdemo.$techmap\soc.cpu.pcpi_div.$procmux$4685 ($mux).
Removed top 31 bits (of 63) from port Y of cell hx8kdemo.$techmap\soc.cpu.pcpi_div.$sub$../picorv32.v:2493$1056 ($sub).
Removed top 31 bits (of 63) from port B of cell hx8kdemo.$techmap\soc.cpu.pcpi_div.$sub$../picorv32.v:2493$1056 ($sub).
Removed top 31 bits (of 63) from mux cell hx8kdemo.$techmap\soc.cpu.pcpi_div.$ternary$../picorv32.v:2469$1040 ($mux).
Removed top 31 bits (of 63) from port A of cell hx8kdemo.$techmap\soc.cpu.pcpi_div.$neg$../picorv32.v:2469$1038 ($neg).
Removed top 31 bits (of 63) from port Y of cell hx8kdemo.$techmap\soc.cpu.pcpi_div.$neg$../picorv32.v:2469$1038 ($neg).
Removed top 6 bits (of 7) from port B of cell hx8kdemo.$techmap\soc.cpu.pcpi_div.$eq$../picorv32.v:2438$1025 ($eq).
Removed top 1 bits (of 7) from port B of cell hx8kdemo.$techmap\soc.cpu.pcpi_div.$eq$../picorv32.v:2438$1023 ($eq).
Removed top 2 bits (of 3) from port B of cell hx8kdemo.$techmap\soc.cpu.pcpi_mul.$procmux$4858_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell hx8kdemo.$techmap\soc.cpu.pcpi_mul.$procmux$4852_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell hx8kdemo.$techmap\soc.cpu.pcpi_mul.$procmux$4847_CMP0 ($eq).
Removed top 3 bits (of 64) from mux cell hx8kdemo.$techmap\soc.cpu.pcpi_mul.$procmux$4817 ($mux).
Removed top 32 bits (of 64) from mux cell hx8kdemo.$techmap\soc.cpu.pcpi_mul.$ternary$../picorv32.v:2307$981 ($mux).
Removed top 31 bits (of 32) from port B of cell hx8kdemo.$techmap\soc.cpu.pcpi_mul.$sub$../picorv32.v:2293$977 ($sub).
Removed top 25 bits (of 32) from port Y of cell hx8kdemo.$techmap\soc.cpu.pcpi_mul.$sub$../picorv32.v:2293$977 ($sub).
Removed top 26 bits (of 32) from mux cell hx8kdemo.$techmap\soc.cpu.pcpi_mul.$ternary$../picorv32.v:2285$975 ($mux).
Removed top 1 bits (of 5) from port Y of cell hx8kdemo.$techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$969 ($add).
Removed top 1 bits (of 5) from port A of cell hx8kdemo.$techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$969 ($add).
Removed top 1 bits (of 5) from port Y of cell hx8kdemo.$techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$968 ($add).
Removed top 31 bits (of 32) from FF cell hx8kdemo.$techmap\soc.cpu.cpuregs.$procdff$5886 ($dff).
Removed cell hx8kdemo.$techmap\soc.cpu.cpuregs.$procmux$4872 ($mux).
Removed cell hx8kdemo.$techmap\soc.cpu.cpuregs.$procmux$4870 ($mux).
Removed cell hx8kdemo.$techmap\soc.spimemio.xfer.$procmux$5160 ($mux).
Removed cell hx8kdemo.$techmap\soc.spimemio.xfer.$procmux$5158 ($mux).
Removed cell hx8kdemo.$techmap\soc.spimemio.xfer.$procmux$5126 ($mux).
Removed cell hx8kdemo.$techmap\soc.spimemio.xfer.$procmux$5124 ($mux).
Removed cell hx8kdemo.$techmap\soc.spimemio.xfer.$procmux$5089 ($mux).
Removed top 1 bits (of 2) from port B of cell hx8kdemo.$techmap\soc.spimemio.xfer.$procmux$5087_CMP0 ($eq).
Removed cell hx8kdemo.$techmap\soc.spimemio.xfer.$procmux$5085 ($mux).
Removed cell hx8kdemo.$techmap\soc.spimemio.xfer.$procmux$5083 ($mux).
Removed top 28 bits (of 32) from mux cell hx8kdemo.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:567$112 ($mux).
Removed top 31 bits (of 32) from mux cell hx8kdemo.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:551$100 ($mux).
Removed top 2 bits (of 4) from port B of cell hx8kdemo.$techmap\soc.spimemio.xfer.$sub$spimemio.v:524$95 ($sub).
Removed top 1 bits (of 4) from port B of cell hx8kdemo.$techmap\soc.spimemio.xfer.$sub$spimemio.v:491$83 ($sub).
Removed top 3 bits (of 4) from port B of cell hx8kdemo.$techmap\soc.spimemio.xfer.$sub$spimemio.v:471$76 ($sub).
Removed top 7 bits (of 24) from FF cell hx8kdemo.$techmap\soc.memory.$procdff$5849 ($dff).
Removed top 7 bits (of 16) from FF cell hx8kdemo.$techmap\soc.memory.$procdff$5846 ($dff).
Removed top 7 bits (of 8) from FF cell hx8kdemo.$techmap\soc.memory.$procdff$5842 ($dff).
Removed top 5 bits (of 6) from wire hx8kdemo.$logic_not$hx8kdemo.v:49$3_Y.
Removed top 16 bits (of 32) from wire hx8kdemo.$techmap\soc.cpu.$2\mem_rdata_word[31:0].
Removed top 24 bits (of 32) from wire hx8kdemo.$techmap\soc.cpu.$3\mem_rdata_word[31:0].
Removed top 27 bits (of 32) from wire hx8kdemo.$techmap\soc.cpu.$add$../picorv32.v:906$1326_Y.
Removed top 27 bits (of 32) from wire hx8kdemo.$techmap\soc.cpu.$add$../picorv32.v:910$1327_Y.
Removed top 4 bits (of 8) from wire hx8kdemo.$techmap\soc.cpu.$procmux$2881_Y.
Removed top 2 bits (of 4) from wire hx8kdemo.$techmap\soc.cpu.$procmux$3624_Y.
Removed top 28 bits (of 32) from wire hx8kdemo.$techmap\soc.cpu.$sub$../picorv32.v:1421$1624_Y.
Removed top 27 bits (of 32) from wire hx8kdemo.$techmap\soc.cpu.$sub$../picorv32.v:1843$1750_Y.
Removed top 27 bits (of 32) from wire hx8kdemo.$techmap\soc.cpu.$sub$../picorv32.v:1851$1757_Y.
Removed top 29 bits (of 32) from wire hx8kdemo.$techmap\soc.cpu.$ternary$../picorv32.v:1312$1590_Y.
Removed top 29 bits (of 32) from wire hx8kdemo.$techmap\soc.cpu.$ternary$../picorv32.v:1547$1675_Y.
Removed top 29 bits (of 32) from wire hx8kdemo.$techmap\soc.cpu.$ternary$../picorv32.v:1553$1680_Y.
Removed top 31 bits (of 63) from wire hx8kdemo.$techmap\soc.cpu.pcpi_div.$neg$../picorv32.v:2469$1038_Y.
Removed top 1 bits (of 5) from wire hx8kdemo.$techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$968_Y.
Removed top 3 bits (of 64) from wire hx8kdemo.$techmap\soc.cpu.pcpi_mul.$procmux$4817_Y.
Removed top 28 bits (of 64) from wire hx8kdemo.$techmap\soc.cpu.pcpi_mul.$procmux$4823_Y.
Removed top 25 bits (of 32) from wire hx8kdemo.$techmap\soc.cpu.pcpi_mul.$sub$../picorv32.v:2293$977_Y.
Removed top 26 bits (of 32) from wire hx8kdemo.$techmap\soc.cpu.pcpi_mul.$ternary$../picorv32.v:2285$975_Y.
Removed top 32 bits (of 64) from wire hx8kdemo.$techmap\soc.cpu.pcpi_mul.$ternary$../picorv32.v:2307$981_Y.
Removed top 14 bits (of 22) from wire hx8kdemo.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:255$1099_ADDR[21:0]$1104.
Removed top 24 bits (of 32) from wire hx8kdemo.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:255$1099_DATA[31:0]$1105.
Removed top 24 bits (of 32) from wire hx8kdemo.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:255$1099_EN[31:0]$1106.
Removed top 14 bits (of 22) from wire hx8kdemo.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:256$1100_ADDR[21:0]$1107.
Removed top 16 bits (of 32) from wire hx8kdemo.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:256$1100_DATA[31:0]$1108.
Removed top 16 bits (of 32) from wire hx8kdemo.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:256$1100_EN[31:0]$1109.
Removed top 14 bits (of 22) from wire hx8kdemo.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:257$1101_ADDR[21:0]$1110.
Removed top 8 bits (of 32) from wire hx8kdemo.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:257$1101_DATA[31:0]$1111.
Removed top 8 bits (of 32) from wire hx8kdemo.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:257$1101_EN[31:0]$1112.
Removed top 14 bits (of 22) from wire hx8kdemo.$techmap\soc.memory.$0$memwr$\mem$picosoc.v:258$1102_ADDR[21:0]$1113.
Removed top 14 bits (of 22) from wire hx8kdemo.$techmap\soc.memory.$memwr$\mem$picosoc.v:255$1099_ADDR.
Removed top 6 bits (of 32) from wire hx8kdemo.$techmap\soc.memory.$memwr$\mem$picosoc.v:255$1099_DATA.
Removed top 14 bits (of 22) from wire hx8kdemo.$techmap\soc.memory.$memwr$\mem$picosoc.v:256$1100_ADDR.
Removed top 6 bits (of 32) from wire hx8kdemo.$techmap\soc.memory.$memwr$\mem$picosoc.v:256$1100_DATA.
Removed top 30 bits (of 32) from wire hx8kdemo.$techmap\soc.memory.$memwr$\mem$picosoc.v:256$1100_EN.
Removed top 14 bits (of 22) from wire hx8kdemo.$techmap\soc.memory.$memwr$\mem$picosoc.v:257$1101_ADDR.
Removed top 6 bits (of 32) from wire hx8kdemo.$techmap\soc.memory.$memwr$\mem$picosoc.v:257$1101_DATA.
Removed top 30 bits (of 32) from wire hx8kdemo.$techmap\soc.memory.$memwr$\mem$picosoc.v:257$1101_EN.
Removed top 14 bits (of 22) from wire hx8kdemo.$techmap\soc.memory.$memwr$\mem$picosoc.v:258$1102_ADDR.
Removed top 6 bits (of 32) from wire hx8kdemo.$techmap\soc.memory.$memwr$\mem$picosoc.v:258$1102_DATA.
Removed top 14 bits (of 32) from wire hx8kdemo.$techmap\soc.memory.$memwr$\mem$picosoc.v:258$1102_EN.
Removed top 28 bits (of 32) from wire hx8kdemo.$techmap\soc.simpleuart.$add$simpleuart.v:99$127_Y.
Removed top 28 bits (of 32) from wire hx8kdemo.$techmap\soc.simpleuart.$sub$simpleuart.v:132$138_Y.
Removed top 7 bits (of 32) from wire hx8kdemo.$techmap\soc.spimemio.$add$spimemio.v:226$54_Y.
Removed top 3 bits (of 4) from wire hx8kdemo.$techmap\soc.spimemio.$procmux$5415_Y.
Removed top 9 bits (of 32) from wire hx8kdemo.$techmap\soc.spimemio.$ternary$spimemio.v:226$56_Y.
Removed top 31 bits (of 32) from wire hx8kdemo.$techmap\soc.spimemio.$ternary$spimemio.v:310$60_Y.
Removed top 1 bits (of 8) from wire hx8kdemo.$techmap\soc.spimemio.$ternary$spimemio.v:316$61_Y.
Removed top 3 bits (of 4) from wire hx8kdemo.$techmap\soc.spimemio.xfer.$reduce_or$spimemio.v:471$75_Y.
Removed top 31 bits (of 32) from wire hx8kdemo.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:551$100_Y.
Removed top 28 bits (of 32) from wire hx8kdemo.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:567$112_Y.
Removed top 16 bits (of 32) from wire hx8kdemo.soc.cpu.mem_rdata_latched.
Removed top 4 bits (of 64) from wire hx8kdemo.soc.cpu.pcpi_mul.next_rdt.
Removed top 3 bits (of 64) from wire hx8kdemo.soc.cpu.pcpi_mul.next_rdx.
Removed top 1 bits (of 64) from wire hx8kdemo.soc.cpu.pcpi_mul.next_rs1.
Removed top 31 bits (of 32) from wire hx8kdemo.soc.spimem_rdata.
Removed top 31 bits (of 32) from wire hx8kdemo.soc.spimemio.rdata.

6.12. Executing PEEPOPT pass (run peephole optimizers).
dffcemux pattern in hx8kdemo: dff=$techmap\soc.cpu.pcpi_mul.$procdff$5874, cemux=$techmap\soc.cpu.pcpi_mul.$procmux$4820, rstmux=n/a; removed top 2 bits.
dffcemux pattern in hx8kdemo: dff=$techmap\soc.cpu.pcpi_mul.$procdff$5874, cemux=$techmap\soc.cpu.pcpi_mul.$procmux$4820, rstmux=n/a; removed 1 constant bits.

6.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..
Removed 2 unused cells and 93 unused wires.
<suppressed ~3 debug messages>

6.14. Executing SHARE pass (SAT-based resource sharing).
Found 4 cells in module hx8kdemo that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:239$188 ($memrd):
    Found 4 activation_patterns using ctrl signal { $auto$opt_reduce.cc:132:opt_mux$5972 \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$../picorv32.v:1386$1608_Y $techmap\soc.cpu.$procmux$1864_CMP $techmap\soc.cpu.$procmux$1865_CMP $techmap\soc.cpu.$procmux$2592_CTRL \resetn }.
    Found 1 candidates: $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:238$187
    Analyzing resource sharing with $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:238$187 ($memrd):
      Found 4 activation_patterns using ctrl signal { $auto$opt_reduce.cc:132:opt_mux$5962 \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$../picorv32.v:1385$1606_Y $techmap\soc.cpu.$procmux$1865_CMP \resetn }.
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:239$188: { $auto$opt_reduce.cc:132:opt_mux$5972 \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$../picorv32.v:1386$1608_Y $techmap\soc.cpu.$procmux$1865_CMP $techmap\soc.cpu.$procmux$2592_CTRL \resetn } = 6'001101
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:239$188: { $techmap\soc.cpu.$reduce_bool$../picorv32.v:1386$1608_Y $techmap\soc.cpu.$procmux$1864_CMP \resetn } = 3'111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:239$188: { $techmap\soc.cpu.$reduce_bool$../picorv32.v:1386$1608_Y $techmap\soc.cpu.$procmux$1865_CMP } = 2'11
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:239$188: { $techmap\soc.cpu.$reduce_bool$../picorv32.v:1386$1608_Y $techmap\soc.cpu.$procmux$1864_CMP } = 2'11
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:238$187: { \soc.cpu.instr_retirq $techmap\soc.cpu.$reduce_bool$../picorv32.v:1385$1606_Y $techmap\soc.cpu.$procmux$1865_CMP \resetn } = 4'1111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:238$187: { $auto$opt_reduce.cc:132:opt_mux$5962 \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$../picorv32.v:1385$1606_Y $techmap\soc.cpu.$procmux$1865_CMP \resetn } = 5'00111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:238$187: { \soc.cpu.instr_maskirq $techmap\soc.cpu.$reduce_bool$../picorv32.v:1385$1606_Y $techmap\soc.cpu.$procmux$1865_CMP \resetn } = 4'1111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:238$187: { \soc.cpu.instr_timer $techmap\soc.cpu.$reduce_bool$../picorv32.v:1385$1606_Y $techmap\soc.cpu.$procmux$1865_CMP \resetn } = 4'1111
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$1865_CMP vs. $techmap\soc.cpu.$procmux$1864_CMP
      Adding exclusive control bits: \soc.cpu.instr_timer vs. \soc.cpu.instr_maskirq
      Adding exclusive control bits: \soc.cpu.instr_timer vs. \soc.cpu.instr_retirq
      Adding exclusive control bits: \soc.cpu.instr_maskirq vs. \soc.cpu.instr_retirq
      Adding exclusive control bits: \soc.cpu.instr_trap vs. \soc.cpu.instr_timer
      Adding exclusive control bits: \soc.cpu.instr_trap vs. \soc.cpu.instr_maskirq
      Adding exclusive control bits: \soc.cpu.instr_trap vs. \soc.cpu.instr_retirq
      Adding exclusive control bits: \soc.cpu.instr_rdinstrh vs. \soc.cpu.instr_rdinstr
      Adding exclusive control bits: \soc.cpu.instr_rdinstrh vs. \soc.cpu.instr_rdcycleh
      Adding exclusive control bits: \soc.cpu.instr_rdinstrh vs. \soc.cpu.instr_rdcycle
      Adding exclusive control bits: \soc.cpu.instr_rdinstr vs. \soc.cpu.instr_rdcycleh
      Adding exclusive control bits: \soc.cpu.instr_rdinstr vs. \soc.cpu.instr_rdcycle
      Adding exclusive control bits: \soc.cpu.instr_rdcycleh vs. \soc.cpu.instr_rdcycle
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$1865_CMP vs. $techmap\soc.cpu.$procmux$1864_CMP
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$1865_CMP vs. $techmap\soc.cpu.$procmux$1864_CMP
      Adding exclusive control bits: \soc.cpu.instr_trap vs. $auto$opt_reduce.cc:132:opt_mux$5962
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$1865_CMP vs. $techmap\soc.cpu.$procmux$1864_CMP
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$../picorv32.v:1697$1710_Y vs. $auto$opt_reduce.cc:132:opt_mux$5962
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$../picorv32.v:1697$1710_Y vs. \soc.cpu.instr_trap
      Adding exclusive control bits: \soc.cpu.instr_trap vs. $auto$opt_reduce.cc:132:opt_mux$5962
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$1865_CMP vs. $techmap\soc.cpu.$procmux$1864_CMP
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$../picorv32.v:1697$1710_Y vs. $auto$opt_reduce.cc:132:opt_mux$5962
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$../picorv32.v:1697$1710_Y vs. \soc.cpu.instr_trap
      Adding exclusive control bits: \soc.cpu.instr_trap vs. $auto$opt_reduce.cc:132:opt_mux$5962
      Adding exclusive control bits: \soc.cpu.instr_sw vs. \soc.cpu.instr_sh
      Adding exclusive control bits: \soc.cpu.instr_sw vs. \soc.cpu.instr_sb
      Adding exclusive control bits: \soc.cpu.instr_sh vs. \soc.cpu.instr_sb
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$1865_CMP vs. $techmap\soc.cpu.$procmux$1864_CMP
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2592_CTRL vs. $auto$opt_reduce.cc:132:opt_mux$5972
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2592_CTRL vs. \soc.cpu.is_lui_auipc_jal
      Adding exclusive control bits: \soc.cpu.is_lui_auipc_jal vs. $auto$opt_reduce.cc:132:opt_mux$5972
      Adding exclusive control bits: \soc.cpu.is_lui_auipc_jal vs. $auto$opt_reduce.cc:132:opt_mux$5962
      Adding exclusive control bits: \soc.cpu.instr_bgeu vs. \soc.cpu.instr_bge
      Adding exclusive control bits: \soc.cpu.instr_bgeu vs. \soc.cpu.instr_bne
      Adding exclusive control bits: \soc.cpu.instr_bgeu vs. \soc.cpu.instr_beq
      Adding exclusive control bits: \soc.cpu.instr_bge vs. \soc.cpu.instr_bne
      Adding exclusive control bits: \soc.cpu.instr_bge vs. \soc.cpu.instr_beq
      Adding exclusive control bits: \soc.cpu.instr_bne vs. \soc.cpu.instr_beq
      Size of SAT problem: 11 cells, 227 variables, 577 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $auto$opt_reduce.cc:132:opt_mux$5972 $auto$opt_reduce.cc:132:opt_mux$5962 \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$../picorv32.v:1385$1606_Y $techmap\soc.cpu.$reduce_bool$../picorv32.v:1386$1608_Y $techmap\soc.cpu.$procmux$1864_CMP $techmap\soc.cpu.$procmux$1865_CMP $techmap\soc.cpu.$procmux$2592_CTRL \resetn } = 12'000000110101
  Analyzing resource sharing options for $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:238$187 ($memrd):
    Found 4 activation_patterns using ctrl signal { $auto$opt_reduce.cc:132:opt_mux$5962 \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$../picorv32.v:1385$1606_Y $techmap\soc.cpu.$procmux$1865_CMP \resetn }.
    No candidates found.
  Analyzing resource sharing options for $techmap\soc.cpu.$sshr$../picorv32.v:1240$1815 ($sshr):
    Found 1 activation_patterns using ctrl signal $techmap\soc.cpu.$logic_and$../picorv32.v:1277$1581_Y.
    No candidates found.
  Analyzing resource sharing options for $techmap\soc.cpu.$shl$../picorv32.v:1239$1812 ($shl):
    Found 1 activation_patterns using ctrl signal $techmap\soc.cpu.$logic_and$../picorv32.v:1275$1577_Y.
    No candidates found.

6.15. Executing TECHMAP pass (map to technology primitives).

6.15.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

6.15.2. Continuing TECHMAP pass.
Using template $paramod$99e5b0ecd4c7f9fb6cd3a733593eba894c42613f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$0760830c1e6c196382cd2cb153e9fff2d84c061d\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5652dda64580ddd7861fd245e644fd33eae2e158\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d87a48a4cd82717ae6bd57e6fe5ce90d87c44016\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$4cde4291caf5aa85a196975f3624151774a86d78\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$169bae89c32dcc6f3626d16cf9f47ceb469145db\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5b7c8f37cb386acdf3ce7e528c09e6d15eb51b72\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$77ad031fce233083715243f95e3cd2547d931e42\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d31416a5863a8a220e16d7940a75ab70541ab32a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$a6ffc318e97e2d88e3aa2c740afebfc2ba48d1b1\_90_lut_cmp_ for cells of type $ne.
Using template $paramod$947b4e84b41c8268c0b3f732cf601a46e109cf2f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$dc6060208f0369ff43b26b7eee8e43bf61e4b025\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d0a69964f9ce54b3124cbdb498a7c3bb278370d8\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$b2c078492117e804fad9a0ec69f4ef95c8e4fc36\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$8c0aa91d4db8741c9947d7a0de6c875d8dfddc39\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$efc71e781fe178e08e0b73b60d007d65bb528021\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$64fdb727b8fb55a4fe9731fe5b6468d06ea5e6e3\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$df71d3c5c306636e78c1ede81ccfd95a4d222f85\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$ed69233d74549f287b72a59633b9a76ab6bcc119\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5c2d7617d568809e504489b04c3cf382857f302a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$f697708cd68b7ab769087d4d36092ed6d4550934\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$71de91d27376199a7ef88a0ac0b14252f100e8e2\_90_lut_cmp_ for cells of type $eq.
No more expansions possible.
<suppressed ~2057 debug messages>

6.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.

6.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..
Removed 0 unused cells and 186 unused wires.
<suppressed ~1 debug messages>

6.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module hx8kdemo:
  creating $macc model for $add$hx8kdemo.v:49$4 ($add).
  creating $macc model for $techmap\soc.cpu.$add$../picorv32.v:1235$1807 ($add).
  creating $macc model for $techmap\soc.cpu.$add$../picorv32.v:1312$1591 ($add).
  creating $macc model for $techmap\soc.cpu.$add$../picorv32.v:1428$1626 ($add).
  creating $macc model for $techmap\soc.cpu.$add$../picorv32.v:1553$1681 ($add).
  creating $macc model for $techmap\soc.cpu.$add$../picorv32.v:1565$1684 ($add).
  creating $macc model for $techmap\soc.cpu.$add$../picorv32.v:1570$1685 ($add).
  creating $macc model for $techmap\soc.cpu.$add$../picorv32.v:1807$1733 ($add).
  creating $macc model for $techmap\soc.cpu.$add$../picorv32.v:1870$1761 ($add).
  creating $macc model for $techmap\soc.cpu.$add$../picorv32.v:382$1198 ($add).
  creating $macc model for $techmap\soc.cpu.$add$../picorv32.v:906$1326 ($add).
  creating $macc model for $techmap\soc.cpu.$add$../picorv32.v:910$1327 ($add).
  creating $macc model for $techmap\soc.cpu.$sub$../picorv32.v:1235$1806 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$../picorv32.v:1421$1624 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$../picorv32.v:1438$1632 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$../picorv32.v:1843$1750 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$../picorv32.v:1851$1757 ($sub).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$neg$../picorv32.v:2468$1033 ($neg).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$neg$../picorv32.v:2469$1038 ($neg).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$neg$../picorv32.v:2487$1051 ($neg).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$neg$../picorv32.v:2489$1053 ($neg).
  creating $macc model for $techmap\soc.cpu.pcpi_div.$sub$../picorv32.v:2493$1056 ($sub).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$938 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$939 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$940 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$941 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$942 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$943 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$944 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$945 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$946 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$947 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$948 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$949 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$950 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$951 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$952 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$953 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$954 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$955 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$956 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$957 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$958 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$959 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$960 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$961 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$962 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$963 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$964 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$965 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$966 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$967 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$968 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$969 ($add).
  creating $macc model for $techmap\soc.cpu.pcpi_mul.$sub$../picorv32.v:2293$977 ($sub).
  creating $macc model for $techmap\soc.simpleuart.$add$simpleuart.v:112$130 ($add).
  creating $macc model for $techmap\soc.simpleuart.$add$simpleuart.v:74$121 ($add).
  creating $macc model for $techmap\soc.simpleuart.$add$simpleuart.v:99$127 ($add).
  creating $macc model for $techmap\soc.simpleuart.$sub$simpleuart.v:132$138 ($sub).
  creating $macc model for $techmap\soc.spimemio.$add$spimemio.v:226$54 ($add).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:471$76 ($sub).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$83 ($sub).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$95 ($sub).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:554$105 ($sub).
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$968 into $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$969.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$966 into $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$967.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$964 into $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$965.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$962 into $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$963.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$960 into $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$961.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$958 into $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$959.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$956 into $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$957.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$954 into $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$955.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$952 into $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$953.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$950 into $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$951.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$948 into $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$949.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$946 into $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$947.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$944 into $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$945.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$942 into $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$943.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$940 into $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$941.
  merging $macc model for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$938 into $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$939.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_mul.$sub$../picorv32.v:2293$977.
  creating $alu model for $macc $techmap\soc.simpleuart.$add$simpleuart.v:112$130.
  creating $alu model for $macc $techmap\soc.simpleuart.$add$simpleuart.v:74$121.
  creating $alu model for $macc $techmap\soc.simpleuart.$add$simpleuart.v:99$127.
  creating $alu model for $macc $techmap\soc.simpleuart.$sub$simpleuart.v:132$138.
  creating $alu model for $macc $techmap\soc.spimemio.$add$spimemio.v:226$54.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:471$76.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$83.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$95.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:554$105.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$sub$../picorv32.v:2493$1056.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$neg$../picorv32.v:2489$1053.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$neg$../picorv32.v:2487$1051.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$neg$../picorv32.v:2469$1038.
  creating $alu model for $macc $techmap\soc.cpu.pcpi_div.$neg$../picorv32.v:2468$1033.
  creating $alu model for $macc $techmap\soc.cpu.$sub$../picorv32.v:1851$1757.
  creating $alu model for $macc $techmap\soc.cpu.$sub$../picorv32.v:1843$1750.
  creating $alu model for $macc $techmap\soc.cpu.$sub$../picorv32.v:1438$1632.
  creating $alu model for $macc $techmap\soc.cpu.$sub$../picorv32.v:1421$1624.
  creating $alu model for $macc $techmap\soc.cpu.$sub$../picorv32.v:1235$1806.
  creating $alu model for $macc $techmap\soc.cpu.$add$../picorv32.v:910$1327.
  creating $alu model for $macc $techmap\soc.cpu.$add$../picorv32.v:906$1326.
  creating $alu model for $macc $techmap\soc.cpu.$add$../picorv32.v:382$1198.
  creating $alu model for $macc $techmap\soc.cpu.$add$../picorv32.v:1870$1761.
  creating $alu model for $macc $techmap\soc.cpu.$add$../picorv32.v:1807$1733.
  creating $alu model for $macc $techmap\soc.cpu.$add$../picorv32.v:1570$1685.
  creating $alu model for $macc $techmap\soc.cpu.$add$../picorv32.v:1565$1684.
  creating $alu model for $macc $techmap\soc.cpu.$add$../picorv32.v:1553$1681.
  creating $alu model for $macc $techmap\soc.cpu.$add$../picorv32.v:1428$1626.
  creating $alu model for $macc $techmap\soc.cpu.$add$../picorv32.v:1312$1591.
  creating $alu model for $macc $techmap\soc.cpu.$add$../picorv32.v:1235$1807.
  creating $alu model for $macc $add$hx8kdemo.v:49$4.
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$943: $auto$alumacc.cc:365:replace_macc$6205
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$949: $auto$alumacc.cc:365:replace_macc$6206
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$941: $auto$alumacc.cc:365:replace_macc$6207
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$951: $auto$alumacc.cc:365:replace_macc$6208
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$945: $auto$alumacc.cc:365:replace_macc$6209
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$953: $auto$alumacc.cc:365:replace_macc$6210
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$939: $auto$alumacc.cc:365:replace_macc$6211
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$955: $auto$alumacc.cc:365:replace_macc$6212
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$947: $auto$alumacc.cc:365:replace_macc$6213
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$957: $auto$alumacc.cc:365:replace_macc$6214
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$969: $auto$alumacc.cc:365:replace_macc$6215
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$959: $auto$alumacc.cc:365:replace_macc$6216
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$965: $auto$alumacc.cc:365:replace_macc$6217
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$961: $auto$alumacc.cc:365:replace_macc$6218
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$967: $auto$alumacc.cc:365:replace_macc$6219
  creating $macc cell for $techmap\soc.cpu.pcpi_mul.$add$../picorv32.v:2259$963: $auto$alumacc.cc:365:replace_macc$6220
  creating $alu model for $techmap\soc.$ge$picosoc.v:159$163 ($ge): new $alu
  creating $alu model for $techmap\soc.$gt$picosoc.v:110$140 ($gt): new $alu
  creating $alu model for $techmap\soc.$lt$picosoc.v:159$165 ($lt): new $alu
  creating $alu model for $techmap\soc.$lt$picosoc.v:208$175 ($lt): merged with $techmap\soc.$ge$picosoc.v:159$163.
  creating $alu model for $techmap\soc.cpu.$ge$../picorv32.v:1836$1742 ($ge): new $alu
  creating $alu model for $techmap\soc.cpu.$lt$../picorv32.v:1237$1810 ($lt): new $alu
  creating $alu model for $techmap\soc.cpu.$lt$../picorv32.v:1238$1811 ($lt): new $alu
  creating $alu model for $techmap\soc.cpu.pcpi_div.$le$../picorv32.v:2492$1055 ($le): new $alu
  creating $alu model for $techmap\soc.simpleuart.$gt$simpleuart.v:130$136 ($gt): new $alu
  creating $alu model for $techmap\soc.simpleuart.$gt$simpleuart.v:84$124 ($gt): new $alu
  creating $alu model for $techmap\soc.simpleuart.$gt$simpleuart.v:90$125 ($gt): new $alu
  creating $alu model for $techmap\soc.$eq$picosoc.v:115$142 ($eq): merged with $techmap\soc.$lt$picosoc.v:159$165.
  creating $alu model for $techmap\soc.cpu.$eq$../picorv32.v:1236$1809 ($eq): merged with $techmap\soc.cpu.$lt$../picorv32.v:1238$1811.
  creating $alu cell for $techmap\soc.simpleuart.$gt$simpleuart.v:90$125: $auto$alumacc.cc:485:replace_alu$6231
  creating $alu cell for $techmap\soc.simpleuart.$gt$simpleuart.v:84$124: $auto$alumacc.cc:485:replace_alu$6236
  creating $alu cell for $techmap\soc.simpleuart.$gt$simpleuart.v:130$136: $auto$alumacc.cc:485:replace_alu$6241
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$le$../picorv32.v:2492$1055: $auto$alumacc.cc:485:replace_alu$6252
  creating $alu cell for $techmap\soc.cpu.$ge$../picorv32.v:1836$1742: $auto$alumacc.cc:485:replace_alu$6265
  creating $alu cell for $techmap\soc.$lt$picosoc.v:159$165, $techmap\soc.$eq$picosoc.v:115$142: $auto$alumacc.cc:485:replace_alu$6274
  creating $alu cell for $techmap\soc.$gt$picosoc.v:110$140: $auto$alumacc.cc:485:replace_alu$6285
  creating $alu cell for $techmap\soc.$ge$picosoc.v:159$163, $techmap\soc.$lt$picosoc.v:208$175: $auto$alumacc.cc:485:replace_alu$6290
  creating $alu cell for $add$hx8kdemo.v:49$4: $auto$alumacc.cc:485:replace_alu$6303
  creating $alu cell for $techmap\soc.cpu.$lt$../picorv32.v:1238$1811, $techmap\soc.cpu.$eq$../picorv32.v:1236$1809: $auto$alumacc.cc:485:replace_alu$6306
  creating $alu cell for $techmap\soc.cpu.$lt$../picorv32.v:1237$1810: $auto$alumacc.cc:485:replace_alu$6317
  creating $alu cell for $techmap\soc.cpu.$add$../picorv32.v:1235$1807: $auto$alumacc.cc:485:replace_alu$6330
  creating $alu cell for $techmap\soc.cpu.$add$../picorv32.v:1312$1591: $auto$alumacc.cc:485:replace_alu$6333
  creating $alu cell for $techmap\soc.cpu.$add$../picorv32.v:1428$1626: $auto$alumacc.cc:485:replace_alu$6336
  creating $alu cell for $techmap\soc.cpu.$add$../picorv32.v:1553$1681: $auto$alumacc.cc:485:replace_alu$6339
  creating $alu cell for $techmap\soc.cpu.$add$../picorv32.v:1565$1684: $auto$alumacc.cc:485:replace_alu$6342
  creating $alu cell for $techmap\soc.cpu.$add$../picorv32.v:1570$1685: $auto$alumacc.cc:485:replace_alu$6345
  creating $alu cell for $techmap\soc.cpu.$add$../picorv32.v:1807$1733: $auto$alumacc.cc:485:replace_alu$6348
  creating $alu cell for $techmap\soc.cpu.$add$../picorv32.v:1870$1761: $auto$alumacc.cc:485:replace_alu$6351
  creating $alu cell for $techmap\soc.cpu.$add$../picorv32.v:382$1198: $auto$alumacc.cc:485:replace_alu$6354
  creating $alu cell for $techmap\soc.cpu.$add$../picorv32.v:906$1326: $auto$alumacc.cc:485:replace_alu$6357
  creating $alu cell for $techmap\soc.cpu.$add$../picorv32.v:910$1327: $auto$alumacc.cc:485:replace_alu$6360
  creating $alu cell for $techmap\soc.cpu.$sub$../picorv32.v:1235$1806: $auto$alumacc.cc:485:replace_alu$6363
  creating $alu cell for $techmap\soc.cpu.$sub$../picorv32.v:1421$1624: $auto$alumacc.cc:485:replace_alu$6366
  creating $alu cell for $techmap\soc.cpu.$sub$../picorv32.v:1438$1632: $auto$alumacc.cc:485:replace_alu$6369
  creating $alu cell for $techmap\soc.cpu.$sub$../picorv32.v:1843$1750: $auto$alumacc.cc:485:replace_alu$6372
  creating $alu cell for $techmap\soc.cpu.$sub$../picorv32.v:1851$1757: $auto$alumacc.cc:485:replace_alu$6375
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$neg$../picorv32.v:2468$1033: $auto$alumacc.cc:485:replace_alu$6378
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$neg$../picorv32.v:2469$1038: $auto$alumacc.cc:485:replace_alu$6381
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$neg$../picorv32.v:2487$1051: $auto$alumacc.cc:485:replace_alu$6384
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$neg$../picorv32.v:2489$1053: $auto$alumacc.cc:485:replace_alu$6387
  creating $alu cell for $techmap\soc.cpu.pcpi_div.$sub$../picorv32.v:2493$1056: $auto$alumacc.cc:485:replace_alu$6390
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:554$105: $auto$alumacc.cc:485:replace_alu$6393
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$95: $auto$alumacc.cc:485:replace_alu$6396
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$83: $auto$alumacc.cc:485:replace_alu$6399
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:471$76: $auto$alumacc.cc:485:replace_alu$6402
  creating $alu cell for $techmap\soc.spimemio.$add$spimemio.v:226$54: $auto$alumacc.cc:485:replace_alu$6405
  creating $alu cell for $techmap\soc.simpleuart.$sub$simpleuart.v:132$138: $auto$alumacc.cc:485:replace_alu$6408
  creating $alu cell for $techmap\soc.simpleuart.$add$simpleuart.v:99$127: $auto$alumacc.cc:485:replace_alu$6411
  creating $alu cell for $techmap\soc.simpleuart.$add$simpleuart.v:74$121: $auto$alumacc.cc:485:replace_alu$6414
  creating $alu cell for $techmap\soc.simpleuart.$add$simpleuart.v:112$130: $auto$alumacc.cc:485:replace_alu$6417
  creating $alu cell for $techmap\soc.cpu.pcpi_mul.$sub$../picorv32.v:2293$977: $auto$alumacc.cc:485:replace_alu$6420
  created 42 $alu and 16 $macc cells.

6.19. Executing OPT pass (performing simple optimizations).

6.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.
<suppressed ~10 debug messages>

6.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

6.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hx8kdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~295 debug messages>

6.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hx8kdemo.
    New input vector for $reduce_or cell $auto$alumacc.cc:520:replace_alu$6263: { $auto$rtlil.cc:1844:Not$6262 $auto$rtlil.cc:1847:ReduceAnd$6258 }
    New input vector for $reduce_or cell $auto$alumacc.cc:520:replace_alu$6272: { $auto$rtlil.cc:1844:Not$6269 $auto$rtlil.cc:1847:ReduceAnd$6271 }
    New input vector for $reduce_or cell $auto$alumacc.cc:520:replace_alu$6297: { $auto$rtlil.cc:1844:Not$6294 $auto$rtlil.cc:1847:ReduceAnd$6296 }
    New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$6311: { $auto$alumacc.cc:501:replace_alu$6307 [0] $auto$alumacc.cc:501:replace_alu$6307 [1] $auto$alumacc.cc:501:replace_alu$6307 [2] $auto$alumacc.cc:501:replace_alu$6307 [3] $auto$alumacc.cc:501:replace_alu$6307 [4] $auto$alumacc.cc:501:replace_alu$6307 [5] $auto$alumacc.cc:501:replace_alu$6307 [6] $auto$alumacc.cc:501:replace_alu$6307 [7] $auto$alumacc.cc:501:replace_alu$6307 [8] $auto$alumacc.cc:501:replace_alu$6307 [9] $auto$alumacc.cc:501:replace_alu$6307 [10] $auto$alumacc.cc:501:replace_alu$6307 [11] $auto$alumacc.cc:501:replace_alu$6307 [12] $auto$alumacc.cc:501:replace_alu$6307 [13] $auto$alumacc.cc:501:replace_alu$6307 [14] $auto$alumacc.cc:501:replace_alu$6307 [15] $auto$alumacc.cc:501:replace_alu$6307 [16] $auto$alumacc.cc:501:replace_alu$6307 [17] $auto$alumacc.cc:501:replace_alu$6307 [18] $auto$alumacc.cc:501:replace_alu$6307 [19] $auto$alumacc.cc:501:replace_alu$6307 [20] $auto$alumacc.cc:501:replace_alu$6307 [21] $auto$alumacc.cc:501:replace_alu$6307 [22] $auto$alumacc.cc:501:replace_alu$6307 [23] $auto$alumacc.cc:501:replace_alu$6307 [24] $auto$alumacc.cc:501:replace_alu$6307 [25] $auto$alumacc.cc:501:replace_alu$6307 [26] $auto$alumacc.cc:501:replace_alu$6307 [27] $auto$alumacc.cc:501:replace_alu$6307 [28] $auto$alumacc.cc:501:replace_alu$6307 [29] $auto$alumacc.cc:501:replace_alu$6307 [30] $auto$alumacc.cc:501:replace_alu$6307 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$6324: { $auto$alumacc.cc:501:replace_alu$6318 [0] $auto$alumacc.cc:501:replace_alu$6318 [1] $auto$alumacc.cc:501:replace_alu$6318 [2] $auto$alumacc.cc:501:replace_alu$6318 [3] $auto$alumacc.cc:501:replace_alu$6318 [4] $auto$alumacc.cc:501:replace_alu$6318 [5] $auto$alumacc.cc:501:replace_alu$6318 [6] $auto$alumacc.cc:501:replace_alu$6318 [7] $auto$alumacc.cc:501:replace_alu$6318 [8] $auto$alumacc.cc:501:replace_alu$6318 [9] $auto$alumacc.cc:501:replace_alu$6318 [10] $auto$alumacc.cc:501:replace_alu$6318 [11] $auto$alumacc.cc:501:replace_alu$6318 [12] $auto$alumacc.cc:501:replace_alu$6318 [13] $auto$alumacc.cc:501:replace_alu$6318 [14] $auto$alumacc.cc:501:replace_alu$6318 [15] $auto$alumacc.cc:501:replace_alu$6318 [16] $auto$alumacc.cc:501:replace_alu$6318 [17] $auto$alumacc.cc:501:replace_alu$6318 [18] $auto$alumacc.cc:501:replace_alu$6318 [19] $auto$alumacc.cc:501:replace_alu$6318 [20] $auto$alumacc.cc:501:replace_alu$6318 [21] $auto$alumacc.cc:501:replace_alu$6318 [22] $auto$alumacc.cc:501:replace_alu$6318 [23] $auto$alumacc.cc:501:replace_alu$6318 [24] $auto$alumacc.cc:501:replace_alu$6318 [25] $auto$alumacc.cc:501:replace_alu$6318 [26] $auto$alumacc.cc:501:replace_alu$6318 [27] $auto$alumacc.cc:501:replace_alu$6318 [28] $auto$alumacc.cc:501:replace_alu$6318 [29] $auto$alumacc.cc:501:replace_alu$6318 [30] $auto$alumacc.cc:501:replace_alu$6318 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$6246: { $auto$alumacc.cc:501:replace_alu$6242 [0] $auto$alumacc.cc:501:replace_alu$6242 [1] $auto$alumacc.cc:501:replace_alu$6242 [2] $auto$alumacc.cc:501:replace_alu$6242 [3] $auto$alumacc.cc:501:replace_alu$6242 [4] $auto$alumacc.cc:501:replace_alu$6242 [5] $auto$alumacc.cc:501:replace_alu$6242 [6] $auto$alumacc.cc:501:replace_alu$6242 [7] $auto$alumacc.cc:501:replace_alu$6242 [8] $auto$alumacc.cc:501:replace_alu$6242 [9] $auto$alumacc.cc:501:replace_alu$6242 [10] $auto$alumacc.cc:501:replace_alu$6242 [11] $auto$alumacc.cc:501:replace_alu$6242 [12] $auto$alumacc.cc:501:replace_alu$6242 [13] $auto$alumacc.cc:501:replace_alu$6242 [14] $auto$alumacc.cc:501:replace_alu$6242 [15] $auto$alumacc.cc:501:replace_alu$6242 [16] $auto$alumacc.cc:501:replace_alu$6242 [17] $auto$alumacc.cc:501:replace_alu$6242 [18] $auto$alumacc.cc:501:replace_alu$6242 [19] $auto$alumacc.cc:501:replace_alu$6242 [20] $auto$alumacc.cc:501:replace_alu$6242 [21] $auto$alumacc.cc:501:replace_alu$6242 [22] $auto$alumacc.cc:501:replace_alu$6242 [23] $auto$alumacc.cc:501:replace_alu$6242 [24] $auto$alumacc.cc:501:replace_alu$6242 [25] $auto$alumacc.cc:501:replace_alu$6242 [26] $auto$alumacc.cc:501:replace_alu$6242 [27] $auto$alumacc.cc:501:replace_alu$6242 [28] $auto$alumacc.cc:501:replace_alu$6242 [29] $auto$alumacc.cc:501:replace_alu$6242 [30] $auto$alumacc.cc:501:replace_alu$6242 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$6257: { $auto$alumacc.cc:501:replace_alu$6253 [0] $auto$alumacc.cc:501:replace_alu$6253 [1] $auto$alumacc.cc:501:replace_alu$6253 [2] $auto$alumacc.cc:501:replace_alu$6253 [3] $auto$alumacc.cc:501:replace_alu$6253 [4] $auto$alumacc.cc:501:replace_alu$6253 [5] $auto$alumacc.cc:501:replace_alu$6253 [6] $auto$alumacc.cc:501:replace_alu$6253 [7] $auto$alumacc.cc:501:replace_alu$6253 [8] $auto$alumacc.cc:501:replace_alu$6253 [9] $auto$alumacc.cc:501:replace_alu$6253 [10] $auto$alumacc.cc:501:replace_alu$6253 [11] $auto$alumacc.cc:501:replace_alu$6253 [12] $auto$alumacc.cc:501:replace_alu$6253 [13] $auto$alumacc.cc:501:replace_alu$6253 [14] $auto$alumacc.cc:501:replace_alu$6253 [15] $auto$alumacc.cc:501:replace_alu$6253 [16] $auto$alumacc.cc:501:replace_alu$6253 [17] $auto$alumacc.cc:501:replace_alu$6253 [18] $auto$alumacc.cc:501:replace_alu$6253 [19] $auto$alumacc.cc:501:replace_alu$6253 [20] $auto$alumacc.cc:501:replace_alu$6253 [21] $auto$alumacc.cc:501:replace_alu$6253 [22] $auto$alumacc.cc:501:replace_alu$6253 [23] $auto$alumacc.cc:501:replace_alu$6253 [24] $auto$alumacc.cc:501:replace_alu$6253 [25] $auto$alumacc.cc:501:replace_alu$6253 [26] $auto$alumacc.cc:501:replace_alu$6253 [27] $auto$alumacc.cc:501:replace_alu$6253 [28] $auto$alumacc.cc:501:replace_alu$6253 [29] $auto$alumacc.cc:501:replace_alu$6253 [30] $auto$alumacc.cc:501:replace_alu$6253 [31] $auto$alumacc.cc:501:replace_alu$6253 [32] $auto$alumacc.cc:501:replace_alu$6253 [33] $auto$alumacc.cc:501:replace_alu$6253 [34] $auto$alumacc.cc:501:replace_alu$6253 [35] $auto$alumacc.cc:501:replace_alu$6253 [36] $auto$alumacc.cc:501:replace_alu$6253 [37] $auto$alumacc.cc:501:replace_alu$6253 [38] $auto$alumacc.cc:501:replace_alu$6253 [39] $auto$alumacc.cc:501:replace_alu$6253 [40] $auto$alumacc.cc:501:replace_alu$6253 [41] $auto$alumacc.cc:501:replace_alu$6253 [42] $auto$alumacc.cc:501:replace_alu$6253 [43] $auto$alumacc.cc:501:replace_alu$6253 [44] $auto$alumacc.cc:501:replace_alu$6253 [45] $auto$alumacc.cc:501:replace_alu$6253 [46] $auto$alumacc.cc:501:replace_alu$6253 [47] $auto$alumacc.cc:501:replace_alu$6253 [48] $auto$alumacc.cc:501:replace_alu$6253 [49] $auto$alumacc.cc:501:replace_alu$6253 [50] $auto$alumacc.cc:501:replace_alu$6253 [51] $auto$alumacc.cc:501:replace_alu$6253 [52] $auto$alumacc.cc:501:replace_alu$6253 [53] $auto$alumacc.cc:501:replace_alu$6253 [54] $auto$alumacc.cc:501:replace_alu$6253 [55] $auto$alumacc.cc:501:replace_alu$6253 [56] $auto$alumacc.cc:501:replace_alu$6253 [57] $auto$alumacc.cc:501:replace_alu$6253 [58] $auto$alumacc.cc:501:replace_alu$6253 [59] $auto$alumacc.cc:501:replace_alu$6253 [60] $auto$alumacc.cc:501:replace_alu$6253 [61] $auto$alumacc.cc:501:replace_alu$6253 [62] }
    New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$6270: { $auto$alumacc.cc:501:replace_alu$6266 [0] $auto$alumacc.cc:501:replace_alu$6266 [1] $auto$alumacc.cc:501:replace_alu$6266 [2] $auto$alumacc.cc:501:replace_alu$6266 [3] $auto$alumacc.cc:501:replace_alu$6266 [4] }
    New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$6279: { $auto$alumacc.cc:501:replace_alu$6275 [0] $auto$alumacc.cc:501:replace_alu$6275 [1] $auto$alumacc.cc:501:replace_alu$6275 [2] $auto$alumacc.cc:501:replace_alu$6275 [3] $auto$alumacc.cc:501:replace_alu$6275 [4] $auto$alumacc.cc:501:replace_alu$6275 [5] $auto$alumacc.cc:501:replace_alu$6275 [6] $auto$alumacc.cc:501:replace_alu$6275 [7] $auto$alumacc.cc:501:replace_alu$6275 [8] $auto$alumacc.cc:501:replace_alu$6275 [9] $auto$alumacc.cc:501:replace_alu$6275 [10] $auto$alumacc.cc:501:replace_alu$6275 [11] $auto$alumacc.cc:501:replace_alu$6275 [12] $auto$alumacc.cc:501:replace_alu$6275 [13] $auto$alumacc.cc:501:replace_alu$6275 [14] $auto$alumacc.cc:501:replace_alu$6275 [15] $auto$alumacc.cc:501:replace_alu$6275 [16] $auto$alumacc.cc:501:replace_alu$6275 [17] $auto$alumacc.cc:501:replace_alu$6275 [18] $auto$alumacc.cc:501:replace_alu$6275 [19] $auto$alumacc.cc:501:replace_alu$6275 [20] $auto$alumacc.cc:501:replace_alu$6275 [21] $auto$alumacc.cc:501:replace_alu$6275 [22] $auto$alumacc.cc:501:replace_alu$6275 [23] $auto$alumacc.cc:501:replace_alu$6275 [24] $auto$alumacc.cc:501:replace_alu$6275 [25] $auto$alumacc.cc:501:replace_alu$6275 [26] $auto$alumacc.cc:501:replace_alu$6275 [27] $auto$alumacc.cc:501:replace_alu$6275 [28] $auto$alumacc.cc:501:replace_alu$6275 [29] $auto$alumacc.cc:501:replace_alu$6275 [30] $auto$alumacc.cc:501:replace_alu$6275 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$6295: { $auto$alumacc.cc:501:replace_alu$6291 [0] $auto$alumacc.cc:501:replace_alu$6291 [1] $auto$alumacc.cc:501:replace_alu$6291 [2] $auto$alumacc.cc:501:replace_alu$6291 [3] $auto$alumacc.cc:501:replace_alu$6291 [4] $auto$alumacc.cc:501:replace_alu$6291 [5] $auto$alumacc.cc:501:replace_alu$6291 [6] $auto$alumacc.cc:501:replace_alu$6291 [7] $auto$alumacc.cc:501:replace_alu$6291 [8] $auto$alumacc.cc:501:replace_alu$6291 [9] $auto$alumacc.cc:501:replace_alu$6291 [10] $auto$alumacc.cc:501:replace_alu$6291 [11] $auto$alumacc.cc:501:replace_alu$6291 [12] $auto$alumacc.cc:501:replace_alu$6291 [13] $auto$alumacc.cc:501:replace_alu$6291 [14] $auto$alumacc.cc:501:replace_alu$6291 [15] $auto$alumacc.cc:501:replace_alu$6291 [16] $auto$alumacc.cc:501:replace_alu$6291 [17] $auto$alumacc.cc:501:replace_alu$6291 [18] $auto$alumacc.cc:501:replace_alu$6291 [19] $auto$alumacc.cc:501:replace_alu$6291 [20] $auto$alumacc.cc:501:replace_alu$6291 [21] $auto$alumacc.cc:501:replace_alu$6291 [22] $auto$alumacc.cc:501:replace_alu$6291 [23] $auto$alumacc.cc:501:replace_alu$6291 [24] $auto$alumacc.cc:501:replace_alu$6291 [25] $auto$alumacc.cc:501:replace_alu$6291 [26] $auto$alumacc.cc:501:replace_alu$6291 [27] $auto$alumacc.cc:501:replace_alu$6291 [28] $auto$alumacc.cc:501:replace_alu$6291 [29] $auto$alumacc.cc:501:replace_alu$6291 [30] $auto$alumacc.cc:501:replace_alu$6291 [31] }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2587: { $auto$opt_reduce.cc:132:opt_mux$6424 $techmap\soc.cpu.$procmux$1862_CMP }
  Optimizing cells in module \hx8kdemo.
Performed a total of 11 changes.

6.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
Removed a total of 0 cells.

6.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

6.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..
Removed 18 unused cells and 38 unused wires.
<suppressed ~19 debug messages>

6.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.

6.19.9. Rerunning OPT passes. (Maybe there is more to do..)

6.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hx8kdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~295 debug messages>

6.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hx8kdemo.
Performed a total of 0 changes.

6.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

6.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

6.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

6.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.

6.19.16. Rerunning OPT passes. (Maybe there is more to do..)

6.19.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hx8kdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~295 debug messages>

6.19.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hx8kdemo.
Performed a total of 0 changes.

6.19.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
Removed a total of 0 cells.

6.19.20. Executing OPT_RMDFF pass (remove dff with constant values).

6.19.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..

6.19.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.

6.19.23. Finished OPT passes. (There is nothing left to do.)

6.20. Executing FSM pass (extract and optimize FSM).

6.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register hx8kdemo.soc.cpu.cpu_state.
Not marking hx8kdemo.soc.cpu.irq_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking hx8kdemo.soc.cpu.mem_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking hx8kdemo.soc.cpu.mem_wordsize as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking hx8kdemo.soc.spimemio.din_tag as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking hx8kdemo.soc.spimemio.state as FSM state register:
    Users of register don't seem to benefit from recoding.

6.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\soc.cpu.cpu_state' from module `\hx8kdemo'.
  found $dff cell for state register: $techmap\soc.cpu.$procdff$5719
  root of input selection tree: $techmap\soc.cpu.$0\cpu_state[7:0]
  found ctrl input: $techmap\soc.cpu.$logic_and$../picorv32.v:1932$1793_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$../picorv32.v:1916$1774_Y
  found ctrl input: \resetn
  found state code: 8'01000000
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$6046
  found ctrl input: $techmap\soc.cpu.$procmux$1862_CMP
  found ctrl input: $techmap\soc.cpu.$procmux$1863_CMP
  found ctrl input: $techmap\soc.cpu.$procmux$1864_CMP
  found ctrl input: $techmap\soc.cpu.$procmux$1865_CMP
  found ctrl input: $techmap\soc.cpu.$eq$../picorv32.v:1308$1589_Y
  found ctrl input: $techmap\soc.cpu.$logic_or$../picorv32.v:1858$1759_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$../picorv32.v:1873$1763_Y
  found ctrl input: $techmap\soc.cpu.$eq$../picorv32.v:1832$1741_Y
  found ctrl input: \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu
  found ctrl input: \soc.cpu.mem_done
  found ctrl input: \soc.cpu.is_sb_sh_sw
  found ctrl input: \soc.cpu.instr_trap
  found state code: 8'00001000
  found state code: 8'00000010
  found ctrl input: \soc.cpu.pcpi_int_ready
  found ctrl input: $techmap\soc.cpu.$logic_and$../picorv32.v:1606$1691_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$../picorv32.v:1609$1695_Y
  found state code: 8'10000000
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$5964
  found ctrl input: $techmap\soc.cpu.$logic_and$../picorv32.v:1697$1710_Y
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$5962
  found state code: 8'00000001
  found ctrl input: $techmap\soc.cpu.$logic_and$../picorv32.v:1539$1670_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$../picorv32.v:1549$1678_Y
  found ctrl input: \soc.cpu.decoder_trigger
  found ctrl input: \soc.cpu.instr_jal
  found state code: 8'00100000
  found ctrl input: $techmap\soc.cpu.$logic_and$../picorv32.v:1924$1784_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$../picorv32.v:1917$1777_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$../picorv32.v:1919$1781_Y
  found ctrl output: $techmap\soc.cpu.$procmux$1867_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$1865_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$1864_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$1863_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$1862_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$1861_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$1860_CMP
  found ctrl output: $techmap\soc.cpu.$eq$../picorv32.v:1308$1589_Y
  ctrl inputs: { $auto$opt_reduce.cc:132:opt_mux$5964 $auto$opt_reduce.cc:132:opt_mux$5962 $auto$opt_reduce.cc:132:opt_mux$6046 \soc.cpu.pcpi_int_ready \soc.cpu.mem_done \soc.cpu.instr_jal \soc.cpu.instr_trap \soc.cpu.decoder_trigger \soc.cpu.is_sb_sh_sw \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu $techmap\soc.cpu.$logic_and$../picorv32.v:1539$1670_Y $techmap\soc.cpu.$logic_and$../picorv32.v:1549$1678_Y $techmap\soc.cpu.$logic_and$../picorv32.v:1606$1691_Y $techmap\soc.cpu.$logic_and$../picorv32.v:1609$1695_Y $techmap\soc.cpu.$logic_and$../picorv32.v:1697$1710_Y $techmap\soc.cpu.$eq$../picorv32.v:1832$1741_Y $techmap\soc.cpu.$logic_or$../picorv32.v:1858$1759_Y $techmap\soc.cpu.$logic_and$../picorv32.v:1873$1763_Y $techmap\soc.cpu.$logic_and$../picorv32.v:1916$1774_Y $techmap\soc.cpu.$logic_and$../picorv32.v:1917$1777_Y $techmap\soc.cpu.$logic_and$../picorv32.v:1919$1781_Y $techmap\soc.cpu.$logic_and$../picorv32.v:1924$1784_Y $techmap\soc.cpu.$logic_and$../picorv32.v:1932$1793_Y \resetn }
  ctrl outputs: { $techmap\soc.cpu.$eq$../picorv32.v:1308$1589_Y $techmap\soc.cpu.$0\cpu_state[7:0] $techmap\soc.cpu.$procmux$1860_CMP $techmap\soc.cpu.$procmux$1861_CMP $techmap\soc.cpu.$procmux$1862_CMP $techmap\soc.cpu.$procmux$1863_CMP $techmap\soc.cpu.$procmux$1864_CMP $techmap\soc.cpu.$procmux$1865_CMP $techmap\soc.cpu.$procmux$1867_CMP }
  transition: 8'10000000 24'------------------0---00 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------0---01 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------10-000 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------10-001 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------11000- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111000 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111001 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------1-010- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------101100 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------101101 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111100 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111101 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'--------------------0-1- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------0-1-10 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------0-1-11 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------101010 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------101011 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111010 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111011 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------101110 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------101111 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111110 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111111 -> 8'10000000 16'0100000000000001
  transition: 8'01000000 24'------------------0---00 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------0---01 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------10-000 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------10-001 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------11000- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 24'------------------111000 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------111001 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------1-010- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 24'------------------101100 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------101101 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------111100 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------111101 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'--------------------0-1- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 24'------------------0-1-10 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------0-1-11 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------101010 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------101011 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------111010 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------111011 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------101110 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------101111 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------111110 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-------0--00------111111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----0-1--00------111111 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'-----1-1--00------111111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------01------111111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----------1-------111111 -> 8'01000000 16'1010000000000000
  transition: 8'00100000 24'------------------0---00 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---0---01 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---0---01 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----0---01 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----0---01 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----0---01 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------0---01 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------0---01 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---0---01 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------0---01 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------10-000 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---10-001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---10-001 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----10-001 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----10-001 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----10-001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------10-001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------10-001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---10-001 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------10-001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------11000- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'------------------111000 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---111001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---111001 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----111001 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----111001 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----111001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------111001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111001 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------111001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------1-010- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'------------------101100 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---101101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---101101 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----101101 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----101101 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----101101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------101101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------101101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---101101 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------101101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------111100 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---111101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---111101 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----111101 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----111101 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----111101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------111101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111101 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------111101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'--------------------0-1- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'------------------0-1-10 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---0-1-11 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---0-1-11 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----0-1-11 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----0-1-11 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----0-1-11 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------0-1-11 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------0-1-11 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---0-1-11 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------0-1-11 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------101010 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---101011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---101011 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----101011 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----101011 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----101011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------101011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------101011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---101011 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------101011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------111010 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---111011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---111011 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----111011 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----111011 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----111011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------111011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111011 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------111011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------101110 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---101111 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---101111 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----101111 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----101111 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----101111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------101111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------101111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---101111 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------101111 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------111110 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00----0-0-----0---111111 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00------1-----0---111111 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'---0--1-----0-----111111 -> 8'00100000 16'0001000000000010
  transition: 8'00100000 24'---0--1-----10----111111 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'---0--1-----11----111111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'---1--1-----------111111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111111 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'1-----------------111111 -> 8'00001000 16'0000010000000010
  transition: 8'00001000 24'------------------0---00 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------0---01 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------0---01 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------0---01 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------10-000 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------10-001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------10-001 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------10-001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------11000- -> 8'10000000 16'0100000000001000
  transition: 8'00001000 24'------------------111000 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------111001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------111001 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------111001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------1-010- -> 8'10000000 16'0100000000001000
  transition: 8'00001000 24'------------------101100 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------101101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------101101 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------101101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------111100 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------111101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------111101 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------111101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'--------------------0-1- -> 8'10000000 16'0100000000001000
  transition: 8'00001000 24'------------------0-1-10 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------0-1-11 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------0-1-11 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------0-1-11 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------101010 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------101011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------101011 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------101011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------111010 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------111011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------111011 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------111011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------101110 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------101111 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------101111 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------101111 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------111110 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---------0--------111111 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----0----1--------111111 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'----1----1--------111111 -> 8'01000000 16'0010000000001000
  transition: 8'00000010 24'------------------0---00 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-0---01 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------100---01 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------110---01 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------10-000 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-10-001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------1010-001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------1110-001 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------11000- -> 8'10000000 16'0100000000100000
  transition: 8'00000010 24'------------------111000 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111001 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------1-010- -> 8'10000000 16'0100000000100000
  transition: 8'00000010 24'------------------101100 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-101101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10101101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11101101 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------111100 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111101 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'--------------------0-1- -> 8'10000000 16'0100000000100000
  transition: 8'00000010 24'------------------0-1-10 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-0-1-11 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------100-1-11 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------110-1-11 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------101010 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-101011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10101011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11101011 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------111010 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111011 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------101110 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-101111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10101111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11101111 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------111110 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111111 -> 8'01000000 16'0010000000100000
  transition: 8'00000001 24'------------------0---00 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-0---01 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------100---01 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------110---01 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------10-000 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-10-001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------1010-001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------1110-001 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------11000- -> 8'10000000 16'0100000001000000
  transition: 8'00000001 24'------------------111000 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111001 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------1-010- -> 8'10000000 16'0100000001000000
  transition: 8'00000001 24'------------------101100 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-101101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10101101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11101101 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------111100 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111101 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'--------------------0-1- -> 8'10000000 16'0100000001000000
  transition: 8'00000001 24'------------------0-1-10 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-0-1-11 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------100-1-11 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------110-1-11 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------101010 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-101011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10101011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11101011 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------111010 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111011 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------101110 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-101111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10101111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11101111 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------111110 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111111 -> 8'01000000 16'0010000001000000

6.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\soc.cpu.cpu_state$6425' from module `\hx8kdemo'.
  Merging pattern 24'------------------111001 and 24'------------------111011 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------101101 and 24'------------------101111 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111101 and 24'------------------111111 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111011 and 24'------------------111001 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------101111 and 24'------------------101101 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111111 and 24'------------------111101 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------1110-1 and 24'------------------1111-1 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------1111-1 and 24'------------------1110-1 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------111001 and 24'-------0--00------111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------111001 and 24'-----1-1--00------111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------111001 and 24'----------01------111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------111001 and 24'----------1-------111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------101101 and 24'-------0--00------101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------101101 and 24'-----1-1--00------101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------101101 and 24'----------01------101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------101101 and 24'----------1-------101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------111101 and 24'-------0--00------111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------111101 and 24'-----1-1--00------111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------111101 and 24'----------01------111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------111101 and 24'----------1-------111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------111011 and 24'-------0--00------111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------111011 and 24'-----1-1--00------111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------111011 and 24'----------01------111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------111011 and 24'----------1-------111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------101111 and 24'-------0--00------101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------101111 and 24'-----1-1--00------101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------101111 and 24'----------01------101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------101111 and 24'----------1-------101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------111111 and 24'-------0--00------111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------111111 and 24'-----1-1--00------111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------111111 and 24'----------01------111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------111111 and 24'----------1-------111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------1110-1 and 24'-------0--00------1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------1110-1 and 24'-----1-1--00------1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------1110-1 and 24'----------01------1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------1110-1 and 24'----------1-------1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-------0--00------1111-1 and 24'-------0--00------1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----1-1--00------1111-1 and 24'-----1-1--00------1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------01------1111-1 and 24'----------01------1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----------1-------1111-1 and 24'----------1-------1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----0-1--00------111001 and 24'-----0-1--00------111011 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------101101 and 24'-----0-1--00------101111 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------111101 and 24'-----0-1--00------111111 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------111011 and 24'-----0-1--00------111001 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------101111 and 24'-----0-1--00------101101 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------111111 and 24'-----0-1--00------111101 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------1110-1 and 24'-----0-1--00------1111-1 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----0-1--00------1111-1 and 24'-----0-1--00------1110-1 from group (1 2 16'1001000000000000).
  Merging pattern 24'---0--1-----10----111001 and 24'---0--1-----10----111011 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----101101 and 24'---0--1-----10----101111 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----111101 and 24'---0--1-----10----111111 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----111011 and 24'---0--1-----10----111001 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----101111 and 24'---0--1-----10----101101 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----111111 and 24'---0--1-----10----111101 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----1110-1 and 24'---0--1-----10----1111-1 from group (2 0 16'0100000000000010).
  Merging pattern 24'---0--1-----10----1111-1 and 24'---0--1-----10----1110-1 from group (2 0 16'0100000000000010).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----111001 and 24'---0--1-----11----111011 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------111001 and 24'---1--1-----------111011 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111001 and 24'-1----------------111011 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----101101 and 24'---0--1-----11----101111 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------101101 and 24'---1--1-----------101111 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------101101 and 24'-1----------------101111 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----111101 and 24'---0--1-----11----111111 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------111101 and 24'---1--1-----------111111 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111101 and 24'-1----------------111111 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----111011 and 24'---0--1-----11----111001 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------111011 and 24'---1--1-----------111001 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111011 and 24'-1----------------111001 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----101111 and 24'---0--1-----11----101101 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------101111 and 24'---1--1-----------101101 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------101111 and 24'-1----------------101101 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----111111 and 24'---0--1-----11----111101 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------111111 and 24'---1--1-----------111101 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111111 and 24'-1----------------111101 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----1110-1 and 24'---0--1-----11----1111-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------1110-1 and 24'---1--1-----------1111-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------1110-1 and 24'-1----------------1111-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----11----1111-1 and 24'---0--1-----11----1110-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'---1--1-----------1111-1 and 24'---1--1-----------1110-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------1111-1 and 24'-1----------------1110-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'---0--1-----0-----111001 and 24'---0--1-----0-----111011 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----101101 and 24'---0--1-----0-----101111 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----111101 and 24'---0--1-----0-----111111 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----111011 and 24'---0--1-----0-----111001 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----101111 and 24'---0--1-----0-----101101 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----111111 and 24'---0--1-----0-----111101 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----1110-1 and 24'---0--1-----0-----1111-1 from group (2 2 16'0001000000000010).
  Merging pattern 24'---0--1-----0-----1111-1 and 24'---0--1-----0-----1110-1 from group (2 2 16'0001000000000010).
  Merging pattern 24'00----0-0-----0---111001 and 24'00----0-0-----0---111011 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111001 and 24'1-----------------111011 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---101101 and 24'00----0-0-----0---101111 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------101101 and 24'1-----------------101111 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---111101 and 24'00----0-0-----0---111111 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111101 and 24'1-----------------111111 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---111011 and 24'00----0-0-----0---111001 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111011 and 24'1-----------------111001 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---101111 and 24'00----0-0-----0---101101 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------101111 and 24'1-----------------101101 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---111111 and 24'00----0-0-----0---111101 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111111 and 24'1-----------------111101 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---1110-1 and 24'00----0-0-----0---1111-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------1110-1 and 24'1-----------------1111-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'00----0-0-----0---1111-1 and 24'00----0-0-----0---1110-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------1111-1 and 24'1-----------------1110-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'00------1-----0---111001 and 24'00------1-----0---111011 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---101101 and 24'00------1-----0---101111 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---111101 and 24'00------1-----0---111111 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---111011 and 24'00------1-----0---111001 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---101111 and 24'00------1-----0---101101 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---111111 and 24'00------1-----0---111101 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---1110-1 and 24'00------1-----0---1111-1 from group (2 4 16'0000000100000010).
  Merging pattern 24'00------1-----0---1111-1 and 24'00------1-----0---1110-1 from group (2 4 16'0000000100000010).
  Merging pattern 24'--------------1---111001 and 24'--------------1---111011 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---101101 and 24'--------------1---101111 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---111101 and 24'--------------1---111111 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---111011 and 24'--------------1---111001 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---101111 and 24'--------------1---101101 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---111111 and 24'--------------1---111101 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---1110-1 and 24'--------------1---1111-1 from group (2 5 16'0000000010000010).
  Merging pattern 24'--------------1---1111-1 and 24'--------------1---1110-1 from group (2 5 16'0000000010000010).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------111001 and 24'---------0--------111011 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------111001 and 24'----1----1--------111011 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------101101 and 24'---------0--------101111 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------101101 and 24'----1----1--------101111 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------111101 and 24'---------0--------111111 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------111101 and 24'----1----1--------111111 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------111011 and 24'---------0--------111001 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------111011 and 24'----1----1--------111001 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------101111 and 24'---------0--------101101 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------101111 and 24'----1----1--------101101 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------111111 and 24'---------0--------111101 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------111111 and 24'----1----1--------111101 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------1110-1 and 24'---------0--------1111-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------1110-1 and 24'----1----1--------1111-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'---------0--------1111-1 and 24'---------0--------1110-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'----1----1--------1111-1 and 24'----1----1--------1110-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'----0----1--------111001 and 24'----0----1--------111011 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------101101 and 24'----0----1--------101111 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------111101 and 24'----0----1--------111111 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------111011 and 24'----0----1--------111001 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------101111 and 24'----0----1--------101101 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------111111 and 24'----0----1--------111101 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------1110-1 and 24'----0----1--------1111-1 from group (3 3 16'0000010000001000).
  Merging pattern 24'----0----1--------1111-1 and 24'----0----1--------1110-1 from group (3 3 16'0000010000001000).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11111001 and 24'----------------11111011 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11101101 and 24'----------------11101111 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11111101 and 24'----------------11111111 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11111011 and 24'----------------11111001 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11101111 and 24'----------------11101101 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------11111111 and 24'----------------11111101 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (4 1 16'0010000000100000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------111110-1 and 24'----------------111111-1 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------111111-1 and 24'----------------111110-1 from group (4 1 16'0010000000100000).
  Merging pattern 24'----------------10111001 and 24'----------------10111011 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-111001 and 24'----------------0-111011 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10101101 and 24'----------------10101111 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-101101 and 24'----------------0-101111 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10111101 and 24'----------------10111111 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-111101 and 24'----------------0-111111 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10111011 and 24'----------------10111001 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-111011 and 24'----------------0-111001 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10101111 and 24'----------------10101101 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-101111 and 24'----------------0-101101 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------10111111 and 24'----------------10111101 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-111111 and 24'----------------0-111101 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------101110-1 and 24'----------------101111-1 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-1110-1 and 24'----------------0-1111-1 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------101111-1 and 24'----------------101110-1 from group (4 4 16'0000000100100000).
  Merging pattern 24'----------------0-1111-1 and 24'----------------0-1110-1 from group (4 4 16'0000000100100000).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11111001 and 24'----------------11111011 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11101101 and 24'----------------11101111 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11111101 and 24'----------------11111111 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11111011 and 24'----------------11111001 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11101111 and 24'----------------11101101 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------11111111 and 24'----------------11111101 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (5 1 16'0010000001000000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------111110-1 and 24'----------------111111-1 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------111111-1 and 24'----------------111110-1 from group (5 1 16'0010000001000000).
  Merging pattern 24'----------------10111001 and 24'----------------10111011 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-111001 and 24'----------------0-111011 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10101101 and 24'----------------10101111 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-101101 and 24'----------------0-101111 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10111101 and 24'----------------10111111 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-111101 and 24'----------------0-111111 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10111011 and 24'----------------10111001 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-111011 and 24'----------------0-111001 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10101111 and 24'----------------10101101 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-101111 and 24'----------------0-101101 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------10111111 and 24'----------------10111101 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-111111 and 24'----------------0-111101 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------101110-1 and 24'----------------101111-1 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-1110-1 and 24'----------------0-1111-1 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------101111-1 and 24'----------------101110-1 from group (5 5 16'0000000011000000).
  Merging pattern 24'----------------0-1111-1 and 24'----------------0-1110-1 from group (5 5 16'0000000011000000).
  Removing unused input signal $auto$opt_reduce.cc:132:opt_mux$6046.
  Removing unused input signal $techmap\soc.cpu.$eq$../picorv32.v:1832$1741_Y.

6.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..
Removed 33 unused cells and 33 unused wires.
<suppressed ~34 debug messages>

6.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\soc.cpu.cpu_state$6425' from module `\hx8kdemo'.
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [0].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [1].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [2].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [3].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [4].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [5].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [6].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [7].

6.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\soc.cpu.cpu_state$6425' from module `\hx8kdemo' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  10000000 -> -----1
  01000000 -> ----1-
  00100000 -> ---1--
  00001000 -> --1---
  00000010 -> -1----
  00000001 -> 1-----

6.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\soc.cpu.cpu_state$6425' from module `\hx8kdemo':
-------------------------------------

  Information on FSM $fsm$\soc.cpu.cpu_state$6425 (\soc.cpu.cpu_state):

  Number of input signals:   22
  Number of output signals:   8
  Number of state bits:       6

  Input signals:
    0: \resetn
    1: $techmap\soc.cpu.$logic_and$../picorv32.v:1932$1793_Y
    2: $techmap\soc.cpu.$logic_and$../picorv32.v:1924$1784_Y
    3: $techmap\soc.cpu.$logic_and$../picorv32.v:1919$1781_Y
    4: $techmap\soc.cpu.$logic_and$../picorv32.v:1917$1777_Y
    5: $techmap\soc.cpu.$logic_and$../picorv32.v:1916$1774_Y
    6: $techmap\soc.cpu.$logic_and$../picorv32.v:1873$1763_Y
    7: $techmap\soc.cpu.$logic_or$../picorv32.v:1858$1759_Y
    8: $techmap\soc.cpu.$logic_and$../picorv32.v:1697$1710_Y
    9: $techmap\soc.cpu.$logic_and$../picorv32.v:1609$1695_Y
   10: $techmap\soc.cpu.$logic_and$../picorv32.v:1606$1691_Y
   11: $techmap\soc.cpu.$logic_and$../picorv32.v:1549$1678_Y
   12: $techmap\soc.cpu.$logic_and$../picorv32.v:1539$1670_Y
   13: \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu
   14: \soc.cpu.is_sb_sh_sw
   15: \soc.cpu.decoder_trigger
   16: \soc.cpu.instr_trap
   17: \soc.cpu.instr_jal
   18: \soc.cpu.mem_done
   19: \soc.cpu.pcpi_int_ready
   20: $auto$opt_reduce.cc:132:opt_mux$5962
   21: $auto$opt_reduce.cc:132:opt_mux$5964

  Output signals:
    0: $techmap\soc.cpu.$procmux$1867_CMP
    1: $techmap\soc.cpu.$procmux$1865_CMP
    2: $techmap\soc.cpu.$procmux$1864_CMP
    3: $techmap\soc.cpu.$procmux$1863_CMP
    4: $techmap\soc.cpu.$procmux$1862_CMP
    5: $techmap\soc.cpu.$procmux$1861_CMP
    6: $techmap\soc.cpu.$procmux$1860_CMP
    7: $techmap\soc.cpu.$eq$../picorv32.v:1308$1589_Y

  State encoding:
    0:   6'-----1
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 22'----------------10-001   ->     0 8'00000001
      1:     0 22'----------------0---01   ->     0 8'00000001
      2:     0 22'----------------101011   ->     0 8'00000001
      3:     0 22'----------------0-1-11   ->     0 8'00000001
      4:     0 22'----------------1011-1   ->     0 8'00000001
      5:     0 22'----------------111--1   ->     0 8'00000001
      6:     0 22'----------------11000-   ->     0 8'00000001
      7:     0 22'----------------1-010-   ->     0 8'00000001
      8:     0 22'------------------0-1-   ->     0 8'00000001
      9:     0 22'----------------10-000   ->     1 8'00000001
     10:     0 22'----------------0---00   ->     1 8'00000001
     11:     0 22'----------------101010   ->     1 8'00000001
     12:     0 22'----------------0-1-10   ->     1 8'00000001
     13:     0 22'----------------1011-0   ->     1 8'00000001
     14:     0 22'----------------111--0   ->     1 8'00000001
     15:     1 22'----------------11000-   ->     0 8'10000000
     16:     1 22'----------------1-010-   ->     0 8'10000000
     17:     1 22'------------------0-1-   ->     0 8'10000000
     18:     1 22'----------------10-000   ->     1 8'10000000
     19:     1 22'----------------0---00   ->     1 8'10000000
     20:     1 22'----------------101010   ->     1 8'10000000
     21:     1 22'----------------0-1-10   ->     1 8'10000000
     22:     1 22'----------------1011-0   ->     1 8'10000000
     23:     1 22'----------------111--0   ->     1 8'10000000
     24:     1 22'------0--00-----10-001   ->     1 8'10000000
     25:     1 22'----1-1--00-----10-001   ->     1 8'10000000
     26:     1 22'---------01-----10-001   ->     1 8'10000000
     27:     1 22'---------1------10-001   ->     1 8'10000000
     28:     1 22'------0--00-----0---01   ->     1 8'10000000
     29:     1 22'----1-1--00-----0---01   ->     1 8'10000000
     30:     1 22'---------01-----0---01   ->     1 8'10000000
     31:     1 22'---------1------0---01   ->     1 8'10000000
     32:     1 22'------0--00-----101011   ->     1 8'10000000
     33:     1 22'----1-1--00-----101011   ->     1 8'10000000
     34:     1 22'---------01-----101011   ->     1 8'10000000
     35:     1 22'---------1------101011   ->     1 8'10000000
     36:     1 22'------0--00-----0-1-11   ->     1 8'10000000
     37:     1 22'----1-1--00-----0-1-11   ->     1 8'10000000
     38:     1 22'---------01-----0-1-11   ->     1 8'10000000
     39:     1 22'---------1------0-1-11   ->     1 8'10000000
     40:     1 22'------0--00-----1011-1   ->     1 8'10000000
     41:     1 22'----1-1--00-----1011-1   ->     1 8'10000000
     42:     1 22'---------01-----1011-1   ->     1 8'10000000
     43:     1 22'---------1------1011-1   ->     1 8'10000000
     44:     1 22'------0--00-----111--1   ->     1 8'10000000
     45:     1 22'----1-1--00-----111--1   ->     1 8'10000000
     46:     1 22'---------01-----111--1   ->     1 8'10000000
     47:     1 22'---------1------111--1   ->     1 8'10000000
     48:     1 22'----0-1--00-----10-001   ->     2 8'10000000
     49:     1 22'----0-1--00-----0---01   ->     2 8'10000000
     50:     1 22'----0-1--00-----101011   ->     2 8'10000000
     51:     1 22'----0-1--00-----0-1-11   ->     2 8'10000000
     52:     1 22'----0-1--00-----1011-1   ->     2 8'10000000
     53:     1 22'----0-1--00-----111--1   ->     2 8'10000000
     54:     2 22'--0--1-----10---10-001   ->     0 8'00000010
     55:     2 22'--0--1-----10---0---01   ->     0 8'00000010
     56:     2 22'--0--1-----10---101011   ->     0 8'00000010
     57:     2 22'--0--1-----10---0-1-11   ->     0 8'00000010
     58:     2 22'--0--1-----10---1011-1   ->     0 8'00000010
     59:     2 22'--0--1-----10---111--1   ->     0 8'00000010
     60:     2 22'----------------11000-   ->     0 8'00000010
     61:     2 22'----------------1-010-   ->     0 8'00000010
     62:     2 22'------------------0-1-   ->     0 8'00000010
     63:     2 22'----------------10-000   ->     1 8'00000010
     64:     2 22'----------------0---00   ->     1 8'00000010
     65:     2 22'----------------101010   ->     1 8'00000010
     66:     2 22'----------------0-1-10   ->     1 8'00000010
     67:     2 22'----------------1011-0   ->     1 8'00000010
     68:     2 22'----------------111--0   ->     1 8'00000010
     69:     2 22'--0--1-----11---10-001   ->     1 8'00000010
     70:     2 22'--1--1----------10-001   ->     1 8'00000010
     71:     2 22'-1--------------10-001   ->     1 8'00000010
     72:     2 22'--0--1-----11---0---01   ->     1 8'00000010
     73:     2 22'--1--1----------0---01   ->     1 8'00000010
     74:     2 22'-1--------------0---01   ->     1 8'00000010
     75:     2 22'--0--1-----11---101011   ->     1 8'00000010
     76:     2 22'--1--1----------101011   ->     1 8'00000010
     77:     2 22'-1--------------101011   ->     1 8'00000010
     78:     2 22'--0--1-----11---0-1-11   ->     1 8'00000010
     79:     2 22'--1--1----------0-1-11   ->     1 8'00000010
     80:     2 22'-1--------------0-1-11   ->     1 8'00000010
     81:     2 22'--0--1-----11---1011-1   ->     1 8'00000010
     82:     2 22'--1--1----------1011-1   ->     1 8'00000010
     83:     2 22'-1--------------1011-1   ->     1 8'00000010
     84:     2 22'--0--1-----11---111--1   ->     1 8'00000010
     85:     2 22'--1--1----------111--1   ->     1 8'00000010
     86:     2 22'-1--------------111--1   ->     1 8'00000010
     87:     2 22'--0--1-----0----10-001   ->     2 8'00000010
     88:     2 22'--0--1-----0----0---01   ->     2 8'00000010
     89:     2 22'--0--1-----0----101011   ->     2 8'00000010
     90:     2 22'--0--1-----0----0-1-11   ->     2 8'00000010
     91:     2 22'--0--1-----0----1011-1   ->     2 8'00000010
     92:     2 22'--0--1-----0----111--1   ->     2 8'00000010
     93:     2 22'00---0-0-----0--10-001   ->     3 8'00000010
     94:     2 22'1---------------10-001   ->     3 8'00000010
     95:     2 22'00---0-0-----0--0---01   ->     3 8'00000010
     96:     2 22'1---------------0---01   ->     3 8'00000010
     97:     2 22'00---0-0-----0--101011   ->     3 8'00000010
     98:     2 22'1---------------101011   ->     3 8'00000010
     99:     2 22'00---0-0-----0--0-1-11   ->     3 8'00000010
    100:     2 22'1---------------0-1-11   ->     3 8'00000010
    101:     2 22'00---0-0-----0--1011-1   ->     3 8'00000010
    102:     2 22'1---------------1011-1   ->     3 8'00000010
    103:     2 22'00---0-0-----0--111--1   ->     3 8'00000010
    104:     2 22'1---------------111--1   ->     3 8'00000010
    105:     2 22'00-----1-----0--10-001   ->     4 8'00000010
    106:     2 22'00-----1-----0--0---01   ->     4 8'00000010
    107:     2 22'00-----1-----0--101011   ->     4 8'00000010
    108:     2 22'00-----1-----0--0-1-11   ->     4 8'00000010
    109:     2 22'00-----1-----0--1011-1   ->     4 8'00000010
    110:     2 22'00-----1-----0--111--1   ->     4 8'00000010
    111:     2 22'-------------1--10-001   ->     5 8'00000010
    112:     2 22'-------------1--0---01   ->     5 8'00000010
    113:     2 22'-------------1--101011   ->     5 8'00000010
    114:     2 22'-------------1--0-1-11   ->     5 8'00000010
    115:     2 22'-------------1--1011-1   ->     5 8'00000010
    116:     2 22'-------------1--111--1   ->     5 8'00000010
    117:     3 22'----------------11000-   ->     0 8'00001000
    118:     3 22'----------------1-010-   ->     0 8'00001000
    119:     3 22'------------------0-1-   ->     0 8'00001000
    120:     3 22'----------------10-000   ->     1 8'00001000
    121:     3 22'----------------0---00   ->     1 8'00001000
    122:     3 22'----------------101010   ->     1 8'00001000
    123:     3 22'----------------0-1-10   ->     1 8'00001000
    124:     3 22'----------------1011-0   ->     1 8'00001000
    125:     3 22'----------------111--0   ->     1 8'00001000
    126:     3 22'--------0-------10-001   ->     1 8'00001000
    127:     3 22'---1----1-------10-001   ->     1 8'00001000
    128:     3 22'--------0-------0---01   ->     1 8'00001000
    129:     3 22'---1----1-------0---01   ->     1 8'00001000
    130:     3 22'--------0-------101011   ->     1 8'00001000
    131:     3 22'---1----1-------101011   ->     1 8'00001000
    132:     3 22'--------0-------0-1-11   ->     1 8'00001000
    133:     3 22'---1----1-------0-1-11   ->     1 8'00001000
    134:     3 22'--------0-------1011-1   ->     1 8'00001000
    135:     3 22'---1----1-------1011-1   ->     1 8'00001000
    136:     3 22'--------0-------111--1   ->     1 8'00001000
    137:     3 22'---1----1-------111--1   ->     1 8'00001000
    138:     3 22'---0----1-------10-001   ->     3 8'00001000
    139:     3 22'---0----1-------0---01   ->     3 8'00001000
    140:     3 22'---0----1-------101011   ->     3 8'00001000
    141:     3 22'---0----1-------0-1-11   ->     3 8'00001000
    142:     3 22'---0----1-------1011-1   ->     3 8'00001000
    143:     3 22'---0----1-------111--1   ->     3 8'00001000
    144:     4 22'----------------11000-   ->     0 8'00100000
    145:     4 22'----------------1-010-   ->     0 8'00100000
    146:     4 22'------------------0-1-   ->     0 8'00100000
    147:     4 22'----------------10-000   ->     1 8'00100000
    148:     4 22'----------------0---00   ->     1 8'00100000
    149:     4 22'----------------101010   ->     1 8'00100000
    150:     4 22'----------------0-1-10   ->     1 8'00100000
    151:     4 22'----------------1011-0   ->     1 8'00100000
    152:     4 22'----------------111--0   ->     1 8'00100000
    153:     4 22'--------------1110-001   ->     1 8'00100000
    154:     4 22'--------------110---01   ->     1 8'00100000
    155:     4 22'--------------11101011   ->     1 8'00100000
    156:     4 22'--------------110-1-11   ->     1 8'00100000
    157:     4 22'--------------111011-1   ->     1 8'00100000
    158:     4 22'--------------11111--1   ->     1 8'00100000
    159:     4 22'--------------1010-001   ->     4 8'00100000
    160:     4 22'--------------0-10-001   ->     4 8'00100000
    161:     4 22'--------------100---01   ->     4 8'00100000
    162:     4 22'--------------0-0---01   ->     4 8'00100000
    163:     4 22'--------------10101011   ->     4 8'00100000
    164:     4 22'--------------0-101011   ->     4 8'00100000
    165:     4 22'--------------100-1-11   ->     4 8'00100000
    166:     4 22'--------------0-0-1-11   ->     4 8'00100000
    167:     4 22'--------------101011-1   ->     4 8'00100000
    168:     4 22'--------------0-1011-1   ->     4 8'00100000
    169:     4 22'--------------10111--1   ->     4 8'00100000
    170:     4 22'--------------0-111--1   ->     4 8'00100000
    171:     5 22'----------------11000-   ->     0 8'01000000
    172:     5 22'----------------1-010-   ->     0 8'01000000
    173:     5 22'------------------0-1-   ->     0 8'01000000
    174:     5 22'----------------10-000   ->     1 8'01000000
    175:     5 22'----------------0---00   ->     1 8'01000000
    176:     5 22'----------------101010   ->     1 8'01000000
    177:     5 22'----------------0-1-10   ->     1 8'01000000
    178:     5 22'----------------1011-0   ->     1 8'01000000
    179:     5 22'----------------111--0   ->     1 8'01000000
    180:     5 22'--------------1110-001   ->     1 8'01000000
    181:     5 22'--------------110---01   ->     1 8'01000000
    182:     5 22'--------------11101011   ->     1 8'01000000
    183:     5 22'--------------110-1-11   ->     1 8'01000000
    184:     5 22'--------------111011-1   ->     1 8'01000000
    185:     5 22'--------------11111--1   ->     1 8'01000000
    186:     5 22'--------------1010-001   ->     5 8'01000000
    187:     5 22'--------------0-10-001   ->     5 8'01000000
    188:     5 22'--------------100---01   ->     5 8'01000000
    189:     5 22'--------------0-0---01   ->     5 8'01000000
    190:     5 22'--------------10101011   ->     5 8'01000000
    191:     5 22'--------------0-101011   ->     5 8'01000000
    192:     5 22'--------------100-1-11   ->     5 8'01000000
    193:     5 22'--------------0-0-1-11   ->     5 8'01000000
    194:     5 22'--------------101011-1   ->     5 8'01000000
    195:     5 22'--------------0-1011-1   ->     5 8'01000000
    196:     5 22'--------------10111--1   ->     5 8'01000000
    197:     5 22'--------------0-111--1   ->     5 8'01000000

-------------------------------------

6.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\soc.cpu.cpu_state$6425' from module `\hx8kdemo'.

6.21. Executing OPT pass (performing simple optimizations).

6.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.
<suppressed ~3 debug messages>

6.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

6.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

6.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..
Removed 0 unused cells and 30 unused wires.
<suppressed ~1 debug messages>

6.21.5. Finished fast OPT passes.

6.22. Executing MEMORY pass.

6.22.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\soc.cpu.cpuregs.$memwr$\regs$picosoc.v:236$189' in module `\hx8kdemo': merged $dff to cell.
Checking cell `$techmap\soc.memory.$memwr$\mem$picosoc.v:255$1117' in module `\hx8kdemo': merged $dff to cell.
Checking cell `$techmap\soc.memory.$memwr$\mem$picosoc.v:256$1118' in module `\hx8kdemo': merged $dff to cell.
Checking cell `$techmap\soc.memory.$memwr$\mem$picosoc.v:257$1119' in module `\hx8kdemo': merged $dff to cell.
Checking cell `$techmap\soc.memory.$memwr$\mem$picosoc.v:258$1120' in module `\hx8kdemo': merged $dff to cell.
Checking cell `$techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:238$187' in module `\hx8kdemo': merged address $dff to cell.
Checking cell `$techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:239$188' in module `\hx8kdemo': merged address $dff to cell.
Checking cell `$techmap\soc.memory.$memrd$\mem$picosoc.v:254$1116' in module `\hx8kdemo': merged data $dff to cell.

6.22.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..
Removed 13 unused cells and 14 unused wires.
<suppressed ~14 debug messages>

6.22.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory hx8kdemo.soc.memory.mem by address:
  New clock domain: posedge \clk
    Port 0 ($techmap\soc.memory.$memwr$\mem$picosoc.v:255$1117) has addr \soc.cpu.mem_addr [9:2].
      Active bits: 00000000000000000000000011111111
    Port 1 ($techmap\soc.memory.$memwr$\mem$picosoc.v:256$1118) has addr \soc.cpu.mem_addr [9:2].
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($techmap\soc.memory.$memwr$\mem$picosoc.v:257$1119) has addr \soc.cpu.mem_addr [9:2].
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($techmap\soc.memory.$memwr$\mem$picosoc.v:258$1120) has addr \soc.cpu.mem_addr [9:2].
      Active bits: 11111111000000000000000000000000
      Merging port 2 into this one.
      Active bits: 11111111111111111111111111111111

6.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..

6.22.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\soc.cpu.cpuregs.regs' in module `\hx8kdemo':
  $techmap\soc.cpu.cpuregs.$memwr$\regs$picosoc.v:236$189 ($memwr)
  $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:239$188 ($memrd)
  $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:238$187 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\soc.memory.mem' in module `\hx8kdemo':
  $techmap\soc.memory.$memwr$\mem$picosoc.v:258$1120 ($memwr)
  $techmap\soc.memory.$memrd$\mem$picosoc.v:254$1116 ($memrd)

6.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..

6.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing hx8kdemo.soc.cpu.cpuregs.regs:
  Properties: ports=3 bits=1024 rports=2 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7168 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7680 efficiency=3
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7936 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 rejected: requirement 'min efficiency 2' not met.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Selecting best of 2 rules:
    Efficiency for rule 2.1: efficiency=3, cells=8, acells=1
    Efficiency for rule 1.1: efficiency=6, cells=4, acells=1
    Selected rule 1.1 with efficiency 6.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Mapped to bram port A1.2.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: soc.cpu.cpuregs.regs.0.0.0
        Adding extra logic for transparent port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 1>: soc.cpu.cpuregs.regs.0.0.1
        Adding extra logic for transparent port A1.2.
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: soc.cpu.cpuregs.regs.1.0.0
        Adding extra logic for transparent port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 1>: soc.cpu.cpuregs.regs.1.0.1
        Adding extra logic for transparent port A1.2.
Processing hx8kdemo.soc.memory.mem:
  Properties: ports=2 bits=8192 rports=1 wports=1 dbits=32 abits=8 words=256
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2048 efficiency=50
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=768 dwaste=0 bwaste=3072 waste=3072 efficiency=25
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3072 efficiency=25
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1792 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3584 efficiency=12
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=12, cells=16, acells=1
    Efficiency for rule 2.2: efficiency=25, cells=8, acells=1
    Efficiency for rule 2.1: efficiency=50, cells=4, acells=1
    Efficiency for rule 1.1: efficiency=100, cells=2, acells=1
    Selected rule 1.1 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: soc.memory.mem.0.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: soc.memory.mem.1.0.0

6.25. Executing TECHMAP pass (map to technology primitives).

6.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

6.25.2. Continuing TECHMAP pass.
Using template $paramod\$__ICE40_RAM4K_M0\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$4200c10d2e07b3359d49ca78f8f6d43ec6f7e316\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~74 debug messages>

6.26. Executing ICE40_BRAMINIT pass.

6.27. Executing OPT pass (performing simple optimizations).

6.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.
<suppressed ~110 debug messages>

6.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
<suppressed ~38 debug messages>
Removed a total of 12 cells.

6.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

6.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..
Removed 24 unused cells and 288 unused wires.
<suppressed ~28 debug messages>

6.27.5. Finished fast OPT passes.

6.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

6.29. Executing OPT pass (performing simple optimizations).

6.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.

6.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
Removed a total of 0 cells.

6.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hx8kdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/6 on $pmux $techmap\soc.cpu.$procmux$2528.
    dead port 4/6 on $pmux $techmap\soc.cpu.$procmux$2528.
    dead port 3/6 on $pmux $techmap\soc.cpu.$procmux$2775.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$2791.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2791.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$3057.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3057.
    dead port 1/5 on $pmux $techmap\soc.cpu.$procmux$3059.
    dead port 2/5 on $pmux $techmap\soc.cpu.$procmux$3059.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$3069.
    dead port 2/3 on $pmux $techmap\soc.cpu.$procmux$3069.
    dead port 3/3 on $pmux $techmap\soc.cpu.$procmux$3069.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$3267.
    dead port 3/5 on $pmux $techmap\soc.cpu.$procmux$3292.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$3301.
    dead port 2/3 on $pmux $techmap\soc.cpu.$procmux$3301.
    dead port 3/3 on $pmux $techmap\soc.cpu.$procmux$3301.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$3306.
    dead port 2/3 on $pmux $techmap\soc.cpu.$procmux$3306.
    dead port 3/3 on $pmux $techmap\soc.cpu.$procmux$3306.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$3310.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3310.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$3313.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3313.
Removed 24 multiplexer ports.
<suppressed ~278 debug messages>

6.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hx8kdemo.
    New input vector for $reduce_or cell $techmap$techmap7207\soc.memory.mem.1.0.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$7202: { \soc.memory.wen [2] \soc.memory.wen [3] }
    New input vector for $reduce_or cell $techmap$techmap7205\soc.memory.mem.0.0.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$7202: { \soc.memory.wen [0] \soc.memory.wen [1] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5955: { \soc.cpu.cpu_state [0] \soc.cpu.cpu_state [1] \soc.cpu.cpu_state [2] \soc.cpu.cpu_state [4] \soc.cpu.cpu_state [5] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$5951: { \soc.cpu.cpu_state [0] \soc.cpu.cpu_state [1] \soc.cpu.cpu_state [2] \soc.cpu.cpu_state [3] \soc.cpu.cpu_state [5] }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$7026: { $auto$fsm_map.cc:118:implement_pattern_cache$6992 $auto$fsm_map.cc:118:implement_pattern_cache$6988 $auto$fsm_map.cc:118:implement_pattern_cache$6984 $auto$fsm_map.cc:118:implement_pattern_cache$6980 $auto$fsm_map.cc:118:implement_pattern_cache$6976 $auto$fsm_map.cc:118:implement_pattern_cache$6972 $auto$fsm_map.cc:118:implement_pattern_cache$6968 $auto$fsm_map.cc:118:implement_pattern_cache$6964 $auto$fsm_map.cc:118:implement_pattern_cache$6960 $auto$fsm_map.cc:118:implement_pattern_cache$6956 $auto$fsm_map.cc:118:implement_pattern_cache$6996 $auto$fsm_map.cc:118:implement_pattern_cache$7000 $auto$fsm_map.cc:118:implement_pattern_cache$7020 $auto$fsm_map.cc:118:implement_pattern_cache$7016 $auto$fsm_map.cc:118:implement_pattern_cache$7012 $auto$fsm_map.cc:118:implement_pattern_cache$7024 $auto$fsm_map.cc:118:implement_pattern_cache$7004 $auto$fsm_map.cc:118:implement_pattern_cache$7008 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$6758: { $auto$fsm_map.cc:118:implement_pattern_cache$6756 $auto$fsm_map.cc:118:implement_pattern_cache$6560 $auto$fsm_map.cc:118:implement_pattern_cache$6752 $auto$fsm_map.cc:118:implement_pattern_cache$6748 $auto$fsm_map.cc:118:implement_pattern_cache$6636 $auto$fsm_map.cc:118:implement_pattern_cache$6744 $auto$fsm_map.cc:118:implement_pattern_cache$6740 $auto$fsm_map.cc:118:implement_pattern_cache$6736 $auto$fsm_map.cc:118:implement_pattern_cache$6732 $auto$fsm_map.cc:118:implement_pattern_cache$6728 $auto$fsm_map.cc:118:implement_pattern_cache$6724 $auto$fsm_map.cc:118:implement_pattern_cache$6720 $auto$fsm_map.cc:118:implement_pattern_cache$6714 $auto$fsm_map.cc:118:implement_pattern_cache$6710 $auto$fsm_map.cc:118:implement_pattern_cache$6706 $auto$fsm_map.cc:118:implement_pattern_cache$6702 $auto$fsm_map.cc:118:implement_pattern_cache$6698 $auto$fsm_map.cc:118:implement_pattern_cache$6694 $auto$fsm_map.cc:118:implement_pattern_cache$6690 $auto$fsm_map.cc:118:implement_pattern_cache$6686 $auto$fsm_map.cc:118:implement_pattern_cache$6682 $auto$fsm_map.cc:118:implement_pattern_cache$6678 $auto$fsm_map.cc:118:implement_pattern_cache$6672 $auto$fsm_map.cc:118:implement_pattern_cache$6668 $auto$fsm_map.cc:118:implement_pattern_cache$6664 $auto$fsm_map.cc:118:implement_pattern_cache$6660 $auto$fsm_map.cc:118:implement_pattern_cache$6656 $auto$fsm_map.cc:118:implement_pattern_cache$6652 $auto$fsm_map.cc:118:implement_pattern_cache$6648 $auto$fsm_map.cc:118:implement_pattern_cache$6534 $auto$fsm_map.cc:118:implement_pattern_cache$6576 $auto$fsm_map.cc:118:implement_pattern_cache$6584 $auto$fsm_map.cc:118:implement_pattern_cache$6580 $auto$fsm_map.cc:118:implement_pattern_cache$6610 $auto$fsm_map.cc:118:implement_pattern_cache$6644 $auto$fsm_map.cc:118:implement_pattern_cache$6588 $auto$fsm_map.cc:118:implement_pattern_cache$6594 $auto$fsm_map.cc:118:implement_pattern_cache$6602 $auto$fsm_map.cc:118:implement_pattern_cache$6606 $auto$fsm_map.cc:118:implement_pattern_cache$6564 $auto$fsm_map.cc:118:implement_pattern_cache$6640 $auto$fsm_map.cc:74:implement_pattern_cache$6498 $auto$fsm_map.cc:118:implement_pattern_cache$6630 $auto$fsm_map.cc:118:implement_pattern_cache$6626 $auto$fsm_map.cc:74:implement_pattern_cache$6496 $auto$fsm_map.cc:74:implement_pattern_cache$6494 $auto$fsm_map.cc:118:implement_pattern_cache$6568 $auto$fsm_map.cc:118:implement_pattern_cache$6614 $auto$fsm_map.cc:118:implement_pattern_cache$6538 $auto$fsm_map.cc:118:implement_pattern_cache$6598 $auto$fsm_map.cc:118:implement_pattern_cache$6542 $auto$fsm_map.cc:118:implement_pattern_cache$6514 $auto$fsm_map.cc:118:implement_pattern_cache$6552 $auto$fsm_map.cc:118:implement_pattern_cache$6572 $auto$fsm_map.cc:118:implement_pattern_cache$6546 $auto$fsm_map.cc:118:implement_pattern_cache$6510 $auto$fsm_map.cc:74:implement_pattern_cache$6504 $auto$fsm_map.cc:74:implement_pattern_cache$6502 $auto$fsm_map.cc:74:implement_pattern_cache$6500 $auto$fsm_map.cc:118:implement_pattern_cache$6530 $auto$fsm_map.cc:118:implement_pattern_cache$6526 $auto$fsm_map.cc:118:implement_pattern_cache$6522 $auto$fsm_map.cc:118:implement_pattern_cache$6518 $auto$fsm_map.cc:118:implement_pattern_cache$6556 $auto$fsm_map.cc:118:implement_pattern_cache$6622 $auto$fsm_map.cc:118:implement_pattern_cache$6618 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$6493: { $auto$fsm_map.cc:118:implement_pattern_cache$6465 $auto$fsm_map.cc:118:implement_pattern_cache$6461 $auto$fsm_map.cc:118:implement_pattern_cache$6457 $auto$fsm_map.cc:118:implement_pattern_cache$6453 $auto$fsm_map.cc:118:implement_pattern_cache$6449 $auto$fsm_map.cc:118:implement_pattern_cache$6445 $auto$fsm_map.cc:118:implement_pattern_cache$6441 $auto$fsm_map.cc:74:implement_pattern_cache$6491 $auto$fsm_map.cc:74:implement_pattern_cache$6489 $auto$fsm_map.cc:74:implement_pattern_cache$6487 $auto$fsm_map.cc:118:implement_pattern_cache$6485 $auto$fsm_map.cc:118:implement_pattern_cache$6481 $auto$fsm_map.cc:118:implement_pattern_cache$6477 $auto$fsm_map.cc:118:implement_pattern_cache$6473 $auto$fsm_map.cc:118:implement_pattern_cache$6469 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:105:implement_pattern_cache$6719: { \soc.cpu.cpu_state [4] \soc.cpu.cpu_state [5] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:942:replace_cell$7075:
      Old ports: A=16'0000000000000000, B={ \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen }, Y=$auto$rtlil.cc:1918:Mux$7078
      New ports: A=1'0, B=\soc.cpu.cpuregs.wen, Y=$auto$rtlil.cc:1918:Mux$7078 [0]
      New connections: $auto$rtlil.cc:1918:Mux$7078 [15:1] = { $auto$rtlil.cc:1918:Mux$7078 [0] $auto$rtlil.cc:1918:Mux$7078 [0] $auto$rtlil.cc:1918:Mux$7078 [0] $auto$rtlil.cc:1918:Mux$7078 [0] $auto$rtlil.cc:1918:Mux$7078 [0] $auto$rtlil.cc:1918:Mux$7078 [0] $auto$rtlil.cc:1918:Mux$7078 [0] $auto$rtlil.cc:1918:Mux$7078 [0] $auto$rtlil.cc:1918:Mux$7078 [0] $auto$rtlil.cc:1918:Mux$7078 [0] $auto$rtlil.cc:1918:Mux$7078 [0] $auto$rtlil.cc:1918:Mux$7078 [0] $auto$rtlil.cc:1918:Mux$7078 [0] $auto$rtlil.cc:1918:Mux$7078 [0] $auto$rtlil.cc:1918:Mux$7078 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:942:replace_cell$7119:
      Old ports: A=16'0000000000000000, B={ \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen }, Y=$auto$rtlil.cc:1918:Mux$7039
      New ports: A=1'0, B=\soc.cpu.cpuregs.wen, Y=$auto$rtlil.cc:1918:Mux$7039 [0]
      New connections: $auto$rtlil.cc:1918:Mux$7039 [15:1] = { $auto$rtlil.cc:1918:Mux$7039 [0] $auto$rtlil.cc:1918:Mux$7039 [0] $auto$rtlil.cc:1918:Mux$7039 [0] $auto$rtlil.cc:1918:Mux$7039 [0] $auto$rtlil.cc:1918:Mux$7039 [0] $auto$rtlil.cc:1918:Mux$7039 [0] $auto$rtlil.cc:1918:Mux$7039 [0] $auto$rtlil.cc:1918:Mux$7039 [0] $auto$rtlil.cc:1918:Mux$7039 [0] $auto$rtlil.cc:1918:Mux$7039 [0] $auto$rtlil.cc:1918:Mux$7039 [0] $auto$rtlil.cc:1918:Mux$7039 [0] $auto$rtlil.cc:1918:Mux$7039 [0] $auto$rtlil.cc:1918:Mux$7039 [0] $auto$rtlil.cc:1918:Mux$7039 [0] }
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$2520:
      Old ports: A=\soc.cpu.mem_rdata_word, B={ \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15:0] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7:0] }, Y=$techmap\soc.cpu.$procmux$2520_Y
      New ports: A=\soc.cpu.mem_rdata_word [31:8], B={ \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15:7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] }, Y=$techmap\soc.cpu.$procmux$2520_Y [31:8]
      New connections: $techmap\soc.cpu.$procmux$2520_Y [7:0] = \soc.cpu.mem_rdata_word [7:0]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$3596:
      Old ports: A={ $auto$wreduce.cc:454:run$6114 [31] $auto$wreduce.cc:454:run$6114 [31] $auto$wreduce.cc:454:run$6114 [31] $auto$wreduce.cc:454:run$6114 [31] $auto$wreduce.cc:454:run$6114 [31] $auto$wreduce.cc:454:run$6114 [31] $auto$wreduce.cc:454:run$6114 [31] $auto$wreduce.cc:454:run$6114 [31] $auto$wreduce.cc:454:run$6114 [31] $auto$wreduce.cc:454:run$6114 [31] $auto$wreduce.cc:454:run$6114 [31] $auto$wreduce.cc:454:run$6114 [31] }, B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$techmap\soc.cpu.$procmux$3596_Y
      New ports: A=$auto$wreduce.cc:454:run$6114 [31], B=\soc.cpu.mem_rdata_latched [12], Y=$techmap\soc.cpu.$procmux$3596_Y [0]
      New connections: $techmap\soc.cpu.$procmux$3596_Y [11:1] = { $techmap\soc.cpu.$procmux$3596_Y [0] $techmap\soc.cpu.$procmux$3596_Y [0] $techmap\soc.cpu.$procmux$3596_Y [0] $techmap\soc.cpu.$procmux$3596_Y [0] $techmap\soc.cpu.$procmux$3596_Y [0] $techmap\soc.cpu.$procmux$3596_Y [0] $techmap\soc.cpu.$procmux$3596_Y [0] $techmap\soc.cpu.$procmux$3596_Y [0] $techmap\soc.cpu.$procmux$3596_Y [0] $techmap\soc.cpu.$procmux$3596_Y [0] $techmap\soc.cpu.$procmux$3596_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$3624:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:454:run$6069 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6069 [1]
      New connections: $auto$wreduce.cc:454:run$6069 [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$3809:
      Old ports: A={ $auto$wreduce.cc:454:run$6114 [19:16] \soc.cpu.mem_rdata_latched [15:12] }, B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$techmap\soc.cpu.$procmux$3809_Y
      New ports: A={ $auto$wreduce.cc:454:run$6114 [19:16] \soc.cpu.mem_rdata_latched [15:13] }, B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$techmap\soc.cpu.$procmux$3809_Y [7:1]
      New connections: $techmap\soc.cpu.$procmux$3809_Y [0] = \soc.cpu.mem_rdata_latched [12]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4469:
      Old ports: A={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, B={ \soc.cpu.mem_rdata_latched [6] 4'0000 }, Y=$techmap\soc.cpu.$procmux$4469_Y
      New ports: A={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, B={ \soc.cpu.mem_rdata_latched [6] 1'0 }, Y={ $techmap\soc.cpu.$procmux$4469_Y [4] $techmap\soc.cpu.$procmux$4469_Y [0] }
      New connections: $techmap\soc.cpu.$procmux$4469_Y [3:1] = { $techmap\soc.cpu.$procmux$4469_Y [0] $techmap\soc.cpu.$procmux$4469_Y [0] $techmap\soc.cpu.$procmux$4469_Y [0] }
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$4636:
      Old ports: A=\soc.cpu.reg_op2, B={ \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] }, Y=\soc.cpu.mem_la_wdata
      New ports: A=\soc.cpu.reg_op2 [31:8], B={ \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] }, Y=\soc.cpu.mem_la_wdata [31:8]
      New connections: \soc.cpu.mem_la_wdata [7:0] = \soc.cpu.reg_op2 [7:0]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$../picorv32.v:1312$1590:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:454:run$6073 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:454:run$6073 [2:1]
      New connections: $auto$wreduce.cc:454:run$6073 [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$../picorv32.v:1542$1673:
      Old ports: A=2'00, B=2'10, Y=$techmap\soc.cpu.$ternary$../picorv32.v:1542$1673_Y
      New ports: A=1'0, B=1'1, Y=$techmap\soc.cpu.$ternary$../picorv32.v:1542$1673_Y [1]
      New connections: $techmap\soc.cpu.$ternary$../picorv32.v:1542$1673_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$../picorv32.v:1547$1675:
      Old ports: A=3'011, B=3'100, Y=$auto$wreduce.cc:454:run$6074 [2:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:454:run$6074 [2] $auto$wreduce.cc:454:run$6074 [0] }
      New connections: $auto$wreduce.cc:454:run$6074 [1] = $auto$wreduce.cc:454:run$6074 [0]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$../picorv32.v:1553$1680:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:454:run$6075 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:454:run$6075 [2:1]
      New connections: $auto$wreduce.cc:454:run$6075 [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$../picorv32.v:382$1199:
      Old ports: A={ \soc.cpu.reg_op1 [31:2] 2'00 }, B={ $techmap\soc.cpu.$add$../picorv32.v:382$1198_Y 2'00 }, Y=\soc.cpu.mem_la_addr
      New ports: A=\soc.cpu.reg_op1 [31:2], B=$techmap\soc.cpu.$add$../picorv32.v:382$1198_Y, Y=\soc.cpu.mem_la_addr [31:2]
      New connections: \soc.cpu.mem_la_addr [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$../picorv32.v:411$1214:
      Old ports: A=4'0011, B=4'1100, Y=$techmap\soc.cpu.$ternary$../picorv32.v:411$1214_Y
      New ports: A=2'01, B=2'10, Y={ $techmap\soc.cpu.$ternary$../picorv32.v:411$1214_Y [2] $techmap\soc.cpu.$ternary$../picorv32.v:411$1214_Y [0] }
      New connections: { $techmap\soc.cpu.$ternary$../picorv32.v:411$1214_Y [3] $techmap\soc.cpu.$ternary$../picorv32.v:411$1214_Y [1] } = { $techmap\soc.cpu.$ternary$../picorv32.v:411$1214_Y [2] $techmap\soc.cpu.$ternary$../picorv32.v:411$1214_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$../picorv32.v:491$1232:
      Old ports: A=6'000000, B=6'100000, Y=$techmap\soc.cpu.$ternary$../picorv32.v:491$1232_Y [5:0]
      New ports: A=1'0, B=1'1, Y=$techmap\soc.cpu.$ternary$../picorv32.v:491$1232_Y [5]
      New connections: $techmap\soc.cpu.$ternary$../picorv32.v:491$1232_Y [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$../picorv32.v:617$1276:
      Old ports: A=2'11, B=2'00, Y=$techmap\soc.cpu.$ternary$../picorv32.v:617$1276_Y [1:0]
      New ports: A=1'1, B=1'0, Y=$techmap\soc.cpu.$ternary$../picorv32.v:617$1276_Y [0]
      New connections: $techmap\soc.cpu.$ternary$../picorv32.v:617$1276_Y [1] = $techmap\soc.cpu.$ternary$../picorv32.v:617$1276_Y [0]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.pcpi_mul.$procmux$4817:
      Old ports: A={ \soc.cpu.pcpi_mul.next_rdt [59] 3'000 \soc.cpu.pcpi_mul.next_rdt [55] 3'000 \soc.cpu.pcpi_mul.next_rdt [51] 3'000 \soc.cpu.pcpi_mul.next_rdt [47] 3'000 \soc.cpu.pcpi_mul.next_rdt [43] 3'000 \soc.cpu.pcpi_mul.next_rdt [39] 3'000 \soc.cpu.pcpi_mul.next_rdt [35] 3'000 \soc.cpu.pcpi_mul.next_rdt [31] 3'000 \soc.cpu.pcpi_mul.next_rdt [27] 3'000 \soc.cpu.pcpi_mul.next_rdt [23] 3'000 \soc.cpu.pcpi_mul.next_rdt [19] 3'000 \soc.cpu.pcpi_mul.next_rdt [15] 3'000 \soc.cpu.pcpi_mul.next_rdt [11] 3'000 \soc.cpu.pcpi_mul.next_rdt [7] 3'000 \soc.cpu.pcpi_mul.next_rdt [3] 4'0000 }, B=61'0000000000000000000000000000000000000000000000000000000000000, Y=$auto$wreduce.cc:454:run$6078 [60:0]
      New ports: A={ \soc.cpu.pcpi_mul.next_rdt [59] \soc.cpu.pcpi_mul.next_rdt [55] \soc.cpu.pcpi_mul.next_rdt [51] \soc.cpu.pcpi_mul.next_rdt [47] \soc.cpu.pcpi_mul.next_rdt [43] \soc.cpu.pcpi_mul.next_rdt [39] \soc.cpu.pcpi_mul.next_rdt [35] \soc.cpu.pcpi_mul.next_rdt [31] \soc.cpu.pcpi_mul.next_rdt [27] \soc.cpu.pcpi_mul.next_rdt [23] \soc.cpu.pcpi_mul.next_rdt [19] \soc.cpu.pcpi_mul.next_rdt [15] \soc.cpu.pcpi_mul.next_rdt [11] \soc.cpu.pcpi_mul.next_rdt [7] \soc.cpu.pcpi_mul.next_rdt [3] }, B=15'000000000000000, Y={ $auto$wreduce.cc:454:run$6078 [60] $auto$wreduce.cc:454:run$6078 [56] $auto$wreduce.cc:454:run$6078 [52] $auto$wreduce.cc:454:run$6078 [48] $auto$wreduce.cc:454:run$6078 [44] $auto$wreduce.cc:454:run$6078 [40] $auto$wreduce.cc:454:run$6078 [36] $auto$wreduce.cc:454:run$6078 [32] $auto$wreduce.cc:454:run$6078 [28] $auto$wreduce.cc:454:run$6078 [24] $auto$wreduce.cc:454:run$6078 [20] $auto$wreduce.cc:454:run$6078 [16] $auto$wreduce.cc:454:run$6078 [12] $auto$wreduce.cc:454:run$6078 [8] $auto$wreduce.cc:454:run$6078 [4] }
      New connections: { $auto$wreduce.cc:454:run$6078 [59:57] $auto$wreduce.cc:454:run$6078 [55:53] $auto$wreduce.cc:454:run$6078 [51:49] $auto$wreduce.cc:454:run$6078 [47:45] $auto$wreduce.cc:454:run$6078 [43:41] $auto$wreduce.cc:454:run$6078 [39:37] $auto$wreduce.cc:454:run$6078 [35:33] $auto$wreduce.cc:454:run$6078 [31:29] $auto$wreduce.cc:454:run$6078 [27:25] $auto$wreduce.cc:454:run$6078 [23:21] $auto$wreduce.cc:454:run$6078 [19:17] $auto$wreduce.cc:454:run$6078 [15:13] $auto$wreduce.cc:454:run$6078 [11:9] $auto$wreduce.cc:454:run$6078 [7:5] $auto$wreduce.cc:454:run$6078 [3:0] } = 46'0000000000000000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.pcpi_mul.$procmux$4830:
      Old ports: A={ 32'00000000000000000000000000000000 \soc.cpu.reg_op2 }, B={ \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 [31] \soc.cpu.reg_op2 }, Y=$techmap\soc.cpu.pcpi_mul.$procmux$4830_Y
      New ports: A=1'0, B=\soc.cpu.reg_op2 [31], Y=$techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32]
      New connections: { $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [63:33] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [31:0] } = { $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4830_Y [32] \soc.cpu.reg_op2 }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.pcpi_mul.$procmux$4839:
      Old ports: A={ 32'00000000000000000000000000000000 \soc.cpu.reg_op1 }, B={ \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 [31] \soc.cpu.reg_op1 }, Y=$techmap\soc.cpu.pcpi_mul.$procmux$4839_Y
      New ports: A=1'0, B=\soc.cpu.reg_op1 [31], Y=$techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32]
      New connections: { $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [63:33] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [31:0] } = { $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] $techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [32] \soc.cpu.reg_op1 }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.pcpi_mul.$ternary$../picorv32.v:2285$975:
      Old ports: A=6'011110, B=6'111110, Y=$auto$wreduce.cc:454:run$6081 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6081 [5]
      New connections: $auto$wreduce.cc:454:run$6081 [4:0] = 5'11110
    Consolidated identical input bits for $mux cell $techmap\soc.simpleuart.$ternary$simpleuart.v:53$116:
      Old ports: A=32'11111111111111111111111111111111, B={ 24'000000000000000000000000 \soc.simpleuart.recv_buf_data }, Y=\soc.simpleuart_reg_dat_do
      New ports: A=9'111111111, B={ 1'0 \soc.simpleuart.recv_buf_data }, Y=\soc.simpleuart_reg_dat_do [8:0]
      New connections: \soc.simpleuart_reg_dat_do [31:9] = { \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] }
    Consolidated identical input bits for $pmux cell $techmap\soc.spimemio.$procmux$5586:
      Old ports: A=8'11101101, B=24'111010111011101100000011, Y=$techmap\soc.spimemio.$procmux$5586_Y
      New ports: A=5'10110, B=15'101010110100001, Y={ $techmap\soc.spimemio.$procmux$5586_Y [6] $techmap\soc.spimemio.$procmux$5586_Y [4:1] }
      New connections: { $techmap\soc.spimemio.$procmux$5586_Y [7] $techmap\soc.spimemio.$procmux$5586_Y [5] $techmap\soc.spimemio.$procmux$5586_Y [0] } = { $techmap\soc.spimemio.$procmux$5586_Y [3] $techmap\soc.spimemio.$procmux$5586_Y [3] 1'1 }
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.$ternary$spimemio.v:316$61:
      Old ports: A=7'1111111, B=7'0100101, Y=$auto$wreduce.cc:454:run$6110 [6:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$6110 [1]
      New connections: { $auto$wreduce.cc:454:run$6110 [6:2] $auto$wreduce.cc:454:run$6110 [0] } = { $auto$wreduce.cc:454:run$6110 [1] 1'1 $auto$wreduce.cc:454:run$6110 [1] $auto$wreduce.cc:454:run$6110 [1] 2'11 }
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.xfer.$procmux$5081:
      Old ports: A=\soc.spimemio.xfer.count, B={ $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$95_Y [3:1] \soc.spimemio.xfer.count [0] }, Y=$techmap\soc.spimemio.xfer.$5\next_count[3:0]
      New ports: A=\soc.spimemio.xfer.count [3:1], B=$techmap\soc.spimemio.xfer.$sub$spimemio.v:524$95_Y [3:1], Y=$techmap\soc.spimemio.xfer.$5\next_count[3:0] [3:1]
      New connections: $techmap\soc.spimemio.xfer.$5\next_count[3:0] [0] = \soc.spimemio.xfer.count [0]
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.xfer.$procmux$5122:
      Old ports: A=\soc.spimemio.xfer.count, B={ $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$83_Y [3:2] \soc.spimemio.xfer.count [1:0] }, Y=$techmap\soc.spimemio.xfer.$4\next_count[3:0]
      New ports: A=\soc.spimemio.xfer.count [3:2], B=$techmap\soc.spimemio.xfer.$sub$spimemio.v:491$83_Y [3:2], Y=$techmap\soc.spimemio.xfer.$4\next_count[3:0] [3:2]
      New connections: $techmap\soc.spimemio.xfer.$4\next_count[3:0] [1:0] = \soc.spimemio.xfer.count [1:0]
  Optimizing cells in module \hx8kdemo.
    Consolidated identical input bits for $mux cell $techmap\soc.$ternary$picosoc.v:130$157:
      Old ports: A=0, B=\soc.simpleuart_reg_dat_do, Y=$techmap\soc.$ternary$picosoc.v:130$157_Y
      New ports: A=9'000000000, B=\soc.simpleuart_reg_dat_do [8:0], Y=$techmap\soc.$ternary$picosoc.v:130$157_Y [8:0]
      New connections: $techmap\soc.$ternary$picosoc.v:130$157_Y [31:9] = { $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] $techmap\soc.$ternary$picosoc.v:130$157_Y [8] }
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.$procmux$5576:
      Old ports: A={ 1'1 $auto$wreduce.cc:454:run$6110 [6:0] }, B={ 4'0000 \soc.spimemio.config_dummy }, Y=$techmap\soc.spimemio.$procmux$5576_Y
      New ports: A={ 1'1 $auto$wreduce.cc:454:run$6110 [1] $auto$wreduce.cc:454:run$6110 [1] 1'1 $auto$wreduce.cc:454:run$6110 [1] 1'1 }, B={ 2'00 \soc.spimemio.config_dummy }, Y=$techmap\soc.spimemio.$procmux$5576_Y [5:0]
      New connections: $techmap\soc.spimemio.$procmux$5576_Y [7:6] = $techmap\soc.spimemio.$procmux$5576_Y [5:4]
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.xfer.$procmux$5198:
      Old ports: A=\soc.spimemio.xfer.count, B=$techmap\soc.spimemio.xfer.$5\next_count[3:0], Y=$techmap\soc.spimemio.xfer.$procmux$5198_Y
      New ports: A=\soc.spimemio.xfer.count [3:1], B=$techmap\soc.spimemio.xfer.$5\next_count[3:0] [3:1], Y=$techmap\soc.spimemio.xfer.$procmux$5198_Y [3:1]
      New connections: $techmap\soc.spimemio.xfer.$procmux$5198_Y [0] = \soc.spimemio.xfer.count [0]
  Optimizing cells in module \hx8kdemo.
Performed a total of 36 changes.

6.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
Removed a total of 0 cells.

6.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

6.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..
Removed 6 unused cells and 15 unused wires.
<suppressed ~8 debug messages>

6.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.

6.29.9. Rerunning OPT passes. (Maybe there is more to do..)

6.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hx8kdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~275 debug messages>

6.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hx8kdemo.
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$3346:
      Old ports: A=$techmap\soc.cpu.$3\current_pc[31:0], B=$techmap\soc.cpu.$add$../picorv32.v:1553$1681_Y, Y=$techmap\soc.cpu.$procmux$3346_Y
      New ports: A=$techmap\soc.cpu.$3\current_pc[31:0] [31:1], B=$techmap\soc.cpu.$add$../picorv32.v:1553$1681_Y [31:1], Y=$techmap\soc.cpu.$procmux$3346_Y [31:1]
      New connections: $techmap\soc.cpu.$procmux$3346_Y [0] = $techmap\soc.cpu.$3\current_pc[31:0] [0]
  Optimizing cells in module \hx8kdemo.
Performed a total of 1 changes.

6.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
Removed a total of 0 cells.

6.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

6.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..

6.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.

6.29.16. Rerunning OPT passes. (Maybe there is more to do..)

6.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \hx8kdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~275 debug messages>

6.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \hx8kdemo.
Performed a total of 0 changes.

6.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
Removed a total of 0 cells.

6.29.20. Executing OPT_RMDFF pass (remove dff with constant values).

6.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..

6.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.

6.29.23. Finished OPT passes. (There is nothing left to do.)

6.30. Executing ICE40_WRAPCARRY pass (wrap carries).

6.31. Executing TECHMAP pass (map to technology primitives).

6.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.31.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

6.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $lut.
Using extmapper maccmap for cells of type $macc.
  add \soc.cpu.pcpi_mul.rd [11:8] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [11:8] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [11:8] (4 bits, unsigned)
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_pmux\WIDTH=24\S_WIDTH=2 for cells of type $pmux.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$9b74a473ccd678a23e1df4cc12019cbbece20051\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=5 for cells of type $pmux.
Using template $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$88abf4b792300efa328894e6936be740fdc22f6d\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=31\B_WIDTH=31\Y_WIDTH=31 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=26\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=1\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=63\Y_WIDTH=63 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=1\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=8 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=13 for cells of type $pmux.
Using extmapper simplemap for cells of type $ne.
  add \soc.cpu.pcpi_mul.rd [43:40] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [43:40] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [43:40] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [51:48] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [51:48] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [51:48] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [47:44] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [47:44] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [47:44] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [59:56] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [59:56] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [59:56] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [55:52] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [55:52] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [55:52] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [63:60] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [63:60] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [60] (1 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
  add \soc.cpu.pcpi_mul.rd [19:16] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [19:16] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [19:16] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [3:0] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [3:0] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [3:0] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [15:12] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [15:12] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [15:12] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [7:4] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [7:4] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [7:4] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [39:36] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [39:36] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [39:36] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [31:28] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [31:28] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [31:28] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [23:20] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [23:20] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [23:20] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [27:24] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [27:24] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [27:24] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rd [35:32] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.this_rs2 [35:32] (4 bits, unsigned)
  add \soc.cpu.pcpi_mul.rdx [35:32] (4 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=1\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=22\Y_WIDTH=23 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=4 for cells of type $fa.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
No more expansions possible.
<suppressed ~5151 debug messages>

6.32. Executing ICE40_OPT pass (performing simple optimizations).

6.32.1. Running ICE40 specific optimizations.

6.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.
<suppressed ~3433 debug messages>

6.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
<suppressed ~6375 debug messages>
Removed a total of 2125 cells.

6.32.4. Executing OPT_RMDFF pass (remove dff with constant values).

6.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..
Removed 692 unused cells and 3899 unused wires.
<suppressed ~693 debug messages>

6.32.6. Rerunning OPT passes. (Removed registers in this run.)

6.32.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6274.slice[0].fadd: CO=$auto$alumacc.cc:485:replace_alu$6274.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6285.slice[0].fadd: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6290.slice[0].fadd: CO=$auto$alumacc.cc:485:replace_alu$6274.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6336.slice[0].fadd: CO=\soc.cpu.count_cycle [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6342.slice[0].fadd: CO=\soc.cpu.count_instr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6366.slice[0].fadd: CO=\soc.cpu.pcpi_timeout_counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6369.slice[0].fadd: CO=\soc.cpu.timer [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6378.slice[0].fadd: CO=$auto$alumacc.cc:485:replace_alu$6306.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6381.slice[0].fadd: CO=$auto$alumacc.cc:485:replace_alu$6363.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6384.slice[0].fadd: CO=$auto$alumacc.cc:485:replace_alu$6384.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6387.slice[0].fadd: CO=$auto$alumacc.cc:485:replace_alu$6387.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6405.slice[0].fadd: CO=\soc.spimemio.rd_addr [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6405.slice[22].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6408.slice[0].fadd: CO=\soc.simpleuart.send_bitcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6411.slice[0].fadd: CO=\soc.simpleuart.recv_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6414.slice[0].fadd: CO=\soc.simpleuart.recv_divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6417.slice[0].fadd: CO=\soc.simpleuart.send_divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6420.slice[0].fadd: CO=\soc.cpu.pcpi_mul.mul_counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$maccmap.cc:240:synth$10033.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$maccmap.cc:240:synth$21837.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$maccmap.cc:240:synth$21844.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$maccmap.cc:240:synth$21852.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$maccmap.cc:240:synth$21879.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$maccmap.cc:240:synth$21886.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$maccmap.cc:240:synth$21898.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$maccmap.cc:240:synth$21927.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$maccmap.cc:240:synth$21934.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$maccmap.cc:240:synth$21942.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$maccmap.cc:240:synth$21949.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$maccmap.cc:240:synth$21983.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$maccmap.cc:240:synth$21990.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$maccmap.cc:240:synth$21998.slice[0].fadd: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$maccmap.cc:240:synth$22005.slice[0].fadd: CO=1'0

6.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.
<suppressed ~16 debug messages>

6.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

6.32.10. Executing OPT_RMDFF pass (remove dff with constant values).

6.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..
Removed 2 unused cells and 1 unused wires.
<suppressed ~3 debug messages>

6.32.12. Rerunning OPT passes. (Removed registers in this run.)

6.32.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) hx8kdemo.$auto$alumacc.cc:485:replace_alu$6285.slice[1].fadd: CO=$auto$alumacc.cc:485:replace_alu$6274.BB [25]

6.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.

6.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
Removed a total of 0 cells.

6.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

6.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

6.32.18. Rerunning OPT passes. (Removed registers in this run.)

6.32.19. Running ICE40 specific optimizations.

6.32.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.

6.32.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
Removed a total of 0 cells.

6.32.22. Executing OPT_RMDFF pass (remove dff with constant values).

6.32.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..

6.32.24. Finished OPT passes. (There is nothing left to do.)

6.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

6.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module hx8kdemo:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11010 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [0] -> \soc.cpu.mem_rdata_q [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11011 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [1] -> \soc.cpu.mem_rdata_q [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11012 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [2] -> \soc.cpu.mem_rdata_q [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11013 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [3] -> \soc.cpu.mem_rdata_q [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11014 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [4] -> \soc.cpu.mem_rdata_q [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11015 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [5] -> \soc.cpu.mem_rdata_q [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11016 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [6] -> \soc.cpu.mem_rdata_q [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11042 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [0] -> \soc.cpu.mem_16bit_buffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11043 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [1] -> \soc.cpu.mem_16bit_buffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11044 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [2] -> \soc.cpu.mem_16bit_buffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11045 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [3] -> \soc.cpu.mem_16bit_buffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11046 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [4] -> \soc.cpu.mem_16bit_buffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11047 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [5] -> \soc.cpu.mem_16bit_buffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11048 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [6] -> \soc.cpu.mem_16bit_buffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11049 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [7] -> \soc.cpu.mem_16bit_buffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11050 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [8] -> \soc.cpu.mem_16bit_buffer [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11051 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [9] -> \soc.cpu.mem_16bit_buffer [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11052 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [10] -> \soc.cpu.mem_16bit_buffer [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11053 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [11] -> \soc.cpu.mem_16bit_buffer [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11054 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [12] -> \soc.cpu.mem_16bit_buffer [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11055 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [13] -> \soc.cpu.mem_16bit_buffer [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11056 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [14] -> \soc.cpu.mem_16bit_buffer [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11057 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [15] -> \soc.cpu.mem_16bit_buffer [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11058 to $_DFFE_PP_ for $techmap\soc.cpu.$0\prefetched_high_word[0:0] -> \soc.cpu.prefetched_high_word.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11059 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_la_secondword[0:0] -> \soc.cpu.mem_la_secondword.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11060 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_state[1:0] [0] -> \soc.cpu.mem_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11061 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_state[1:0] [1] -> \soc.cpu.mem_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11062 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [0] -> \soc.cpu.mem_wstrb [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11063 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [1] -> \soc.cpu.mem_wstrb [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11064 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [2] -> \soc.cpu.mem_wstrb [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11065 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [3] -> \soc.cpu.mem_wstrb [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11066 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [0] -> \soc.cpu.mem_wdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11067 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [1] -> \soc.cpu.mem_wdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11068 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [2] -> \soc.cpu.mem_wdata [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11069 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [3] -> \soc.cpu.mem_wdata [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11070 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [4] -> \soc.cpu.mem_wdata [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11071 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [5] -> \soc.cpu.mem_wdata [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11072 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [6] -> \soc.cpu.mem_wdata [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11073 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [7] -> \soc.cpu.mem_wdata [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11074 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [8] -> \soc.cpu.mem_wdata [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11075 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [9] -> \soc.cpu.mem_wdata [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11076 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [10] -> \soc.cpu.mem_wdata [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11077 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [11] -> \soc.cpu.mem_wdata [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11078 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [12] -> \soc.cpu.mem_wdata [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11079 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [13] -> \soc.cpu.mem_wdata [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11080 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [14] -> \soc.cpu.mem_wdata [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11081 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [15] -> \soc.cpu.mem_wdata [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11082 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [16] -> \soc.cpu.mem_wdata [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11083 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [17] -> \soc.cpu.mem_wdata [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11084 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [18] -> \soc.cpu.mem_wdata [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11085 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [19] -> \soc.cpu.mem_wdata [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11086 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [20] -> \soc.cpu.mem_wdata [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11087 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [21] -> \soc.cpu.mem_wdata [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11088 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [22] -> \soc.cpu.mem_wdata [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11089 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [23] -> \soc.cpu.mem_wdata [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11090 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [24] -> \soc.cpu.mem_wdata [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11091 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [25] -> \soc.cpu.mem_wdata [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11092 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [26] -> \soc.cpu.mem_wdata [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11093 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [27] -> \soc.cpu.mem_wdata [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11094 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [28] -> \soc.cpu.mem_wdata [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11095 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [29] -> \soc.cpu.mem_wdata [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11096 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [30] -> \soc.cpu.mem_wdata [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11097 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [31] -> \soc.cpu.mem_wdata [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11098 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [0] -> \soc.cpu.mem_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11099 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [1] -> \soc.cpu.mem_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11100 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [2] -> \soc.cpu.mem_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11101 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [3] -> \soc.cpu.mem_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11102 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [4] -> \soc.cpu.mem_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11103 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [5] -> \soc.cpu.mem_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11104 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [6] -> \soc.cpu.mem_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11105 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [7] -> \soc.cpu.mem_addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11106 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [8] -> \soc.cpu.mem_addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11107 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [9] -> \soc.cpu.mem_addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11108 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [10] -> \soc.cpu.mem_addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11109 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [11] -> \soc.cpu.mem_addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11110 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [12] -> \soc.cpu.mem_addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11111 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [13] -> \soc.cpu.mem_addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11112 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [14] -> \soc.cpu.mem_addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11113 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [15] -> \soc.cpu.mem_addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11114 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [16] -> \soc.cpu.mem_addr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11115 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [17] -> \soc.cpu.mem_addr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11116 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [18] -> \soc.cpu.mem_addr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11117 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [19] -> \soc.cpu.mem_addr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11118 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [20] -> \soc.cpu.mem_addr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11119 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [21] -> \soc.cpu.mem_addr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11120 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [22] -> \soc.cpu.mem_addr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11121 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [23] -> \soc.cpu.mem_addr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11122 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [24] -> \soc.cpu.mem_addr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11123 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [25] -> \soc.cpu.mem_addr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11124 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [26] -> \soc.cpu.mem_addr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11125 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [27] -> \soc.cpu.mem_addr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11126 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [28] -> \soc.cpu.mem_addr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11127 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [29] -> \soc.cpu.mem_addr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11128 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [30] -> \soc.cpu.mem_addr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11129 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [31] -> \soc.cpu.mem_addr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11130 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_valid[0:0] -> \soc.cpu.mem_valid.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11132 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_alu_reg_reg[0:0] -> \soc.cpu.is_alu_reg_reg.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11133 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_alu_reg_imm[0:0] -> \soc.cpu.is_alu_reg_imm.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11134 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_beq_bne_blt_bge_bltu_bgeu[0:0] -> \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11137 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_sb_sh_sw[0:0] -> \soc.cpu.is_sb_sh_sw.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11138 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0] -> \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11139 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_slli_srli_srai[0:0] -> \soc.cpu.is_slli_srli_srai.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11140 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_lb_lh_lw_lbu_lhu[0:0] -> \soc.cpu.is_lb_lh_lw_lbu_lhu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11142 to $_DFFE_PP_ for $techmap\soc.cpu.$0\compressed_instr[0:0] -> \soc.cpu.compressed_instr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11143 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [0] -> \soc.cpu.decoded_imm_j [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11144 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [1] -> \soc.cpu.decoded_imm_j [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11145 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [2] -> \soc.cpu.decoded_imm_j [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11146 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [3] -> \soc.cpu.decoded_imm_j [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11147 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [4] -> \soc.cpu.decoded_imm_j [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11148 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [5] -> \soc.cpu.decoded_imm_j [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11149 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [6] -> \soc.cpu.decoded_imm_j [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11150 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [7] -> \soc.cpu.decoded_imm_j [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11151 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [8] -> \soc.cpu.decoded_imm_j [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11152 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [9] -> \soc.cpu.decoded_imm_j [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11153 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [10] -> \soc.cpu.decoded_imm_j [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11154 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [11] -> \soc.cpu.decoded_imm_j [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11155 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [12] -> \soc.cpu.decoded_imm_j [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11156 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [13] -> \soc.cpu.decoded_imm_j [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11157 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [14] -> \soc.cpu.decoded_imm_j [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11158 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [15] -> \soc.cpu.decoded_imm_j [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11159 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [16] -> \soc.cpu.decoded_imm_j [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11160 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [17] -> \soc.cpu.decoded_imm_j [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11161 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [18] -> \soc.cpu.decoded_imm_j [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11162 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [19] -> \soc.cpu.decoded_imm_j [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11163 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [20] -> \soc.cpu.decoded_imm_j [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11164 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [21] -> \soc.cpu.decoded_imm_j [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11165 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [22] -> \soc.cpu.decoded_imm_j [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11166 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [23] -> \soc.cpu.decoded_imm_j [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11167 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [24] -> \soc.cpu.decoded_imm_j [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11168 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [25] -> \soc.cpu.decoded_imm_j [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11169 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [26] -> \soc.cpu.decoded_imm_j [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11170 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [27] -> \soc.cpu.decoded_imm_j [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11171 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [28] -> \soc.cpu.decoded_imm_j [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11172 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [29] -> \soc.cpu.decoded_imm_j [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11173 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [30] -> \soc.cpu.decoded_imm_j [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11174 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [31] -> \soc.cpu.decoded_imm_j [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11175 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [0] -> \soc.cpu.decoded_imm [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11176 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [1] -> \soc.cpu.decoded_imm [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11177 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [2] -> \soc.cpu.decoded_imm [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11178 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [3] -> \soc.cpu.decoded_imm [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11179 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [4] -> \soc.cpu.decoded_imm [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11180 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [5] -> \soc.cpu.decoded_imm [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11181 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [6] -> \soc.cpu.decoded_imm [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11182 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [7] -> \soc.cpu.decoded_imm [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11183 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [8] -> \soc.cpu.decoded_imm [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11184 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [9] -> \soc.cpu.decoded_imm [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11185 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [10] -> \soc.cpu.decoded_imm [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11186 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [11] -> \soc.cpu.decoded_imm [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11187 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [12] -> \soc.cpu.decoded_imm [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11188 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [13] -> \soc.cpu.decoded_imm [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11189 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [14] -> \soc.cpu.decoded_imm [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11190 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [15] -> \soc.cpu.decoded_imm [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11191 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [16] -> \soc.cpu.decoded_imm [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11192 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [17] -> \soc.cpu.decoded_imm [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11193 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [18] -> \soc.cpu.decoded_imm [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11194 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [19] -> \soc.cpu.decoded_imm [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11195 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [20] -> \soc.cpu.decoded_imm [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11196 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [21] -> \soc.cpu.decoded_imm [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11197 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [22] -> \soc.cpu.decoded_imm [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11198 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [23] -> \soc.cpu.decoded_imm [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11199 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [24] -> \soc.cpu.decoded_imm [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11200 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [25] -> \soc.cpu.decoded_imm [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11201 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [26] -> \soc.cpu.decoded_imm [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11202 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [27] -> \soc.cpu.decoded_imm [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11203 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [28] -> \soc.cpu.decoded_imm [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11204 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [29] -> \soc.cpu.decoded_imm [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11205 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [30] -> \soc.cpu.decoded_imm [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11206 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [31] -> \soc.cpu.decoded_imm [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11217 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[4:0] [0] -> \soc.cpu.decoded_rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11218 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[4:0] [1] -> \soc.cpu.decoded_rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11219 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[4:0] [2] -> \soc.cpu.decoded_rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11220 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[4:0] [3] -> \soc.cpu.decoded_rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11221 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[4:0] [4] -> \soc.cpu.decoded_rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11222 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_timer[0:0] -> \soc.cpu.instr_timer.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11223 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_waitirq[0:0] -> \soc.cpu.instr_waitirq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11224 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_maskirq[0:0] -> \soc.cpu.instr_maskirq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11225 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_retirq[0:0] -> \soc.cpu.instr_retirq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11226 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_ecall_ebreak[0:0] -> \soc.cpu.instr_ecall_ebreak.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11227 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdinstrh[0:0] -> \soc.cpu.instr_rdinstrh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11228 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdinstr[0:0] -> \soc.cpu.instr_rdinstr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11229 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdcycleh[0:0] -> \soc.cpu.instr_rdcycleh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11230 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdcycle[0:0] -> \soc.cpu.instr_rdcycle.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11231 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_and[0:0] -> \soc.cpu.instr_and.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11232 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_or[0:0] -> \soc.cpu.instr_or.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11233 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sra[0:0] -> \soc.cpu.instr_sra.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11234 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_srl[0:0] -> \soc.cpu.instr_srl.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11235 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_xor[0:0] -> \soc.cpu.instr_xor.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11236 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sltu[0:0] -> \soc.cpu.instr_sltu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11237 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_slt[0:0] -> \soc.cpu.instr_slt.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11238 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sll[0:0] -> \soc.cpu.instr_sll.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11239 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sub[0:0] -> \soc.cpu.instr_sub.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11240 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_add[0:0] -> \soc.cpu.instr_add.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11241 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_srai[0:0] -> \soc.cpu.instr_srai.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11242 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_srli[0:0] -> \soc.cpu.instr_srli.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11243 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_slli[0:0] -> \soc.cpu.instr_slli.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11244 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_andi[0:0] -> \soc.cpu.instr_andi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11245 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_ori[0:0] -> \soc.cpu.instr_ori.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11246 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_xori[0:0] -> \soc.cpu.instr_xori.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11247 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sltiu[0:0] -> \soc.cpu.instr_sltiu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11248 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_slti[0:0] -> \soc.cpu.instr_slti.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11249 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_addi[0:0] -> \soc.cpu.instr_addi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11250 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sw[0:0] -> \soc.cpu.instr_sw.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11251 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sh[0:0] -> \soc.cpu.instr_sh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11252 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sb[0:0] -> \soc.cpu.instr_sb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11253 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lhu[0:0] -> \soc.cpu.instr_lhu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11254 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lbu[0:0] -> \soc.cpu.instr_lbu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11255 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lw[0:0] -> \soc.cpu.instr_lw.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11256 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lh[0:0] -> \soc.cpu.instr_lh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11257 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lb[0:0] -> \soc.cpu.instr_lb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11258 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bgeu[0:0] -> \soc.cpu.instr_bgeu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11259 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bltu[0:0] -> \soc.cpu.instr_bltu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11260 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bge[0:0] -> \soc.cpu.instr_bge.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11261 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_blt[0:0] -> \soc.cpu.instr_blt.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11262 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bne[0:0] -> \soc.cpu.instr_bne.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11263 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_beq[0:0] -> \soc.cpu.instr_beq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11264 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_jalr[0:0] -> \soc.cpu.instr_jalr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11265 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_jal[0:0] -> \soc.cpu.instr_jal.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11266 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_auipc[0:0] -> \soc.cpu.instr_auipc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11267 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lui[0:0] -> \soc.cpu.instr_lui.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11268 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [0] -> \soc.cpu.pcpi_insn [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11269 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [1] -> \soc.cpu.pcpi_insn [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11270 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [2] -> \soc.cpu.pcpi_insn [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11271 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [3] -> \soc.cpu.pcpi_insn [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11272 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [4] -> \soc.cpu.pcpi_insn [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11273 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [5] -> \soc.cpu.pcpi_insn [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11274 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [6] -> \soc.cpu.pcpi_insn [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11280 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [12] -> \soc.cpu.pcpi_insn [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11281 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [13] -> \soc.cpu.pcpi_insn [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11282 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [14] -> \soc.cpu.pcpi_insn [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11293 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [25] -> \soc.cpu.pcpi_insn [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11294 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [26] -> \soc.cpu.pcpi_insn [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11295 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [27] -> \soc.cpu.pcpi_insn [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11296 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [28] -> \soc.cpu.pcpi_insn [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11297 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [29] -> \soc.cpu.pcpi_insn [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11298 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [30] -> \soc.cpu.pcpi_insn [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11299 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_insn[31:0] [31] -> \soc.cpu.pcpi_insn [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11335 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_timeout_counter[3:0] [0] -> \soc.cpu.pcpi_timeout_counter [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11336 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_timeout_counter[3:0] [1] -> \soc.cpu.pcpi_timeout_counter [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11337 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_timeout_counter[3:0] [2] -> \soc.cpu.pcpi_timeout_counter [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11338 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_timeout_counter[3:0] [3] -> \soc.cpu.pcpi_timeout_counter [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11339 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[4:0] [0] -> \soc.cpu.latched_rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11340 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[4:0] [1] -> \soc.cpu.latched_rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11341 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[4:0] [2] -> \soc.cpu.latched_rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11342 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[4:0] [3] -> \soc.cpu.latched_rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11343 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[4:0] [4] -> \soc.cpu.latched_rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11344 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_is_lb[0:0] -> \soc.cpu.latched_is_lb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11345 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_is_lh[0:0] -> \soc.cpu.latched_is_lh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11346 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_compr[0:0] -> \soc.cpu.latched_compr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11347 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_branch[0:0] -> \soc.cpu.latched_branch.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11348 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_stalu[0:0] -> \soc.cpu.latched_stalu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11349 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_store[0:0] -> \soc.cpu.latched_store.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11350 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_state[1:0] [0] -> \soc.cpu.irq_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11351 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_state[1:0] [1] -> \soc.cpu.irq_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11354 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_wdata[0:0] -> \soc.cpu.mem_do_wdata.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11355 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_rdata[0:0] -> \soc.cpu.mem_do_rdata.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11356 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_rinst[0:0] -> \soc.cpu.mem_do_rinst.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11357 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_prefetch[0:0] -> \soc.cpu.mem_do_prefetch.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11358 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wordsize[1:0] [0] -> \soc.cpu.mem_wordsize [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11359 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wordsize[1:0] [1] -> \soc.cpu.mem_wordsize [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11393 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [1] -> \soc.cpu.irq_pending [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11395 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [3] -> \soc.cpu.irq_pending [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11396 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [4] -> \soc.cpu.irq_pending [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11397 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [5] -> \soc.cpu.irq_pending [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11398 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [6] -> \soc.cpu.irq_pending [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11399 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [7] -> \soc.cpu.irq_pending [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11400 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [8] -> \soc.cpu.irq_pending [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11401 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [9] -> \soc.cpu.irq_pending [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11402 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [10] -> \soc.cpu.irq_pending [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11403 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [11] -> \soc.cpu.irq_pending [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11404 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [12] -> \soc.cpu.irq_pending [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11405 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [13] -> \soc.cpu.irq_pending [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11406 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [14] -> \soc.cpu.irq_pending [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11407 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [15] -> \soc.cpu.irq_pending [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11408 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [16] -> \soc.cpu.irq_pending [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11409 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [17] -> \soc.cpu.irq_pending [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11410 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [18] -> \soc.cpu.irq_pending [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11411 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [19] -> \soc.cpu.irq_pending [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11412 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [20] -> \soc.cpu.irq_pending [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11413 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [21] -> \soc.cpu.irq_pending [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11414 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [22] -> \soc.cpu.irq_pending [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11415 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [23] -> \soc.cpu.irq_pending [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11416 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [24] -> \soc.cpu.irq_pending [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11417 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [25] -> \soc.cpu.irq_pending [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11418 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [26] -> \soc.cpu.irq_pending [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11419 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [27] -> \soc.cpu.irq_pending [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11420 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [28] -> \soc.cpu.irq_pending [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11421 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [29] -> \soc.cpu.irq_pending [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11422 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [30] -> \soc.cpu.irq_pending [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11423 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [31] -> \soc.cpu.irq_pending [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11424 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [0] -> \soc.cpu.irq_mask [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11425 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [1] -> \soc.cpu.irq_mask [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11426 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [2] -> \soc.cpu.irq_mask [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11427 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [3] -> \soc.cpu.irq_mask [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11428 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [4] -> \soc.cpu.irq_mask [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11429 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [5] -> \soc.cpu.irq_mask [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11430 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [6] -> \soc.cpu.irq_mask [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11431 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [7] -> \soc.cpu.irq_mask [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11432 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [8] -> \soc.cpu.irq_mask [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11433 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [9] -> \soc.cpu.irq_mask [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11434 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [10] -> \soc.cpu.irq_mask [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11435 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [11] -> \soc.cpu.irq_mask [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11436 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [12] -> \soc.cpu.irq_mask [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11437 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [13] -> \soc.cpu.irq_mask [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11438 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [14] -> \soc.cpu.irq_mask [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11439 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [15] -> \soc.cpu.irq_mask [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11440 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [16] -> \soc.cpu.irq_mask [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11441 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [17] -> \soc.cpu.irq_mask [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11442 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [18] -> \soc.cpu.irq_mask [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11443 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [19] -> \soc.cpu.irq_mask [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11444 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [20] -> \soc.cpu.irq_mask [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11445 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [21] -> \soc.cpu.irq_mask [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11446 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [22] -> \soc.cpu.irq_mask [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11447 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [23] -> \soc.cpu.irq_mask [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11448 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [24] -> \soc.cpu.irq_mask [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11449 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [25] -> \soc.cpu.irq_mask [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11450 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [26] -> \soc.cpu.irq_mask [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11451 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [27] -> \soc.cpu.irq_mask [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11452 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [28] -> \soc.cpu.irq_mask [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11453 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [29] -> \soc.cpu.irq_mask [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11454 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [30] -> \soc.cpu.irq_mask [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11455 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [31] -> \soc.cpu.irq_mask [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11456 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_active[0:0] -> \soc.cpu.irq_active.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11457 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_delay[0:0] -> \soc.cpu.irq_delay.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11490 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [0] -> \soc.cpu.reg_op2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11491 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [1] -> \soc.cpu.reg_op2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11492 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [2] -> \soc.cpu.reg_op2 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11493 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [3] -> \soc.cpu.reg_op2 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11494 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [4] -> \soc.cpu.reg_op2 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11495 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [5] -> \soc.cpu.reg_op2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11496 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [6] -> \soc.cpu.reg_op2 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11497 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [7] -> \soc.cpu.reg_op2 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11498 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [8] -> \soc.cpu.reg_op2 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11499 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [9] -> \soc.cpu.reg_op2 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11500 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [10] -> \soc.cpu.reg_op2 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11501 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [11] -> \soc.cpu.reg_op2 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11502 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [12] -> \soc.cpu.reg_op2 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11503 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [13] -> \soc.cpu.reg_op2 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11504 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [14] -> \soc.cpu.reg_op2 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11505 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [15] -> \soc.cpu.reg_op2 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11506 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [16] -> \soc.cpu.reg_op2 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11507 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [17] -> \soc.cpu.reg_op2 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11508 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [18] -> \soc.cpu.reg_op2 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11509 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [19] -> \soc.cpu.reg_op2 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11510 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [20] -> \soc.cpu.reg_op2 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11511 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [21] -> \soc.cpu.reg_op2 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11512 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [22] -> \soc.cpu.reg_op2 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11513 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [23] -> \soc.cpu.reg_op2 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11514 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [24] -> \soc.cpu.reg_op2 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11515 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [25] -> \soc.cpu.reg_op2 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11516 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [26] -> \soc.cpu.reg_op2 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11517 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [27] -> \soc.cpu.reg_op2 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11518 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [28] -> \soc.cpu.reg_op2 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11519 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [29] -> \soc.cpu.reg_op2 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11520 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [30] -> \soc.cpu.reg_op2 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11521 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [31] -> \soc.cpu.reg_op2 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11522 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [0] -> \soc.cpu.reg_op1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11523 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [1] -> \soc.cpu.reg_op1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11524 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [2] -> \soc.cpu.reg_op1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11525 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [3] -> \soc.cpu.reg_op1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11526 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [4] -> \soc.cpu.reg_op1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11527 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [5] -> \soc.cpu.reg_op1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11528 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [6] -> \soc.cpu.reg_op1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11529 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [7] -> \soc.cpu.reg_op1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11530 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [8] -> \soc.cpu.reg_op1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11531 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [9] -> \soc.cpu.reg_op1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11532 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [10] -> \soc.cpu.reg_op1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11533 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [11] -> \soc.cpu.reg_op1 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11534 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [12] -> \soc.cpu.reg_op1 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11535 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [13] -> \soc.cpu.reg_op1 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11536 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [14] -> \soc.cpu.reg_op1 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11537 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [15] -> \soc.cpu.reg_op1 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11538 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [16] -> \soc.cpu.reg_op1 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11539 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [17] -> \soc.cpu.reg_op1 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11540 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [18] -> \soc.cpu.reg_op1 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11541 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [19] -> \soc.cpu.reg_op1 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11542 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [20] -> \soc.cpu.reg_op1 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11543 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [21] -> \soc.cpu.reg_op1 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11544 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [22] -> \soc.cpu.reg_op1 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11545 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [23] -> \soc.cpu.reg_op1 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11546 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [24] -> \soc.cpu.reg_op1 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11547 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [25] -> \soc.cpu.reg_op1 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11548 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [26] -> \soc.cpu.reg_op1 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11549 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [27] -> \soc.cpu.reg_op1 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11550 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [28] -> \soc.cpu.reg_op1 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11551 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [29] -> \soc.cpu.reg_op1 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11552 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [30] -> \soc.cpu.reg_op1 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11553 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [31] -> \soc.cpu.reg_op1 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11554 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [0] -> \soc.cpu.reg_next_pc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11555 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [1] -> \soc.cpu.reg_next_pc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11556 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [2] -> \soc.cpu.reg_next_pc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11557 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [3] -> \soc.cpu.reg_next_pc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11558 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [4] -> \soc.cpu.reg_next_pc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11559 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [5] -> \soc.cpu.reg_next_pc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11560 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [6] -> \soc.cpu.reg_next_pc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11561 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [7] -> \soc.cpu.reg_next_pc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11562 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [8] -> \soc.cpu.reg_next_pc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11563 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [9] -> \soc.cpu.reg_next_pc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11564 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [10] -> \soc.cpu.reg_next_pc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11565 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [11] -> \soc.cpu.reg_next_pc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11566 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [12] -> \soc.cpu.reg_next_pc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11567 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [13] -> \soc.cpu.reg_next_pc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11568 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [14] -> \soc.cpu.reg_next_pc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11569 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [15] -> \soc.cpu.reg_next_pc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11570 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [16] -> \soc.cpu.reg_next_pc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11571 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [17] -> \soc.cpu.reg_next_pc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11572 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [18] -> \soc.cpu.reg_next_pc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11573 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [19] -> \soc.cpu.reg_next_pc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11574 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [20] -> \soc.cpu.reg_next_pc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11575 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [21] -> \soc.cpu.reg_next_pc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11576 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [22] -> \soc.cpu.reg_next_pc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11577 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [23] -> \soc.cpu.reg_next_pc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11578 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [24] -> \soc.cpu.reg_next_pc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11579 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [25] -> \soc.cpu.reg_next_pc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11580 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [26] -> \soc.cpu.reg_next_pc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11581 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [27] -> \soc.cpu.reg_next_pc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11582 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [28] -> \soc.cpu.reg_next_pc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11583 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [29] -> \soc.cpu.reg_next_pc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11584 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [30] -> \soc.cpu.reg_next_pc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11585 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [31] -> \soc.cpu.reg_next_pc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11586 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [0] -> \soc.cpu.reg_pc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11587 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [1] -> \soc.cpu.reg_pc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11588 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [2] -> \soc.cpu.reg_pc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11589 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [3] -> \soc.cpu.reg_pc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11590 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [4] -> \soc.cpu.reg_pc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11591 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [5] -> \soc.cpu.reg_pc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11592 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [6] -> \soc.cpu.reg_pc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11593 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [7] -> \soc.cpu.reg_pc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11594 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [8] -> \soc.cpu.reg_pc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11595 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [9] -> \soc.cpu.reg_pc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11596 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [10] -> \soc.cpu.reg_pc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11597 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [11] -> \soc.cpu.reg_pc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11598 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [12] -> \soc.cpu.reg_pc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11599 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [13] -> \soc.cpu.reg_pc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11600 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [14] -> \soc.cpu.reg_pc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11601 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [15] -> \soc.cpu.reg_pc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11602 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [16] -> \soc.cpu.reg_pc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11603 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [17] -> \soc.cpu.reg_pc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11604 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [18] -> \soc.cpu.reg_pc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11605 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [19] -> \soc.cpu.reg_pc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11606 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [20] -> \soc.cpu.reg_pc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11607 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [21] -> \soc.cpu.reg_pc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11608 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [22] -> \soc.cpu.reg_pc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11609 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [23] -> \soc.cpu.reg_pc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11610 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [24] -> \soc.cpu.reg_pc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11611 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [25] -> \soc.cpu.reg_pc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11612 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [26] -> \soc.cpu.reg_pc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11613 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [27] -> \soc.cpu.reg_pc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11614 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [28] -> \soc.cpu.reg_pc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11615 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [29] -> \soc.cpu.reg_pc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11616 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [30] -> \soc.cpu.reg_pc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11617 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [31] -> \soc.cpu.reg_pc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11618 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [0] -> \soc.cpu.count_instr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11619 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [1] -> \soc.cpu.count_instr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11620 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [2] -> \soc.cpu.count_instr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11621 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [3] -> \soc.cpu.count_instr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11622 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [4] -> \soc.cpu.count_instr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11623 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [5] -> \soc.cpu.count_instr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11624 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [6] -> \soc.cpu.count_instr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11625 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [7] -> \soc.cpu.count_instr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11626 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [8] -> \soc.cpu.count_instr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11627 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [9] -> \soc.cpu.count_instr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11628 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [10] -> \soc.cpu.count_instr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11629 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [11] -> \soc.cpu.count_instr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11630 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [12] -> \soc.cpu.count_instr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11631 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [13] -> \soc.cpu.count_instr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11632 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [14] -> \soc.cpu.count_instr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11633 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [15] -> \soc.cpu.count_instr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11634 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [16] -> \soc.cpu.count_instr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11635 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [17] -> \soc.cpu.count_instr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11636 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [18] -> \soc.cpu.count_instr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11637 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [19] -> \soc.cpu.count_instr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11638 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [20] -> \soc.cpu.count_instr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11639 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [21] -> \soc.cpu.count_instr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11640 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [22] -> \soc.cpu.count_instr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11641 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [23] -> \soc.cpu.count_instr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11642 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [24] -> \soc.cpu.count_instr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11643 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [25] -> \soc.cpu.count_instr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11644 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [26] -> \soc.cpu.count_instr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11645 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [27] -> \soc.cpu.count_instr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11646 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [28] -> \soc.cpu.count_instr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11647 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [29] -> \soc.cpu.count_instr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11648 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [30] -> \soc.cpu.count_instr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11649 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [31] -> \soc.cpu.count_instr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11650 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [32] -> \soc.cpu.count_instr [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11651 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [33] -> \soc.cpu.count_instr [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11652 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [34] -> \soc.cpu.count_instr [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11653 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [35] -> \soc.cpu.count_instr [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11654 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [36] -> \soc.cpu.count_instr [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11655 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [37] -> \soc.cpu.count_instr [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11656 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [38] -> \soc.cpu.count_instr [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11657 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [39] -> \soc.cpu.count_instr [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11658 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [40] -> \soc.cpu.count_instr [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11659 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [41] -> \soc.cpu.count_instr [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11660 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [42] -> \soc.cpu.count_instr [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11661 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [43] -> \soc.cpu.count_instr [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11662 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [44] -> \soc.cpu.count_instr [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11663 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [45] -> \soc.cpu.count_instr [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11664 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [46] -> \soc.cpu.count_instr [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11665 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [47] -> \soc.cpu.count_instr [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11666 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [48] -> \soc.cpu.count_instr [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11667 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [49] -> \soc.cpu.count_instr [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11668 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [50] -> \soc.cpu.count_instr [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11669 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [51] -> \soc.cpu.count_instr [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11670 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [52] -> \soc.cpu.count_instr [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11671 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [53] -> \soc.cpu.count_instr [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11672 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [54] -> \soc.cpu.count_instr [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11673 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [55] -> \soc.cpu.count_instr [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11674 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [56] -> \soc.cpu.count_instr [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11675 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [57] -> \soc.cpu.count_instr [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11676 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [58] -> \soc.cpu.count_instr [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11677 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [59] -> \soc.cpu.count_instr [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11678 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [60] -> \soc.cpu.count_instr [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11679 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [61] -> \soc.cpu.count_instr [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11680 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [62] -> \soc.cpu.count_instr [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11681 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [63] -> \soc.cpu.count_instr [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11746 to $_DFFE_PP_ for $techmap\soc.cpu.$0\pcpi_valid[0:0] -> \soc.cpu.pcpi_valid.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18144 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [0] -> \soc.simpleuart.cfg_divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18145 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [1] -> \soc.simpleuart.cfg_divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18146 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [2] -> \soc.simpleuart.cfg_divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18147 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [3] -> \soc.simpleuart.cfg_divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18148 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [4] -> \soc.simpleuart.cfg_divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18149 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [5] -> \soc.simpleuart.cfg_divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18150 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [6] -> \soc.simpleuart.cfg_divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18151 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [7] -> \soc.simpleuart.cfg_divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18152 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [8] -> \soc.simpleuart.cfg_divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18153 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [9] -> \soc.simpleuart.cfg_divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18154 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [10] -> \soc.simpleuart.cfg_divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18155 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [11] -> \soc.simpleuart.cfg_divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18156 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [12] -> \soc.simpleuart.cfg_divider [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18157 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [13] -> \soc.simpleuart.cfg_divider [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18158 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [14] -> \soc.simpleuart.cfg_divider [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18159 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [15] -> \soc.simpleuart.cfg_divider [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18160 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [16] -> \soc.simpleuart.cfg_divider [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18161 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [17] -> \soc.simpleuart.cfg_divider [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18162 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [18] -> \soc.simpleuart.cfg_divider [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18163 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [19] -> \soc.simpleuart.cfg_divider [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18164 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [20] -> \soc.simpleuart.cfg_divider [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18165 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [21] -> \soc.simpleuart.cfg_divider [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18166 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [22] -> \soc.simpleuart.cfg_divider [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18167 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [23] -> \soc.simpleuart.cfg_divider [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18168 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [24] -> \soc.simpleuart.cfg_divider [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18169 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [25] -> \soc.simpleuart.cfg_divider [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18170 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [26] -> \soc.simpleuart.cfg_divider [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18171 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [27] -> \soc.simpleuart.cfg_divider [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18172 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [28] -> \soc.simpleuart.cfg_divider [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18173 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [29] -> \soc.simpleuart.cfg_divider [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18174 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [30] -> \soc.simpleuart.cfg_divider [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18175 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [31] -> \soc.simpleuart.cfg_divider [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18177 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [0] -> \soc.simpleuart.recv_buf_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18178 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [1] -> \soc.simpleuart.recv_buf_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18179 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [2] -> \soc.simpleuart.recv_buf_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18180 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [3] -> \soc.simpleuart.recv_buf_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18181 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [4] -> \soc.simpleuart.recv_buf_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18182 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [5] -> \soc.simpleuart.recv_buf_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18183 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [6] -> \soc.simpleuart.recv_buf_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18184 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [7] -> \soc.simpleuart.recv_buf_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18185 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [0] -> \soc.simpleuart.recv_pattern [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18186 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [1] -> \soc.simpleuart.recv_pattern [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18187 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [2] -> \soc.simpleuart.recv_pattern [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18188 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [3] -> \soc.simpleuart.recv_pattern [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18189 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [4] -> \soc.simpleuart.recv_pattern [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18190 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [5] -> \soc.simpleuart.recv_pattern [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18191 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [6] -> \soc.simpleuart.recv_pattern [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18192 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [7] -> \soc.simpleuart.recv_pattern [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18225 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [0] -> \soc.simpleuart.recv_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18226 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [1] -> \soc.simpleuart.recv_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18227 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [2] -> \soc.simpleuart.recv_state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18228 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [3] -> \soc.simpleuart.recv_state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18229 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_dummy[0:0] -> \soc.simpleuart.send_dummy.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18262 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [0] -> \soc.simpleuart.send_bitcnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18263 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [1] -> \soc.simpleuart.send_bitcnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18264 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [2] -> \soc.simpleuart.send_bitcnt [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18265 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [3] -> \soc.simpleuart.send_bitcnt [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18266 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [0] -> \soc.simpleuart.send_pattern [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18267 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [1] -> \soc.simpleuart.send_pattern [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18268 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [2] -> \soc.simpleuart.send_pattern [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18269 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [3] -> \soc.simpleuart.send_pattern [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18270 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [4] -> \soc.simpleuart.send_pattern [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18271 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [5] -> \soc.simpleuart.send_pattern [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18272 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [6] -> \soc.simpleuart.send_pattern [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18273 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [7] -> \soc.simpleuart.send_pattern [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18274 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [8] -> \soc.simpleuart.send_pattern [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18275 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [9] -> \soc.simpleuart.send_pattern [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18869 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [0] -> \soc.spimemio.config_do [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18870 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [1] -> \soc.spimemio.config_do [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18871 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [2] -> \soc.spimemio.config_do [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18872 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [3] -> \soc.spimemio.config_do [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18873 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_clk[0:0] -> \soc.spimemio.config_clk.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18874 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_csb[0:0] -> \soc.spimemio.config_csb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18875 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [0] -> \soc.spimemio.config_oe [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18876 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [1] -> \soc.spimemio.config_oe [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18877 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [2] -> \soc.spimemio.config_oe [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18878 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [3] -> \soc.spimemio.config_oe [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18879 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [0] -> \soc.spimemio.config_dummy [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18880 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [1] -> \soc.spimemio.config_dummy [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18881 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [2] -> \soc.spimemio.config_dummy [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18882 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [3] -> \soc.spimemio.config_dummy [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18883 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_cont[0:0] -> \soc.spimemio.config_cont.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18884 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_qspi[0:0] -> \soc.spimemio.config_qspi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18885 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_ddr[0:0] -> \soc.spimemio.config_ddr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18886 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_en[0:0] -> \soc.spimemio.config_en.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18892 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\state[3:0] [0] -> \soc.spimemio.state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18893 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\state[3:0] [1] -> \soc.spimemio.state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18894 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\state[3:0] [2] -> \soc.spimemio.state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18895 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\state[3:0] [3] -> \soc.spimemio.state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18896 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_inc[0:0] -> \soc.spimemio.rd_inc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18897 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_wait[0:0] -> \soc.spimemio.rd_wait.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18898 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_valid[0:0] -> \soc.spimemio.rd_valid.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18899 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [0] -> \soc.spimemio.rd_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18900 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [1] -> \soc.spimemio.rd_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18901 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [2] -> \soc.spimemio.rd_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18902 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [3] -> \soc.spimemio.rd_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18903 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [4] -> \soc.spimemio.rd_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18904 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [5] -> \soc.spimemio.rd_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18905 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [6] -> \soc.spimemio.rd_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18906 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [7] -> \soc.spimemio.rd_addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18907 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [8] -> \soc.spimemio.rd_addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18908 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [9] -> \soc.spimemio.rd_addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18909 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [10] -> \soc.spimemio.rd_addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18910 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [11] -> \soc.spimemio.rd_addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18911 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [12] -> \soc.spimemio.rd_addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18912 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [13] -> \soc.spimemio.rd_addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18913 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [14] -> \soc.spimemio.rd_addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18914 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [15] -> \soc.spimemio.rd_addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18915 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [16] -> \soc.spimemio.rd_addr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18916 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [17] -> \soc.spimemio.rd_addr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18917 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [18] -> \soc.spimemio.rd_addr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18918 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [19] -> \soc.spimemio.rd_addr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18919 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [20] -> \soc.spimemio.rd_addr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18920 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [21] -> \soc.spimemio.rd_addr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18921 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [22] -> \soc.spimemio.rd_addr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18922 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [23] -> \soc.spimemio.rd_addr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18923 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [0] -> \soc.spimemio.buffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18924 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [1] -> \soc.spimemio.buffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18925 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [2] -> \soc.spimemio.buffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18926 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [3] -> \soc.spimemio.buffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18927 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [4] -> \soc.spimemio.buffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18928 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [5] -> \soc.spimemio.buffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18929 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [6] -> \soc.spimemio.buffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18930 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [7] -> \soc.spimemio.buffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18931 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [8] -> \soc.spimemio.buffer [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18932 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [9] -> \soc.spimemio.buffer [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18933 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [10] -> \soc.spimemio.buffer [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18934 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [11] -> \soc.spimemio.buffer [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18935 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [12] -> \soc.spimemio.buffer [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18936 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [13] -> \soc.spimemio.buffer [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18937 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [14] -> \soc.spimemio.buffer [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18938 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [15] -> \soc.spimemio.buffer [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18939 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [16] -> \soc.spimemio.buffer [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18940 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [17] -> \soc.spimemio.buffer [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18941 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [18] -> \soc.spimemio.buffer [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18942 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [19] -> \soc.spimemio.buffer [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18943 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [20] -> \soc.spimemio.buffer [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18944 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [21] -> \soc.spimemio.buffer [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18945 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [22] -> \soc.spimemio.buffer [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18946 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [23] -> \soc.spimemio.buffer [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18947 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_rd[0:0] -> \soc.spimemio.din_rd.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18950 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [0] -> \soc.spimemio.din_tag [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18951 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [1] -> \soc.spimemio.din_tag [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18952 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [2] -> \soc.spimemio.din_tag [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18953 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [3] -> \soc.spimemio.din_tag [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18954 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [0] -> \soc.spimemio.din_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18955 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [1] -> \soc.spimemio.din_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18956 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [2] -> \soc.spimemio.din_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18957 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [3] -> \soc.spimemio.din_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18958 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [4] -> \soc.spimemio.din_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18959 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [5] -> \soc.spimemio.din_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18960 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [6] -> \soc.spimemio.din_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18961 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [7] -> \soc.spimemio.din_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18964 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [0] -> \soc.spimem_rdata.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18965 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [1] -> $auto$wreduce.cc:454:run$6118 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18966 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [2] -> $auto$wreduce.cc:454:run$6118 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18967 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [3] -> $auto$wreduce.cc:454:run$6118 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18968 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [4] -> $auto$wreduce.cc:454:run$6118 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18969 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [5] -> $auto$wreduce.cc:454:run$6118 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18970 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [6] -> $auto$wreduce.cc:454:run$6118 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18971 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [7] -> $auto$wreduce.cc:454:run$6118 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18972 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [8] -> $auto$wreduce.cc:454:run$6118 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18973 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [9] -> $auto$wreduce.cc:454:run$6118 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18974 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [10] -> $auto$wreduce.cc:454:run$6118 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18975 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [11] -> $auto$wreduce.cc:454:run$6118 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18976 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [12] -> $auto$wreduce.cc:454:run$6118 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18977 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [13] -> $auto$wreduce.cc:454:run$6118 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18978 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [14] -> $auto$wreduce.cc:454:run$6118 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18979 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [15] -> $auto$wreduce.cc:454:run$6118 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18980 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [16] -> $auto$wreduce.cc:454:run$6118 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18981 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [17] -> $auto$wreduce.cc:454:run$6118 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18982 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [18] -> $auto$wreduce.cc:454:run$6118 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18983 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [19] -> $auto$wreduce.cc:454:run$6118 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18984 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [20] -> $auto$wreduce.cc:454:run$6118 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18985 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [21] -> $auto$wreduce.cc:454:run$6118 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18986 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [22] -> $auto$wreduce.cc:454:run$6118 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18987 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [23] -> $auto$wreduce.cc:454:run$6118 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18988 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [24] -> $auto$wreduce.cc:454:run$6118 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18989 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [25] -> $auto$wreduce.cc:454:run$6118 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18990 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [26] -> $auto$wreduce.cc:454:run$6118 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18991 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [27] -> $auto$wreduce.cc:454:run$6118 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18992 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [28] -> $auto$wreduce.cc:454:run$6118 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18993 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [29] -> $auto$wreduce.cc:454:run$6118 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18994 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [30] -> $auto$wreduce.cc:454:run$6118 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18995 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [31] -> $auto$wreduce.cc:454:run$6118 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19734 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\outsign[0:0] -> \soc.cpu.pcpi_div.outsign.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19735 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\running[0:0] -> \soc.cpu.pcpi_div.running.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19736 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [0] -> \soc.cpu.pcpi_div.quotient_msk [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19737 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [1] -> \soc.cpu.pcpi_div.quotient_msk [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19738 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [2] -> \soc.cpu.pcpi_div.quotient_msk [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19739 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [3] -> \soc.cpu.pcpi_div.quotient_msk [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19740 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [4] -> \soc.cpu.pcpi_div.quotient_msk [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19741 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [5] -> \soc.cpu.pcpi_div.quotient_msk [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19742 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [6] -> \soc.cpu.pcpi_div.quotient_msk [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19743 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [7] -> \soc.cpu.pcpi_div.quotient_msk [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19744 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [8] -> \soc.cpu.pcpi_div.quotient_msk [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19745 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [9] -> \soc.cpu.pcpi_div.quotient_msk [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19746 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [10] -> \soc.cpu.pcpi_div.quotient_msk [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19747 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [11] -> \soc.cpu.pcpi_div.quotient_msk [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19748 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [12] -> \soc.cpu.pcpi_div.quotient_msk [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19749 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [13] -> \soc.cpu.pcpi_div.quotient_msk [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19750 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [14] -> \soc.cpu.pcpi_div.quotient_msk [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19751 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [15] -> \soc.cpu.pcpi_div.quotient_msk [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19752 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [16] -> \soc.cpu.pcpi_div.quotient_msk [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19753 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [17] -> \soc.cpu.pcpi_div.quotient_msk [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19754 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [18] -> \soc.cpu.pcpi_div.quotient_msk [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19755 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [19] -> \soc.cpu.pcpi_div.quotient_msk [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19756 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [20] -> \soc.cpu.pcpi_div.quotient_msk [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19757 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [21] -> \soc.cpu.pcpi_div.quotient_msk [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19758 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [22] -> \soc.cpu.pcpi_div.quotient_msk [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19759 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [23] -> \soc.cpu.pcpi_div.quotient_msk [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19760 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [24] -> \soc.cpu.pcpi_div.quotient_msk [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19761 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [25] -> \soc.cpu.pcpi_div.quotient_msk [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19762 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [26] -> \soc.cpu.pcpi_div.quotient_msk [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19763 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [27] -> \soc.cpu.pcpi_div.quotient_msk [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19764 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [28] -> \soc.cpu.pcpi_div.quotient_msk [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19765 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [29] -> \soc.cpu.pcpi_div.quotient_msk [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19766 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [30] -> \soc.cpu.pcpi_div.quotient_msk [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19767 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient_msk[31:0] [31] -> \soc.cpu.pcpi_div.quotient_msk [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19768 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [0] -> \soc.cpu.pcpi_div.quotient [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19769 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [1] -> \soc.cpu.pcpi_div.quotient [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19770 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [2] -> \soc.cpu.pcpi_div.quotient [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19771 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [3] -> \soc.cpu.pcpi_div.quotient [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19772 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [4] -> \soc.cpu.pcpi_div.quotient [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19773 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [5] -> \soc.cpu.pcpi_div.quotient [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19774 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [6] -> \soc.cpu.pcpi_div.quotient [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19775 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [7] -> \soc.cpu.pcpi_div.quotient [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19776 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [8] -> \soc.cpu.pcpi_div.quotient [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19777 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [9] -> \soc.cpu.pcpi_div.quotient [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19778 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [10] -> \soc.cpu.pcpi_div.quotient [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19779 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [11] -> \soc.cpu.pcpi_div.quotient [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19780 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [12] -> \soc.cpu.pcpi_div.quotient [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19781 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [13] -> \soc.cpu.pcpi_div.quotient [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19782 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [14] -> \soc.cpu.pcpi_div.quotient [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19783 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [15] -> \soc.cpu.pcpi_div.quotient [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19784 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [16] -> \soc.cpu.pcpi_div.quotient [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19785 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [17] -> \soc.cpu.pcpi_div.quotient [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19786 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [18] -> \soc.cpu.pcpi_div.quotient [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19787 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [19] -> \soc.cpu.pcpi_div.quotient [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19788 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [20] -> \soc.cpu.pcpi_div.quotient [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19789 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [21] -> \soc.cpu.pcpi_div.quotient [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19790 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [22] -> \soc.cpu.pcpi_div.quotient [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19791 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [23] -> \soc.cpu.pcpi_div.quotient [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19792 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [24] -> \soc.cpu.pcpi_div.quotient [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19793 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [25] -> \soc.cpu.pcpi_div.quotient [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19794 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [26] -> \soc.cpu.pcpi_div.quotient [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19795 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [27] -> \soc.cpu.pcpi_div.quotient [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19796 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [28] -> \soc.cpu.pcpi_div.quotient [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19797 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [29] -> \soc.cpu.pcpi_div.quotient [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19798 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [30] -> \soc.cpu.pcpi_div.quotient [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19799 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\quotient[31:0] [31] -> \soc.cpu.pcpi_div.quotient [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19800 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [0] -> \soc.cpu.pcpi_div.divisor [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19801 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [1] -> \soc.cpu.pcpi_div.divisor [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19802 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [2] -> \soc.cpu.pcpi_div.divisor [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19803 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [3] -> \soc.cpu.pcpi_div.divisor [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19804 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [4] -> \soc.cpu.pcpi_div.divisor [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19805 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [5] -> \soc.cpu.pcpi_div.divisor [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19806 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [6] -> \soc.cpu.pcpi_div.divisor [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19807 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [7] -> \soc.cpu.pcpi_div.divisor [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19808 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [8] -> \soc.cpu.pcpi_div.divisor [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19809 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [9] -> \soc.cpu.pcpi_div.divisor [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19810 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [10] -> \soc.cpu.pcpi_div.divisor [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19811 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [11] -> \soc.cpu.pcpi_div.divisor [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19812 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [12] -> \soc.cpu.pcpi_div.divisor [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19813 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [13] -> \soc.cpu.pcpi_div.divisor [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19814 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [14] -> \soc.cpu.pcpi_div.divisor [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19815 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [15] -> \soc.cpu.pcpi_div.divisor [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19816 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [16] -> \soc.cpu.pcpi_div.divisor [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19817 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [17] -> \soc.cpu.pcpi_div.divisor [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19818 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [18] -> \soc.cpu.pcpi_div.divisor [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19819 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [19] -> \soc.cpu.pcpi_div.divisor [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19820 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [20] -> \soc.cpu.pcpi_div.divisor [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19821 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [21] -> \soc.cpu.pcpi_div.divisor [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19822 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [22] -> \soc.cpu.pcpi_div.divisor [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19823 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [23] -> \soc.cpu.pcpi_div.divisor [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19824 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [24] -> \soc.cpu.pcpi_div.divisor [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19825 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [25] -> \soc.cpu.pcpi_div.divisor [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19826 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [26] -> \soc.cpu.pcpi_div.divisor [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19827 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [27] -> \soc.cpu.pcpi_div.divisor [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19828 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [28] -> \soc.cpu.pcpi_div.divisor [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19829 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [29] -> \soc.cpu.pcpi_div.divisor [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19830 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [30] -> \soc.cpu.pcpi_div.divisor [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19831 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [31] -> \soc.cpu.pcpi_div.divisor [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19832 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [32] -> \soc.cpu.pcpi_div.divisor [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19833 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [33] -> \soc.cpu.pcpi_div.divisor [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19834 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [34] -> \soc.cpu.pcpi_div.divisor [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19835 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [35] -> \soc.cpu.pcpi_div.divisor [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19836 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [36] -> \soc.cpu.pcpi_div.divisor [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19837 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [37] -> \soc.cpu.pcpi_div.divisor [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19838 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [38] -> \soc.cpu.pcpi_div.divisor [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19839 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [39] -> \soc.cpu.pcpi_div.divisor [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19840 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [40] -> \soc.cpu.pcpi_div.divisor [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19841 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [41] -> \soc.cpu.pcpi_div.divisor [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19842 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [42] -> \soc.cpu.pcpi_div.divisor [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19843 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [43] -> \soc.cpu.pcpi_div.divisor [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19844 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [44] -> \soc.cpu.pcpi_div.divisor [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19845 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [45] -> \soc.cpu.pcpi_div.divisor [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19846 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [46] -> \soc.cpu.pcpi_div.divisor [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19847 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [47] -> \soc.cpu.pcpi_div.divisor [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19848 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [48] -> \soc.cpu.pcpi_div.divisor [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19849 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [49] -> \soc.cpu.pcpi_div.divisor [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19850 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [50] -> \soc.cpu.pcpi_div.divisor [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19851 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [51] -> \soc.cpu.pcpi_div.divisor [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19852 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [52] -> \soc.cpu.pcpi_div.divisor [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19853 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [53] -> \soc.cpu.pcpi_div.divisor [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19854 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [54] -> \soc.cpu.pcpi_div.divisor [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19855 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [55] -> \soc.cpu.pcpi_div.divisor [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19856 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [56] -> \soc.cpu.pcpi_div.divisor [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19857 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [57] -> \soc.cpu.pcpi_div.divisor [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19858 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [58] -> \soc.cpu.pcpi_div.divisor [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19859 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [59] -> \soc.cpu.pcpi_div.divisor [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19860 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [60] -> \soc.cpu.pcpi_div.divisor [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19861 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [61] -> \soc.cpu.pcpi_div.divisor [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19862 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\divisor[62:0] [62] -> \soc.cpu.pcpi_div.divisor [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19863 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [0] -> \soc.cpu.pcpi_div.dividend [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19864 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [1] -> \soc.cpu.pcpi_div.dividend [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19865 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [2] -> \soc.cpu.pcpi_div.dividend [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19866 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [3] -> \soc.cpu.pcpi_div.dividend [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19867 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [4] -> \soc.cpu.pcpi_div.dividend [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19868 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [5] -> \soc.cpu.pcpi_div.dividend [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19869 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [6] -> \soc.cpu.pcpi_div.dividend [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19870 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [7] -> \soc.cpu.pcpi_div.dividend [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19871 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [8] -> \soc.cpu.pcpi_div.dividend [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19872 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [9] -> \soc.cpu.pcpi_div.dividend [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19873 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [10] -> \soc.cpu.pcpi_div.dividend [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19874 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [11] -> \soc.cpu.pcpi_div.dividend [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19875 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [12] -> \soc.cpu.pcpi_div.dividend [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19876 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [13] -> \soc.cpu.pcpi_div.dividend [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19877 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [14] -> \soc.cpu.pcpi_div.dividend [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19878 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [15] -> \soc.cpu.pcpi_div.dividend [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19879 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [16] -> \soc.cpu.pcpi_div.dividend [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19880 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [17] -> \soc.cpu.pcpi_div.dividend [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19881 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [18] -> \soc.cpu.pcpi_div.dividend [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19882 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [19] -> \soc.cpu.pcpi_div.dividend [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19883 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [20] -> \soc.cpu.pcpi_div.dividend [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19884 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [21] -> \soc.cpu.pcpi_div.dividend [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19885 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [22] -> \soc.cpu.pcpi_div.dividend [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19886 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [23] -> \soc.cpu.pcpi_div.dividend [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19887 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [24] -> \soc.cpu.pcpi_div.dividend [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19888 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [25] -> \soc.cpu.pcpi_div.dividend [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19889 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [26] -> \soc.cpu.pcpi_div.dividend [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19890 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [27] -> \soc.cpu.pcpi_div.dividend [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19891 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [28] -> \soc.cpu.pcpi_div.dividend [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19892 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [29] -> \soc.cpu.pcpi_div.dividend [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19893 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [30] -> \soc.cpu.pcpi_div.dividend [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19894 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_div.$0\dividend[31:0] [31] -> \soc.cpu.pcpi_div.dividend [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20985 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [0] -> \soc.cpu.pcpi_mul.mul_counter [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20986 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [1] -> \soc.cpu.pcpi_mul.mul_counter [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20987 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [2] -> \soc.cpu.pcpi_mul.mul_counter [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20988 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [3] -> \soc.cpu.pcpi_mul.mul_counter [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20989 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [4] -> \soc.cpu.pcpi_mul.mul_counter [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20990 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [5] -> \soc.cpu.pcpi_mul.mul_counter [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20991 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\mul_counter[6:0] [6] -> \soc.cpu.pcpi_mul.mul_counter [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20992 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [0] -> \soc.cpu.pcpi_mul.rdx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20993 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [1] -> \soc.cpu.pcpi_mul.rdx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20994 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [2] -> \soc.cpu.pcpi_mul.rdx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20995 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [3] -> \soc.cpu.pcpi_mul.rdx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20996 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [4] -> \soc.cpu.pcpi_mul.rdx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20997 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [5] -> \soc.cpu.pcpi_mul.rdx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20998 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [6] -> \soc.cpu.pcpi_mul.rdx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20999 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [7] -> \soc.cpu.pcpi_mul.rdx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21000 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [8] -> \soc.cpu.pcpi_mul.rdx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21001 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [9] -> \soc.cpu.pcpi_mul.rdx [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21002 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [10] -> \soc.cpu.pcpi_mul.rdx [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21003 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [11] -> \soc.cpu.pcpi_mul.rdx [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21004 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [12] -> \soc.cpu.pcpi_mul.rdx [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21005 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [13] -> \soc.cpu.pcpi_mul.rdx [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21006 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [14] -> \soc.cpu.pcpi_mul.rdx [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21007 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [15] -> \soc.cpu.pcpi_mul.rdx [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21008 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [16] -> \soc.cpu.pcpi_mul.rdx [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21009 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [17] -> \soc.cpu.pcpi_mul.rdx [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21010 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [18] -> \soc.cpu.pcpi_mul.rdx [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21011 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [19] -> \soc.cpu.pcpi_mul.rdx [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21012 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [20] -> \soc.cpu.pcpi_mul.rdx [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21013 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [21] -> \soc.cpu.pcpi_mul.rdx [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21014 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [22] -> \soc.cpu.pcpi_mul.rdx [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21015 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [23] -> \soc.cpu.pcpi_mul.rdx [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21016 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [24] -> \soc.cpu.pcpi_mul.rdx [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21017 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [25] -> \soc.cpu.pcpi_mul.rdx [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21018 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [26] -> \soc.cpu.pcpi_mul.rdx [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21019 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [27] -> \soc.cpu.pcpi_mul.rdx [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21020 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [28] -> \soc.cpu.pcpi_mul.rdx [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21021 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [29] -> \soc.cpu.pcpi_mul.rdx [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21022 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [30] -> \soc.cpu.pcpi_mul.rdx [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21023 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [31] -> \soc.cpu.pcpi_mul.rdx [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21024 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [32] -> \soc.cpu.pcpi_mul.rdx [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21025 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [33] -> \soc.cpu.pcpi_mul.rdx [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21026 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [34] -> \soc.cpu.pcpi_mul.rdx [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21027 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [35] -> \soc.cpu.pcpi_mul.rdx [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21028 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [36] -> \soc.cpu.pcpi_mul.rdx [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21029 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [37] -> \soc.cpu.pcpi_mul.rdx [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21030 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [38] -> \soc.cpu.pcpi_mul.rdx [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21031 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [39] -> \soc.cpu.pcpi_mul.rdx [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21032 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [40] -> \soc.cpu.pcpi_mul.rdx [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21033 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [41] -> \soc.cpu.pcpi_mul.rdx [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21034 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [42] -> \soc.cpu.pcpi_mul.rdx [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21035 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [43] -> \soc.cpu.pcpi_mul.rdx [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21036 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [44] -> \soc.cpu.pcpi_mul.rdx [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21037 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [45] -> \soc.cpu.pcpi_mul.rdx [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21038 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [46] -> \soc.cpu.pcpi_mul.rdx [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21039 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [47] -> \soc.cpu.pcpi_mul.rdx [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21040 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [48] -> \soc.cpu.pcpi_mul.rdx [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21041 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [49] -> \soc.cpu.pcpi_mul.rdx [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21042 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [50] -> \soc.cpu.pcpi_mul.rdx [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21043 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [51] -> \soc.cpu.pcpi_mul.rdx [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21044 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [52] -> \soc.cpu.pcpi_mul.rdx [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21045 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [53] -> \soc.cpu.pcpi_mul.rdx [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21046 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [54] -> \soc.cpu.pcpi_mul.rdx [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21047 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [55] -> \soc.cpu.pcpi_mul.rdx [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21048 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [56] -> \soc.cpu.pcpi_mul.rdx [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21049 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [57] -> \soc.cpu.pcpi_mul.rdx [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21050 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [58] -> \soc.cpu.pcpi_mul.rdx [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21051 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [59] -> \soc.cpu.pcpi_mul.rdx [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21052 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rdx[63:0] [60] -> \soc.cpu.pcpi_mul.rdx [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21053 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [0] -> \soc.cpu.pcpi_mul.rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21054 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [1] -> \soc.cpu.pcpi_mul.rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21055 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [2] -> \soc.cpu.pcpi_mul.rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21056 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [3] -> \soc.cpu.pcpi_mul.rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21057 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [4] -> \soc.cpu.pcpi_mul.rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21058 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [5] -> \soc.cpu.pcpi_mul.rd [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21059 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [6] -> \soc.cpu.pcpi_mul.rd [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21060 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [7] -> \soc.cpu.pcpi_mul.rd [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21061 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [8] -> \soc.cpu.pcpi_mul.rd [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21062 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [9] -> \soc.cpu.pcpi_mul.rd [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21063 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [10] -> \soc.cpu.pcpi_mul.rd [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21064 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [11] -> \soc.cpu.pcpi_mul.rd [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21065 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [12] -> \soc.cpu.pcpi_mul.rd [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21066 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [13] -> \soc.cpu.pcpi_mul.rd [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21067 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [14] -> \soc.cpu.pcpi_mul.rd [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21068 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [15] -> \soc.cpu.pcpi_mul.rd [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21069 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [16] -> \soc.cpu.pcpi_mul.rd [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21070 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [17] -> \soc.cpu.pcpi_mul.rd [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21071 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [18] -> \soc.cpu.pcpi_mul.rd [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21072 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [19] -> \soc.cpu.pcpi_mul.rd [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21073 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [20] -> \soc.cpu.pcpi_mul.rd [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21074 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [21] -> \soc.cpu.pcpi_mul.rd [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21075 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [22] -> \soc.cpu.pcpi_mul.rd [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21076 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [23] -> \soc.cpu.pcpi_mul.rd [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21077 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [24] -> \soc.cpu.pcpi_mul.rd [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21078 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [25] -> \soc.cpu.pcpi_mul.rd [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21079 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [26] -> \soc.cpu.pcpi_mul.rd [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21080 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [27] -> \soc.cpu.pcpi_mul.rd [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21081 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [28] -> \soc.cpu.pcpi_mul.rd [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21082 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [29] -> \soc.cpu.pcpi_mul.rd [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21083 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [30] -> \soc.cpu.pcpi_mul.rd [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21084 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [31] -> \soc.cpu.pcpi_mul.rd [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21085 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [32] -> \soc.cpu.pcpi_mul.rd [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21086 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [33] -> \soc.cpu.pcpi_mul.rd [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21087 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [34] -> \soc.cpu.pcpi_mul.rd [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21088 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [35] -> \soc.cpu.pcpi_mul.rd [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21089 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [36] -> \soc.cpu.pcpi_mul.rd [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21090 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [37] -> \soc.cpu.pcpi_mul.rd [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21091 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [38] -> \soc.cpu.pcpi_mul.rd [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21092 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [39] -> \soc.cpu.pcpi_mul.rd [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21093 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [40] -> \soc.cpu.pcpi_mul.rd [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21094 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [41] -> \soc.cpu.pcpi_mul.rd [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21095 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [42] -> \soc.cpu.pcpi_mul.rd [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21096 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [43] -> \soc.cpu.pcpi_mul.rd [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21097 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [44] -> \soc.cpu.pcpi_mul.rd [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21098 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [45] -> \soc.cpu.pcpi_mul.rd [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21099 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [46] -> \soc.cpu.pcpi_mul.rd [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21100 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [47] -> \soc.cpu.pcpi_mul.rd [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21101 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [48] -> \soc.cpu.pcpi_mul.rd [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21102 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [49] -> \soc.cpu.pcpi_mul.rd [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21103 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [50] -> \soc.cpu.pcpi_mul.rd [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21104 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [51] -> \soc.cpu.pcpi_mul.rd [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21105 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [52] -> \soc.cpu.pcpi_mul.rd [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21106 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [53] -> \soc.cpu.pcpi_mul.rd [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21107 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [54] -> \soc.cpu.pcpi_mul.rd [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21108 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [55] -> \soc.cpu.pcpi_mul.rd [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21109 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [56] -> \soc.cpu.pcpi_mul.rd [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21110 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [57] -> \soc.cpu.pcpi_mul.rd [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21111 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [58] -> \soc.cpu.pcpi_mul.rd [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21112 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [59] -> \soc.cpu.pcpi_mul.rd [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21113 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [60] -> \soc.cpu.pcpi_mul.rd [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21114 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [61] -> \soc.cpu.pcpi_mul.rd [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21115 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [62] -> \soc.cpu.pcpi_mul.rd [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21116 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rd[63:0] [63] -> \soc.cpu.pcpi_mul.rd [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21117 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [0] -> \soc.cpu.pcpi_mul.rs2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21118 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [1] -> \soc.cpu.pcpi_mul.rs2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21119 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [2] -> \soc.cpu.pcpi_mul.rs2 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21120 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [3] -> \soc.cpu.pcpi_mul.rs2 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21121 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [4] -> \soc.cpu.pcpi_mul.rs2 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21122 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [5] -> \soc.cpu.pcpi_mul.rs2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21123 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [6] -> \soc.cpu.pcpi_mul.rs2 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21124 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [7] -> \soc.cpu.pcpi_mul.rs2 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21125 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [8] -> \soc.cpu.pcpi_mul.rs2 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21126 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [9] -> \soc.cpu.pcpi_mul.rs2 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21127 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [10] -> \soc.cpu.pcpi_mul.rs2 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21128 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [11] -> \soc.cpu.pcpi_mul.rs2 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21129 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [12] -> \soc.cpu.pcpi_mul.rs2 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21130 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [13] -> \soc.cpu.pcpi_mul.rs2 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21131 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [14] -> \soc.cpu.pcpi_mul.rs2 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21132 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [15] -> \soc.cpu.pcpi_mul.rs2 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21133 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [16] -> \soc.cpu.pcpi_mul.rs2 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21134 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [17] -> \soc.cpu.pcpi_mul.rs2 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21135 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [18] -> \soc.cpu.pcpi_mul.rs2 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21136 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [19] -> \soc.cpu.pcpi_mul.rs2 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21137 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [20] -> \soc.cpu.pcpi_mul.rs2 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21138 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [21] -> \soc.cpu.pcpi_mul.rs2 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21139 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [22] -> \soc.cpu.pcpi_mul.rs2 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21140 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [23] -> \soc.cpu.pcpi_mul.rs2 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21141 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [24] -> \soc.cpu.pcpi_mul.rs2 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21142 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [25] -> \soc.cpu.pcpi_mul.rs2 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21143 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [26] -> \soc.cpu.pcpi_mul.rs2 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21144 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [27] -> \soc.cpu.pcpi_mul.rs2 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21145 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [28] -> \soc.cpu.pcpi_mul.rs2 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21146 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [29] -> \soc.cpu.pcpi_mul.rs2 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21147 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [30] -> \soc.cpu.pcpi_mul.rs2 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21148 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [31] -> \soc.cpu.pcpi_mul.rs2 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21149 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [32] -> \soc.cpu.pcpi_mul.rs2 [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21150 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [33] -> \soc.cpu.pcpi_mul.rs2 [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21151 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [34] -> \soc.cpu.pcpi_mul.rs2 [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21152 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [35] -> \soc.cpu.pcpi_mul.rs2 [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21153 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [36] -> \soc.cpu.pcpi_mul.rs2 [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21154 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [37] -> \soc.cpu.pcpi_mul.rs2 [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21155 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [38] -> \soc.cpu.pcpi_mul.rs2 [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21156 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [39] -> \soc.cpu.pcpi_mul.rs2 [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21157 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [40] -> \soc.cpu.pcpi_mul.rs2 [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21158 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [41] -> \soc.cpu.pcpi_mul.rs2 [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21159 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [42] -> \soc.cpu.pcpi_mul.rs2 [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21160 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [43] -> \soc.cpu.pcpi_mul.rs2 [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21161 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [44] -> \soc.cpu.pcpi_mul.rs2 [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21162 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [45] -> \soc.cpu.pcpi_mul.rs2 [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21163 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [46] -> \soc.cpu.pcpi_mul.rs2 [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21164 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [47] -> \soc.cpu.pcpi_mul.rs2 [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21165 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [48] -> \soc.cpu.pcpi_mul.rs2 [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21166 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [49] -> \soc.cpu.pcpi_mul.rs2 [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21167 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [50] -> \soc.cpu.pcpi_mul.rs2 [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21168 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [51] -> \soc.cpu.pcpi_mul.rs2 [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21169 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [52] -> \soc.cpu.pcpi_mul.rs2 [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21170 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [53] -> \soc.cpu.pcpi_mul.rs2 [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21171 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [54] -> \soc.cpu.pcpi_mul.rs2 [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21172 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [55] -> \soc.cpu.pcpi_mul.rs2 [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21173 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [56] -> \soc.cpu.pcpi_mul.rs2 [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21174 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [57] -> \soc.cpu.pcpi_mul.rs2 [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21175 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [58] -> \soc.cpu.pcpi_mul.rs2 [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21176 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [59] -> \soc.cpu.pcpi_mul.rs2 [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21177 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [60] -> \soc.cpu.pcpi_mul.rs2 [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21178 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [61] -> \soc.cpu.pcpi_mul.rs2 [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21179 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [62] -> \soc.cpu.pcpi_mul.rs2 [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21180 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs2[63:0] [63] -> \soc.cpu.pcpi_mul.rs2 [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21181 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [0] -> \soc.cpu.pcpi_mul.rs1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21182 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [1] -> \soc.cpu.pcpi_mul.rs1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21183 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [2] -> \soc.cpu.pcpi_mul.rs1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21184 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [3] -> \soc.cpu.pcpi_mul.rs1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21185 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [4] -> \soc.cpu.pcpi_mul.rs1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21186 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [5] -> \soc.cpu.pcpi_mul.rs1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21187 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [6] -> \soc.cpu.pcpi_mul.rs1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21188 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [7] -> \soc.cpu.pcpi_mul.rs1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21189 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [8] -> \soc.cpu.pcpi_mul.rs1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21190 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [9] -> \soc.cpu.pcpi_mul.rs1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21191 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [10] -> \soc.cpu.pcpi_mul.rs1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21192 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [11] -> \soc.cpu.pcpi_mul.rs1 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21193 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [12] -> \soc.cpu.pcpi_mul.rs1 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21194 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [13] -> \soc.cpu.pcpi_mul.rs1 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21195 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [14] -> \soc.cpu.pcpi_mul.rs1 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21196 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [15] -> \soc.cpu.pcpi_mul.rs1 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21197 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [16] -> \soc.cpu.pcpi_mul.rs1 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21198 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [17] -> \soc.cpu.pcpi_mul.rs1 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21199 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [18] -> \soc.cpu.pcpi_mul.rs1 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21200 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [19] -> \soc.cpu.pcpi_mul.rs1 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21201 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [20] -> \soc.cpu.pcpi_mul.rs1 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21202 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [21] -> \soc.cpu.pcpi_mul.rs1 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21203 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [22] -> \soc.cpu.pcpi_mul.rs1 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21204 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [23] -> \soc.cpu.pcpi_mul.rs1 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21205 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [24] -> \soc.cpu.pcpi_mul.rs1 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21206 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [25] -> \soc.cpu.pcpi_mul.rs1 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21207 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [26] -> \soc.cpu.pcpi_mul.rs1 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21208 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [27] -> \soc.cpu.pcpi_mul.rs1 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21209 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [28] -> \soc.cpu.pcpi_mul.rs1 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21210 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [29] -> \soc.cpu.pcpi_mul.rs1 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21211 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [30] -> \soc.cpu.pcpi_mul.rs1 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21212 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [31] -> \soc.cpu.pcpi_mul.rs1 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21213 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [32] -> \soc.cpu.pcpi_mul.rs1 [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21214 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [33] -> \soc.cpu.pcpi_mul.rs1 [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21215 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [34] -> \soc.cpu.pcpi_mul.rs1 [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21216 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [35] -> \soc.cpu.pcpi_mul.rs1 [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21217 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [36] -> \soc.cpu.pcpi_mul.rs1 [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21218 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [37] -> \soc.cpu.pcpi_mul.rs1 [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21219 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [38] -> \soc.cpu.pcpi_mul.rs1 [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21220 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [39] -> \soc.cpu.pcpi_mul.rs1 [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21221 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [40] -> \soc.cpu.pcpi_mul.rs1 [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21222 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [41] -> \soc.cpu.pcpi_mul.rs1 [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21223 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [42] -> \soc.cpu.pcpi_mul.rs1 [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21224 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [43] -> \soc.cpu.pcpi_mul.rs1 [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21225 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [44] -> \soc.cpu.pcpi_mul.rs1 [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21226 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [45] -> \soc.cpu.pcpi_mul.rs1 [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21227 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [46] -> \soc.cpu.pcpi_mul.rs1 [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21228 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [47] -> \soc.cpu.pcpi_mul.rs1 [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21229 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [48] -> \soc.cpu.pcpi_mul.rs1 [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21230 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [49] -> \soc.cpu.pcpi_mul.rs1 [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21231 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [50] -> \soc.cpu.pcpi_mul.rs1 [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21232 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [51] -> \soc.cpu.pcpi_mul.rs1 [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21233 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [52] -> \soc.cpu.pcpi_mul.rs1 [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21234 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [53] -> \soc.cpu.pcpi_mul.rs1 [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21235 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [54] -> \soc.cpu.pcpi_mul.rs1 [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21236 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [55] -> \soc.cpu.pcpi_mul.rs1 [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21237 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [56] -> \soc.cpu.pcpi_mul.rs1 [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21238 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [57] -> \soc.cpu.pcpi_mul.rs1 [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21239 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [58] -> \soc.cpu.pcpi_mul.rs1 [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21240 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [59] -> \soc.cpu.pcpi_mul.rs1 [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21241 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [60] -> \soc.cpu.pcpi_mul.rs1 [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21242 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [61] -> \soc.cpu.pcpi_mul.rs1 [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21243 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [62] -> \soc.cpu.pcpi_mul.rs1 [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21244 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\rs1[63:0] [63] -> \soc.cpu.pcpi_mul.rs1 [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21245 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [0] -> \soc.cpu.pcpi_mul.pcpi_rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21246 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [1] -> \soc.cpu.pcpi_mul.pcpi_rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21247 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [2] -> \soc.cpu.pcpi_mul.pcpi_rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21248 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [3] -> \soc.cpu.pcpi_mul.pcpi_rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21249 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [4] -> \soc.cpu.pcpi_mul.pcpi_rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21250 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [5] -> \soc.cpu.pcpi_mul.pcpi_rd [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21251 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [6] -> \soc.cpu.pcpi_mul.pcpi_rd [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21252 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [7] -> \soc.cpu.pcpi_mul.pcpi_rd [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21253 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [8] -> \soc.cpu.pcpi_mul.pcpi_rd [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21254 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [9] -> \soc.cpu.pcpi_mul.pcpi_rd [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21255 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [10] -> \soc.cpu.pcpi_mul.pcpi_rd [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21256 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [11] -> \soc.cpu.pcpi_mul.pcpi_rd [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21257 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [12] -> \soc.cpu.pcpi_mul.pcpi_rd [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21258 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [13] -> \soc.cpu.pcpi_mul.pcpi_rd [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21259 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [14] -> \soc.cpu.pcpi_mul.pcpi_rd [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21260 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [15] -> \soc.cpu.pcpi_mul.pcpi_rd [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21261 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [16] -> \soc.cpu.pcpi_mul.pcpi_rd [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21262 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [17] -> \soc.cpu.pcpi_mul.pcpi_rd [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21263 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [18] -> \soc.cpu.pcpi_mul.pcpi_rd [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21264 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [19] -> \soc.cpu.pcpi_mul.pcpi_rd [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21265 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [20] -> \soc.cpu.pcpi_mul.pcpi_rd [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21266 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [21] -> \soc.cpu.pcpi_mul.pcpi_rd [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21267 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [22] -> \soc.cpu.pcpi_mul.pcpi_rd [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21268 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [23] -> \soc.cpu.pcpi_mul.pcpi_rd [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21269 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [24] -> \soc.cpu.pcpi_mul.pcpi_rd [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21270 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [25] -> \soc.cpu.pcpi_mul.pcpi_rd [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21271 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [26] -> \soc.cpu.pcpi_mul.pcpi_rd [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21272 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [27] -> \soc.cpu.pcpi_mul.pcpi_rd [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21273 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [28] -> \soc.cpu.pcpi_mul.pcpi_rd [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21274 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [29] -> \soc.cpu.pcpi_mul.pcpi_rd [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21275 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [30] -> \soc.cpu.pcpi_mul.pcpi_rd [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21276 to $_DFFE_PP_ for $techmap\soc.cpu.pcpi_mul.$0\pcpi_rd[31:0] [31] -> \soc.cpu.pcpi_mul.pcpi_rd [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22242 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [0] -> \soc.spimemio.xfer.xfer_tag [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22243 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [1] -> \soc.spimemio.xfer.xfer_tag [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22244 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [2] -> \soc.spimemio.xfer.xfer_tag [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22245 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [3] -> \soc.spimemio.xfer.xfer_tag [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22246 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_rd[0:0] -> \soc.spimemio.xfer.xfer_rd.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22247 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_qspi[0:0] -> \soc.spimemio.xfer.xfer_qspi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22248 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [0] -> \soc.spimemio.xfer.dummy_count [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22249 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [1] -> \soc.spimemio.xfer.dummy_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22250 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [2] -> \soc.spimemio.xfer.dummy_count [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22251 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [3] -> \soc.spimemio.xfer.dummy_count [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22252 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [0] -> \soc.spimemio.xfer.count [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22253 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [1] -> \soc.spimemio.xfer.count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22254 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [2] -> \soc.spimemio.xfer.count [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22255 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [3] -> \soc.spimemio.xfer.count [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22256 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [0] -> \soc.spimemio.xfer.ibuffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22257 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [1] -> \soc.spimemio.xfer.ibuffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22258 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [2] -> \soc.spimemio.xfer.ibuffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22259 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [3] -> \soc.spimemio.xfer.ibuffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22260 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [4] -> \soc.spimemio.xfer.ibuffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22261 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [5] -> \soc.spimemio.xfer.ibuffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22262 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [6] -> \soc.spimemio.xfer.ibuffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22263 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [7] -> \soc.spimemio.xfer.ibuffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22264 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [0] -> \soc.spimemio.xfer.obuffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22265 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [1] -> \soc.spimemio.xfer.obuffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22266 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [2] -> \soc.spimemio.xfer.obuffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22267 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [3] -> \soc.spimemio.xfer.obuffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22268 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [4] -> \soc.spimemio.xfer.obuffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22269 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [5] -> \soc.spimemio.xfer.obuffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22270 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [6] -> \soc.spimemio.xfer.obuffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22271 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [7] -> \soc.spimemio.xfer.obuffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22272 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_ddr[0:0] -> \soc.spimemio.xfer.xfer_ddr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22273 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_dspi[0:0] -> \soc.spimemio.xfer.xfer_dspi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22274 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\flash_clk[0:0] -> \soc.spimemio.xfer.flash_clk.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22275 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\flash_csb[0:0] -> \soc.spimemio.xfer.flash_csb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7566 to $_DFFE_PP_ for $0\iomem_ready[0:0] -> \iomem_ready.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7567 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [0] -> \iomem_rdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7568 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [1] -> \iomem_rdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7569 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [2] -> \iomem_rdata [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7570 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [3] -> \iomem_rdata [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7571 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [4] -> \iomem_rdata [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7572 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [5] -> \iomem_rdata [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7573 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [6] -> \iomem_rdata [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7574 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [7] -> \iomem_rdata [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7575 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [8] -> \iomem_rdata [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7576 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [9] -> \iomem_rdata [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7577 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [10] -> \iomem_rdata [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7578 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [11] -> \iomem_rdata [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7579 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [12] -> \iomem_rdata [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7580 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [13] -> \iomem_rdata [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7581 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [14] -> \iomem_rdata [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7582 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [15] -> \iomem_rdata [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7583 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [16] -> \iomem_rdata [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7584 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [17] -> \iomem_rdata [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7585 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [18] -> \iomem_rdata [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7586 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [19] -> \iomem_rdata [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7587 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [20] -> \iomem_rdata [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7588 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [21] -> \iomem_rdata [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7589 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [22] -> \iomem_rdata [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7590 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [23] -> \iomem_rdata [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7591 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [24] -> \iomem_rdata [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7592 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [25] -> \iomem_rdata [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7593 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [26] -> \iomem_rdata [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7594 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [27] -> \iomem_rdata [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7595 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [28] -> \iomem_rdata [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7596 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [29] -> \iomem_rdata [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7597 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [30] -> \iomem_rdata [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7598 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [31] -> \iomem_rdata [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7599 to $_DFFE_PP_ for $0\gpio[31:0] [0] -> \gpio [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7600 to $_DFFE_PP_ for $0\gpio[31:0] [1] -> \gpio [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7601 to $_DFFE_PP_ for $0\gpio[31:0] [2] -> \gpio [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7602 to $_DFFE_PP_ for $0\gpio[31:0] [3] -> \gpio [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7603 to $_DFFE_PP_ for $0\gpio[31:0] [4] -> \gpio [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7604 to $_DFFE_PP_ for $0\gpio[31:0] [5] -> \gpio [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7605 to $_DFFE_PP_ for $0\gpio[31:0] [6] -> \gpio [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7606 to $_DFFE_PP_ for $0\gpio[31:0] [7] -> \gpio [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7607 to $_DFFE_PP_ for $0\gpio[31:0] [8] -> \gpio [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7608 to $_DFFE_PP_ for $0\gpio[31:0] [9] -> \gpio [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7609 to $_DFFE_PP_ for $0\gpio[31:0] [10] -> \gpio [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7610 to $_DFFE_PP_ for $0\gpio[31:0] [11] -> \gpio [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7611 to $_DFFE_PP_ for $0\gpio[31:0] [12] -> \gpio [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7612 to $_DFFE_PP_ for $0\gpio[31:0] [13] -> \gpio [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7613 to $_DFFE_PP_ for $0\gpio[31:0] [14] -> \gpio [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7614 to $_DFFE_PP_ for $0\gpio[31:0] [15] -> \gpio [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7615 to $_DFFE_PP_ for $0\gpio[31:0] [16] -> \gpio [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7616 to $_DFFE_PP_ for $0\gpio[31:0] [17] -> \gpio [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7617 to $_DFFE_PP_ for $0\gpio[31:0] [18] -> \gpio [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7618 to $_DFFE_PP_ for $0\gpio[31:0] [19] -> \gpio [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7619 to $_DFFE_PP_ for $0\gpio[31:0] [20] -> \gpio [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7620 to $_DFFE_PP_ for $0\gpio[31:0] [21] -> \gpio [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7621 to $_DFFE_PP_ for $0\gpio[31:0] [22] -> \gpio [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7622 to $_DFFE_PP_ for $0\gpio[31:0] [23] -> \gpio [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7623 to $_DFFE_PP_ for $0\gpio[31:0] [24] -> \gpio [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7624 to $_DFFE_PP_ for $0\gpio[31:0] [25] -> \gpio [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7625 to $_DFFE_PP_ for $0\gpio[31:0] [26] -> \gpio [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7626 to $_DFFE_PP_ for $0\gpio[31:0] [27] -> \gpio [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7627 to $_DFFE_PP_ for $0\gpio[31:0] [28] -> \gpio [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7628 to $_DFFE_PP_ for $0\gpio[31:0] [29] -> \gpio [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7629 to $_DFFE_PP_ for $0\gpio[31:0] [30] -> \gpio [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7630 to $_DFFE_PP_ for $0\gpio[31:0] [31] -> \gpio [31].

6.35. Executing TECHMAP pass (map to technology primitives).

6.35.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

6.35.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_N_ for cells of type $_DFF_N_.
No more expansions possible.
<suppressed ~1638 debug messages>

6.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.
<suppressed ~4860 debug messages>

6.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping hx8kdemo.$auto$alumacc.cc:485:replace_alu$6336.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$alumacc.cc:485:replace_alu$6342.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$alumacc.cc:485:replace_alu$6366.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$alumacc.cc:485:replace_alu$6369.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$alumacc.cc:485:replace_alu$6378.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$alumacc.cc:485:replace_alu$6381.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$alumacc.cc:485:replace_alu$6384.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$alumacc.cc:485:replace_alu$6387.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$alumacc.cc:485:replace_alu$6405.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$alumacc.cc:485:replace_alu$6405.slice[22].fadd ($lut).
Mapping hx8kdemo.$auto$alumacc.cc:485:replace_alu$6408.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$alumacc.cc:485:replace_alu$6411.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$alumacc.cc:485:replace_alu$6414.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$alumacc.cc:485:replace_alu$6417.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$alumacc.cc:485:replace_alu$6420.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$maccmap.cc:240:synth$10033.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$maccmap.cc:240:synth$21837.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$maccmap.cc:240:synth$21844.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$maccmap.cc:240:synth$21852.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$maccmap.cc:240:synth$21879.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$maccmap.cc:240:synth$21886.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$maccmap.cc:240:synth$21898.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$maccmap.cc:240:synth$21927.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$maccmap.cc:240:synth$21934.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$maccmap.cc:240:synth$21942.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$maccmap.cc:240:synth$21949.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$maccmap.cc:240:synth$21983.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$maccmap.cc:240:synth$21990.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$maccmap.cc:240:synth$21998.slice[0].fadd ($lut).
Mapping hx8kdemo.$auto$maccmap.cc:240:synth$22005.slice[0].fadd ($lut).

6.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in hx8kdemo.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7631 (SB_DFF): \reset_cnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7636 (SB_DFF): \reset_cnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7632 (SB_DFF): \reset_cnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7633 (SB_DFF): \reset_cnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7634 (SB_DFF): \reset_cnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7635 (SB_DFF): \reset_cnt [4] = 0

6.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in hx8kdemo.
  Merging $auto$simplemap.cc:277:simplemap_mux$15172 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11372 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11782 (A=1'0, B=$techmap\soc.$logic_and$picosoc.v:208$174_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11008 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11780 (A=1'0, B=$techmap\soc.cpu.$procmux$4643_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11009 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25706 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12887_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11185 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25709 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12890_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11188 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25725 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12906_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11204 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25716 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12897_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11195 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12432 (A=$techmap\soc.cpu.$procmux$4299_Y, B=1'0, S=\soc.cpu.clear_prefetched_high_word) into $auto$simplemap.cc:420:simplemap_dff$11058 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12429 (A=\soc.cpu.mem_la_read, B=1'0, S=$techmap\soc.cpu.$logic_or$../picorv32.v:566$1258_Y) into $auto$simplemap.cc:420:simplemap_dff$11059 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12404 (A=$techmap$techmap\soc.cpu.$procmux$4317.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12425_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$../picorv32.v:566$1258_Y) into $auto$simplemap.cc:420:simplemap_dff$11060 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12405 (A=$techmap$techmap\soc.cpu.$procmux$4317.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12426_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$../picorv32.v:566$1258_Y) into $auto$simplemap.cc:420:simplemap_dff$11061 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25712 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12893_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11191 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25713 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12894_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11192 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25724 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12905_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11203 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12254 (A=$techmap$techmap\soc.cpu.$procmux$4375.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12248_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$../picorv32.v:566$1258_Y) into $auto$simplemap.cc:420:simplemap_dff$11130 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12909 (A=1'0, B=$techmap\soc.cpu.$procmux$3767_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11131 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$12923 (A=1'0, B=$techmap\soc.cpu.$procmux$3724_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11134 (SB_DFFE).
  Merging $auto$simplemap.cc:311:simplemap_lut$10614 (A=1'1, B=$auto$simplemap.cc:309:simplemap_lut$10610 [1], S=\soc.cpu.mem_rdata_latched [1]) into $auto$simplemap.cc:420:simplemap_dff$11142 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25697 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12878_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11176 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25700 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12881_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11179 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25698 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12879_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11177 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25699 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12880_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11178 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25701 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12882_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11180 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25702 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12883_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11181 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25703 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12884_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11182 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25705 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12886_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11184 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25707 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12888_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11186 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25704 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12885_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11183 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25710 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12891_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11189 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25719 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12900_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11198 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25708 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12889_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11187 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25711 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12892_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11190 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25718 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12899_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11197 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25715 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12896_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11194 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25721 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12902_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11200 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25717 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12898_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11196 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25720 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12901_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11199 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25723 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12904_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11202 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25722 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12903_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11201 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25726 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12907_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11205 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$25727 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12908_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11206 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15480 (A=1'0, B=$techmap\soc.cpu.$ternary$../picorv32.v:1542$1674_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11351 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12695 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1075$1459_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11231 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12693 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1074$1455_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11232 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12691 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1073$1451_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11233 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12689 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1072$1447_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11234 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12687 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1071$1443_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11235 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12685 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1070$1439_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11236 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12683 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1069$1435_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11237 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12681 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1068$1431_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11238 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12679 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1067$1427_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11239 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12677 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1066$1423_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11240 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12672 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1060$1407_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11244 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12670 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1059$1405_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11245 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12668 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1058$1403_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11246 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12666 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1057$1401_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11247 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12664 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1056$1399_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11248 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12662 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1055$1397_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11249 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12652 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1043$1379_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11258 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12650 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1042$1377_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11259 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12648 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1041$1375_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11260 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12646 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1040$1373_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11261 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12644 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1039$1371_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11262 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12642 (A=1'0, B=$techmap\soc.cpu.$logic_and$../picorv32.v:1038$1369_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11263 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14141 (A=$techmap\soc.cpu.$1\clear_prefetched_high_word[0:0], B=1'1, S=$techmap\soc.cpu.$logic_or$../picorv32.v:1294$1587_Y) into $auto$simplemap.cc:420:simplemap_dff$11300 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25714 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12895_Y, S=$techmap$techmap\soc.cpu.$procmux$3772.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$12870_Y) into $auto$simplemap.cc:420:simplemap_dff$11193 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15525 (A=1'1, B=$auto$wreduce.cc:454:run$6070 [3], S=$techmap\soc.cpu.$logic_and$../picorv32.v:1419$1622_Y) into $auto$simplemap.cc:420:simplemap_dff$11338 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15524 (A=1'1, B=$auto$wreduce.cc:454:run$6070 [2], S=$techmap\soc.cpu.$logic_and$../picorv32.v:1419$1622_Y) into $auto$simplemap.cc:420:simplemap_dff$11337 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15523 (A=1'1, B=$auto$wreduce.cc:454:run$6070 [1], S=$techmap\soc.cpu.$logic_and$../picorv32.v:1419$1622_Y) into $auto$simplemap.cc:420:simplemap_dff$11336 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15627 (A=1'0, B=$techmap\soc.cpu.$procmux$2388_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11333 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15632 (A=1'0, B=$techmap\soc.cpu.$logic_not$../picorv32.v:1424$1625_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11334 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15508 (A=1'1, B=$techmap$techmap\soc.cpu.$procmux$2635.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12192_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11340 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15522 (A=1'1, B=$auto$simplemap.cc:309:simplemap_lut$56681, S=$techmap\soc.cpu.$logic_and$../picorv32.v:1419$1622_Y) into $auto$simplemap.cc:420:simplemap_dff$11335 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15511 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2635.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12195_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11343 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15507 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2635.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12191_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11339 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15504 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2661.$and$/usr/local/bin/../share/yosys/techmap.v:434$12232_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11344 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15501 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2674.$and$/usr/local/bin/../share/yosys/techmap.v:434$12232_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11345 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15492 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2732.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12248_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11347 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15490 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2768.$and$/usr/local/bin/../share/yosys/techmap.v:434$12232_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11348 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15485 (A=1'1, B=$techmap$techmap\soc.cpu.$procmux$2775.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$13068_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11349 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15163 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11363 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15479 (A=1'0, B=$techmap\soc.cpu.$eq$../picorv32.v:1541$1671_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11350 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15624 (A=1'0, B=$techmap\soc.cpu.$procmux$2399_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11352 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15637 (A=1'0, B=$techmap\soc.cpu.$2\set_mem_do_wdata[0:0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11354 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15636 (A=1'0, B=$techmap\soc.cpu.$2\set_mem_do_rdata[0:0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11355 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15318 (A=$techmap\soc.cpu.$procmux$3123_Y, B=1'1, S=$techmap\soc.cpu.$0\set_mem_do_rinst[0:0]) into $auto$simplemap.cc:420:simplemap_dff$11356 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15311 (A=$techmap\soc.cpu.$logic_and$../picorv32.v:1574$1688_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$../picorv32.v:1943$1803_Y) into $auto$simplemap.cc:420:simplemap_dff$11357 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15162 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11362 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15509 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2635.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12193_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11341 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15530 (A=1'0, B=\soc.cpu.cpu_state [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11747 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15161 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11361 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15164 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11364 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15165 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11365 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14242 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [49], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11667 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14207 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11632 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15168 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11368 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15169 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11369 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15170 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11370 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15171 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11371 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15174 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11374 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15175 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11375 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15176 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11376 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15177 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11377 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15178 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11378 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15179 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11379 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15180 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11380 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15181 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11381 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15182 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11382 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15183 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11383 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15184 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11384 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15185 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11385 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15186 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11386 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15187 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11387 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15188 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11388 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15189 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11389 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15190 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11390 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15191 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11391 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15639 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$1881.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$12231_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11393 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15160 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11360 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15641 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11395 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15642 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11396 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15643 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11397 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15644 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11398 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15645 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11399 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15646 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11400 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15647 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11401 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15648 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11402 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15649 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11403 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15650 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11404 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15651 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11405 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15652 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11406 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15653 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11407 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15654 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11408 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15655 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11409 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15656 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11410 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15657 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11411 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15658 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11412 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15659 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11413 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15660 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11414 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15661 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11415 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15662 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11416 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15663 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11417 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15664 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11418 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15665 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11419 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15666 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11420 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15667 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11421 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15668 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11422 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15669 (A=1'0, B=$techmap\soc.cpu.$and$../picorv32.v:1514$1650_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11423 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15065 (A=1'1, B=\soc.cpu.cpuregs_rs1 [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11425 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15638 (A=1'0, B=$techmap\soc.cpu.$5\next_irq_pending[31:0] [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11392 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15066 (A=1'1, B=\soc.cpu.cpuregs_rs1 [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11426 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15067 (A=1'1, B=\soc.cpu.cpuregs_rs1 [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11427 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15068 (A=1'1, B=\soc.cpu.cpuregs_rs1 [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11428 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15069 (A=1'1, B=\soc.cpu.cpuregs_rs1 [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11429 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15070 (A=1'1, B=\soc.cpu.cpuregs_rs1 [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11430 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15071 (A=1'1, B=\soc.cpu.cpuregs_rs1 [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11431 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15072 (A=1'1, B=\soc.cpu.cpuregs_rs1 [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11432 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15073 (A=1'1, B=\soc.cpu.cpuregs_rs1 [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11433 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15074 (A=1'1, B=\soc.cpu.cpuregs_rs1 [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11434 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15075 (A=1'1, B=\soc.cpu.cpuregs_rs1 [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11435 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15076 (A=1'1, B=\soc.cpu.cpuregs_rs1 [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11436 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15077 (A=1'1, B=\soc.cpu.cpuregs_rs1 [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11437 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15078 (A=1'1, B=\soc.cpu.cpuregs_rs1 [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11438 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15079 (A=1'1, B=\soc.cpu.cpuregs_rs1 [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11439 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15080 (A=1'1, B=\soc.cpu.cpuregs_rs1 [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11440 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15081 (A=1'1, B=\soc.cpu.cpuregs_rs1 [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11441 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15082 (A=1'1, B=\soc.cpu.cpuregs_rs1 [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11442 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15083 (A=1'1, B=\soc.cpu.cpuregs_rs1 [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11443 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15084 (A=1'1, B=\soc.cpu.cpuregs_rs1 [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11444 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15085 (A=1'1, B=\soc.cpu.cpuregs_rs1 [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11445 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15086 (A=1'1, B=\soc.cpu.cpuregs_rs1 [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11446 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15087 (A=1'1, B=\soc.cpu.cpuregs_rs1 [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11447 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15088 (A=1'1, B=\soc.cpu.cpuregs_rs1 [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11448 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15089 (A=1'1, B=\soc.cpu.cpuregs_rs1 [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11449 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15090 (A=1'1, B=\soc.cpu.cpuregs_rs1 [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11450 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15091 (A=1'1, B=\soc.cpu.cpuregs_rs1 [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11451 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15092 (A=1'1, B=\soc.cpu.cpuregs_rs1 [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11452 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15093 (A=1'1, B=\soc.cpu.cpuregs_rs1 [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11453 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15094 (A=1'1, B=\soc.cpu.cpuregs_rs1 [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11454 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15095 (A=1'1, B=\soc.cpu.cpuregs_rs1 [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11455 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15534 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11459 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15064 (A=1'1, B=\soc.cpu.cpuregs_rs1 [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11424 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15061 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3232.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12234_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11456 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15056 (A=1'0, B=\soc.cpu.irq_active, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11457 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15535 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11460 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15536 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11461 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15537 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11462 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15538 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11463 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15539 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11464 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15540 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11465 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15541 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11466 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15542 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11467 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15543 (A=1'1, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11468 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15544 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11469 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15545 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11470 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15546 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11471 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15547 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11472 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15548 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11473 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15549 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11474 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15550 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11475 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15551 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11476 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15552 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11477 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15553 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11478 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15554 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11479 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15555 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11480 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15556 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11481 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15557 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11482 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15558 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11483 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15559 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11484 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15560 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11485 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15561 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11486 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15562 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11487 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15563 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11488 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15564 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11489 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15533 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2528.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11458 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14578 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11555 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14579 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11556 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14580 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11557 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14581 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11558 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14582 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11559 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14583 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11560 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14584 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11561 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14585 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11562 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14586 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11563 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14587 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11564 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14588 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11565 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14589 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11566 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14590 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11567 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14591 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11568 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14592 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11569 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14593 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11570 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14594 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11571 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14595 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11572 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14596 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11573 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14597 (A=1'1, B=$techmap\soc.cpu.$procmux$3351_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11574 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14598 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11575 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14599 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11576 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14600 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11577 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14601 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11578 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14602 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11579 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14603 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11580 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14604 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11581 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14605 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11582 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14606 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11583 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14607 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11584 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14608 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11585 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14514 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11587 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14577 (A=1'0, B=$techmap\soc.cpu.$procmux$3351_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11554 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14515 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11588 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14516 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11589 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14517 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11590 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14518 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11591 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14519 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11592 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14520 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11593 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14521 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11594 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14522 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11595 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14523 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11596 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14524 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11597 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14525 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11598 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14526 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11599 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14527 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11600 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14528 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11601 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14529 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11602 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14530 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11603 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14531 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11604 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14532 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11605 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14533 (A=1'1, B=$auto$alumacc.cc:485:replace_alu$6339.AA [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11606 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14534 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11607 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14535 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11608 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14536 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11609 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14537 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11610 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14538 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11611 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14539 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11612 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14540 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11613 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14541 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11614 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14542 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11615 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14543 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11616 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14544 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6339.AA [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11617 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14194 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11619 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14513 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6345.BB [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11586 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14195 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11620 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14196 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11621 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14197 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11622 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14198 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11623 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14199 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11624 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14200 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11625 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14201 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11626 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14202 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11627 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14203 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11628 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14204 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11629 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14205 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11630 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14206 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11631 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14208 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11633 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14209 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11634 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14210 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11635 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14211 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11636 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14212 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11637 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14213 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11638 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14214 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11639 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14215 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11640 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14216 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11641 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14217 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11642 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14218 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11643 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14219 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11644 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14220 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11645 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14221 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11646 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14222 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11647 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14223 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11648 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14224 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11649 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14225 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [32], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11650 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14226 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [33], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11651 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14227 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [34], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11652 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14228 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [35], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11653 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14229 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [36], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11654 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14230 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [37], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11655 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14231 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [38], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11656 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14232 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [39], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11657 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14233 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [40], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11658 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14234 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [41], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11659 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14235 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [42], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11660 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14236 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [43], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11661 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14237 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [44], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11662 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14238 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [45], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11663 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14239 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [46], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11664 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14240 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [47], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11665 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14241 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [48], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11666 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15167 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11367 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14243 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [50], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11668 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14244 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [51], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11669 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14245 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [52], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11670 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14246 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [53], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11671 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14247 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [54], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11672 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14248 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [55], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11673 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14249 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [56], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11674 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14250 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [57], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11675 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14251 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [58], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11676 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14252 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [59], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11677 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14253 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [60], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11678 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14254 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [61], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11679 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14255 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [62], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11680 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14256 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1565$1684_Y [63], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11681 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16296 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11683 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14193 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$56662, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11618 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16297 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11684 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16298 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11685 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16299 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11686 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16300 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11687 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16301 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11688 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16302 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11689 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16303 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11690 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16304 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11691 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16305 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11692 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16306 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11693 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16307 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11694 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16308 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11695 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16309 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11696 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16310 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11697 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16311 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11698 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16312 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11699 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16313 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11700 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16314 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11701 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16315 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11702 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16316 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11703 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16317 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11704 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16318 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11705 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16319 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11706 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16320 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11707 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16321 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11708 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16322 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11709 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16323 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11710 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16324 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11711 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16325 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11712 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16326 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11713 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16327 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [32], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11714 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16328 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [33], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11715 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16329 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [34], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11716 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16330 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [35], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11717 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16331 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [36], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11718 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16332 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [37], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11719 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16333 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [38], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11720 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16334 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [39], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11721 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16335 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [40], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11722 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16336 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [41], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11723 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16337 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [42], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11724 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16338 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [43], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11725 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16339 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [44], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11726 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16340 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [45], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11727 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16341 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [46], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11728 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16342 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [47], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11729 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16343 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [48], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11730 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16344 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [49], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11731 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16345 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [50], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11732 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16346 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [51], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11733 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16347 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [52], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11734 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16348 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [53], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11735 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16349 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [54], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11736 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16350 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [55], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11737 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16351 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [56], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11738 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16352 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [57], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11739 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16353 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [58], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11740 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16354 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [59], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11741 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16355 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [60], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11742 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16356 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [61], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11743 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16357 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [62], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11744 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16358 (A=1'0, B=$techmap\soc.cpu.$add$../picorv32.v:1428$1626_Y [63], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11745 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15166 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11366 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16295 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$56643, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11682 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14188 (A=1'0, B=$techmap\soc.cpu.$procmux$3425_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11746 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18277 (A=1'0, B=\soc.cpu.mem_wdata [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18145 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18278 (A=1'0, B=\soc.cpu.mem_wdata [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18146 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18279 (A=1'0, B=\soc.cpu.mem_wdata [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18147 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18280 (A=1'0, B=\soc.cpu.mem_wdata [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18148 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18281 (A=1'0, B=\soc.cpu.mem_wdata [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18149 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18282 (A=1'0, B=\soc.cpu.mem_wdata [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18150 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18283 (A=1'0, B=\soc.cpu.mem_wdata [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18151 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18292 (A=1'0, B=\soc.cpu.mem_wdata [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18152 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18293 (A=1'0, B=\soc.cpu.mem_wdata [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18153 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18294 (A=1'0, B=\soc.cpu.mem_wdata [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18154 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18295 (A=1'0, B=\soc.cpu.mem_wdata [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18155 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18296 (A=1'0, B=\soc.cpu.mem_wdata [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18156 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18297 (A=1'0, B=\soc.cpu.mem_wdata [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18157 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18298 (A=1'0, B=\soc.cpu.mem_wdata [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18158 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18299 (A=1'0, B=\soc.cpu.mem_wdata [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18159 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18308 (A=1'0, B=\soc.cpu.mem_wdata [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18160 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18309 (A=1'0, B=\soc.cpu.mem_wdata [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18161 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18310 (A=1'0, B=\soc.cpu.mem_wdata [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18162 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18311 (A=1'0, B=\soc.cpu.mem_wdata [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18163 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18312 (A=1'0, B=\soc.cpu.mem_wdata [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18164 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18313 (A=1'0, B=\soc.cpu.mem_wdata [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18165 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18314 (A=1'0, B=\soc.cpu.mem_wdata [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18166 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18315 (A=1'0, B=\soc.cpu.mem_wdata [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18167 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18324 (A=1'0, B=\soc.cpu.mem_wdata [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18168 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18325 (A=1'0, B=\soc.cpu.mem_wdata [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18169 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18326 (A=1'0, B=\soc.cpu.mem_wdata [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18170 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18327 (A=1'0, B=\soc.cpu.mem_wdata [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18171 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18328 (A=1'0, B=\soc.cpu.mem_wdata [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18172 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18329 (A=1'0, B=\soc.cpu.mem_wdata [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18173 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18330 (A=1'0, B=\soc.cpu.mem_wdata [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18174 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18276 (A=1'1, B=\soc.cpu.mem_wdata [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18144 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18408 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4932_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18176 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18331 (A=1'0, B=\soc.cpu.mem_wdata [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18175 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18385 (A=1'0, B=\soc.simpleuart.recv_pattern [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18178 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18386 (A=1'0, B=\soc.simpleuart.recv_pattern [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18179 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18387 (A=1'0, B=\soc.simpleuart.recv_pattern [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18180 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18388 (A=1'0, B=\soc.simpleuart.recv_pattern [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18181 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18389 (A=1'0, B=\soc.simpleuart.recv_pattern [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18182 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18390 (A=1'0, B=\soc.simpleuart.recv_pattern [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18183 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18384 (A=1'0, B=\soc.simpleuart.recv_pattern [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18177 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18391 (A=1'0, B=\soc.simpleuart.recv_pattern [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18184 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18361 (A=1'0, B=\soc.simpleuart.recv_pattern [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18186 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18362 (A=1'0, B=\soc.simpleuart.recv_pattern [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18187 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18363 (A=1'0, B=\soc.simpleuart.recv_pattern [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18188 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18364 (A=1'0, B=\soc.simpleuart.recv_pattern [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18189 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18365 (A=1'0, B=\soc.simpleuart.recv_pattern [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18190 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18366 (A=1'0, B=\soc.simpleuart.recv_pattern [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18191 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18360 (A=1'0, B=\soc.simpleuart.recv_pattern [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18185 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18367 (A=1'0, B=\ser_rx, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18192 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18413 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18194 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18414 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18195 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18415 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18196 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18416 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18197 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18417 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18198 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18418 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18199 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18419 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18200 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18420 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18201 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18421 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18202 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18422 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18203 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18423 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18204 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18424 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18205 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18425 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18206 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18426 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18207 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18427 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18208 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18428 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18209 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18429 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18210 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18430 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18211 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18431 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18212 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18432 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18213 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18433 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18214 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18434 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18215 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18435 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18216 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18436 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18217 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18437 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18218 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18438 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18219 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18439 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18220 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18440 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18221 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18441 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18222 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18442 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18223 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18412 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18193 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18443 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4918.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$14152_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18224 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18341 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4960.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$12065_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18226 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18342 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4960.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$12065_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18227 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18340 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4960.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$12065_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18225 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18574 (A=1'1, B=$techmap\soc.simpleuart.$procmux$4888_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18229 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18343 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$4960.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$12065_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18228 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18578 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18231 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18579 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18232 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18580 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18233 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18581 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18234 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18582 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18235 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18583 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18236 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18584 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18237 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18585 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18238 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18586 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18239 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18587 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18240 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18588 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18241 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18589 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18242 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18590 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18243 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18591 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18244 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18592 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18245 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18593 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18246 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18594 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18247 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18595 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18248 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18596 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18249 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18597 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18250 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18598 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18251 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18599 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18252 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18600 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18253 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18601 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18254 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18602 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18255 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18603 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18256 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18604 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18257 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18605 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18258 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18606 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18259 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18607 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18260 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18577 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18230 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18608 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4880_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18261 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18559 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4899_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18263 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18560 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4899_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18264 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18558 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4899_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18262 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18561 (A=1'0, B=$techmap\soc.simpleuart.$procmux$4899_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18265 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18519 (A=1'1, B=$techmap\soc.simpleuart.$procmux$4910_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18267 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18520 (A=1'1, B=$techmap\soc.simpleuart.$procmux$4910_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18268 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18521 (A=1'1, B=$techmap\soc.simpleuart.$procmux$4910_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18269 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18522 (A=1'1, B=$techmap\soc.simpleuart.$procmux$4910_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18270 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18523 (A=1'1, B=$techmap\soc.simpleuart.$procmux$4910_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18271 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18524 (A=1'1, B=$techmap\soc.simpleuart.$procmux$4910_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18272 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18525 (A=1'1, B=$techmap\soc.simpleuart.$procmux$4910_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18273 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18526 (A=1'1, B=$techmap\soc.simpleuart.$procmux$4910_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18274 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18518 (A=1'1, B=$techmap\soc.simpleuart.$procmux$4910_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18266 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18789 (A=\soc.cpu.cpuregs.wen, B=1'0, S=$auto$simplemap.cc:256:simplemap_eqne$18778) into $auto$simplemap.cc:420:simplemap_dff$18769 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8427 (A=\soc.cpu.cpuregs.wen, B=1'0, S=$auto$simplemap.cc:256:simplemap_eqne$22186) into $auto$simplemap.cc:420:simplemap_dff$8369 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19025 (A=1'0, B=\soc.cpu.mem_wdata [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18870 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19026 (A=1'0, B=\soc.cpu.mem_wdata [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18871 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19024 (A=1'0, B=\soc.cpu.mem_wdata [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18869 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19022 (A=1'0, B=\soc.cpu.mem_wdata [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18873 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19020 (A=1'0, B=\soc.cpu.mem_wdata [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18874 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19027 (A=1'0, B=\soc.cpu.mem_wdata [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18872 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19013 (A=1'0, B=\soc.cpu.mem_wdata [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18876 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19014 (A=1'0, B=\soc.cpu.mem_wdata [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18877 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19012 (A=1'0, B=\soc.cpu.mem_wdata [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18875 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19015 (A=1'0, B=\soc.cpu.mem_wdata [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18878 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19005 (A=1'0, B=\soc.cpu.mem_wdata [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18880 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19006 (A=1'0, B=\soc.cpu.mem_wdata [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18881 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19004 (A=1'0, B=\soc.cpu.mem_wdata [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18879 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19002 (A=1'0, B=\soc.cpu.mem_wdata [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18883 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19000 (A=1'0, B=\soc.cpu.mem_wdata [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18884 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18998 (A=1'0, B=\soc.cpu.mem_wdata [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18885 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18996 (A=1'1, B=\soc.cpu.mem_wdata [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18886 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19032 (A=1'1, B=$techmap\soc.spimemio.$logic_or$spimemio.v:100$23_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18887 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22282 (A=$techmap\soc.spimemio.xfer.$2\flash_io3_do[0:0], B=1'0, S=$auto$simplemap.cc:168:logic_reduce$22613) into $auto$simplemap.cc:420:simplemap_dff$18888 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$22280 (A=$techmap\soc.spimemio.xfer.$2\flash_io2_do[0:0], B=1'0, S=$auto$simplemap.cc:168:logic_reduce$22613) into $auto$simplemap.cc:420:simplemap_dff$18889 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$22279 (A=$techmap$techmap\soc.spimemio.xfer.$procmux$5282.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$12231_Y, B=1'0, S=$auto$simplemap.cc:168:logic_reduce$22613) into $auto$simplemap.cc:420:simplemap_dff$18890 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$22277 (A=$techmap$techmap\soc.spimemio.xfer.$procmux$5230.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$12231_Y, B=1'0, S=$auto$simplemap.cc:168:logic_reduce$22613) into $auto$simplemap.cc:420:simplemap_dff$18891 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$19007 (A=1'1, B=\soc.cpu.mem_wdata [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18882 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19250 (A=$techmap\soc.spimemio.$procmux$5417_Y [1], B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$45_Y) into $auto$simplemap.cc:420:simplemap_dff$18893 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19251 (A=$techmap\soc.spimemio.$procmux$5417_Y [2], B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$45_Y) into $auto$simplemap.cc:420:simplemap_dff$18894 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19249 (A=$techmap\soc.spimemio.$procmux$5417_Y [0], B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$45_Y) into $auto$simplemap.cc:420:simplemap_dff$18892 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19246 (A=$techmap\soc.spimemio.$procmux$5432_Y, B=1'0, S=\soc.spimemio.jump) into $auto$simplemap.cc:420:simplemap_dff$18896 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19243 (A=\soc.spimemio.rd_inc, B=1'0, S=\soc.spimemio.valid) into $auto$simplemap.cc:420:simplemap_dff$18897 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19239 (A=$techmap\soc.spimemio.$procmux$5448_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$45_Y) into $auto$simplemap.cc:420:simplemap_dff$18898 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19252 (A=$techmap\soc.spimemio.$procmux$5417_Y [3], B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$45_Y) into $auto$simplemap.cc:420:simplemap_dff$18895 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19183 (A=$techmap\soc.spimemio.$procmux$5507_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$45_Y) into $auto$simplemap.cc:420:simplemap_dff$18947 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19178 (A=$techmap\soc.spimemio.$procmux$5526_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$45_Y) into $auto$simplemap.cc:420:simplemap_dff$18948 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19173 (A=$techmap\soc.spimemio.$procmux$5545_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$45_Y) into $auto$simplemap.cc:420:simplemap_dff$18949 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19150 (A=$techmap$techmap\soc.spimemio.$procmux$5555.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$19166_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$45_Y) into $auto$simplemap.cc:420:simplemap_dff$18951 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19151 (A=$techmap$techmap\soc.spimemio.$procmux$5555.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$19167_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$45_Y) into $auto$simplemap.cc:420:simplemap_dff$18952 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19149 (A=$techmap$techmap\soc.spimemio.$procmux$5555.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$19165_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$45_Y) into $auto$simplemap.cc:420:simplemap_dff$18950 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19152 (A=$techmap$techmap\soc.spimemio.$procmux$5555.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$19168_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$45_Y) into $auto$simplemap.cc:420:simplemap_dff$18953 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19187 (A=$techmap$techmap\soc.spimemio.$procmux$5462.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$12244_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$45_Y) into $auto$simplemap.cc:420:simplemap_dff$18962 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19377 (A=$techmap\soc.spimemio.$procmux$5365_Y, B=1'0, S=$techmap\soc.spimemio.$logic_or$spimemio.v:211$45_Y) into $auto$simplemap.cc:420:simplemap_dff$18963 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19932 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$10100, S=$techmap\soc.cpu.pcpi_div.$logic_and$../picorv32.v:2438$1026_Y) into $auto$simplemap.cc:420:simplemap_dff$19728 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19930 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$10110, S=$techmap\soc.cpu.pcpi_div.$logic_and$../picorv32.v:2438$1026_Y) into $auto$simplemap.cc:420:simplemap_dff$19729 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19929 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$10120, S=$techmap\soc.cpu.pcpi_div.$logic_and$../picorv32.v:2438$1026_Y) into $auto$simplemap.cc:420:simplemap_dff$19730 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19928 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$10130, S=$techmap\soc.cpu.pcpi_div.$logic_and$../picorv32.v:2438$1026_Y) into $auto$simplemap.cc:420:simplemap_dff$19731 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20474 (A=1'0, B=\soc.cpu.pcpi_div.start, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19735 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20411 (A=\soc.cpu.pcpi_div.quotient_msk [2], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19737 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20412 (A=\soc.cpu.pcpi_div.quotient_msk [3], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19738 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20413 (A=\soc.cpu.pcpi_div.quotient_msk [4], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19739 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20414 (A=\soc.cpu.pcpi_div.quotient_msk [5], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19740 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20415 (A=\soc.cpu.pcpi_div.quotient_msk [6], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19741 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20416 (A=\soc.cpu.pcpi_div.quotient_msk [7], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19742 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20417 (A=\soc.cpu.pcpi_div.quotient_msk [8], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19743 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20418 (A=\soc.cpu.pcpi_div.quotient_msk [9], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19744 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20419 (A=\soc.cpu.pcpi_div.quotient_msk [10], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19745 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20420 (A=\soc.cpu.pcpi_div.quotient_msk [11], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19746 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20421 (A=\soc.cpu.pcpi_div.quotient_msk [12], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19747 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20422 (A=\soc.cpu.pcpi_div.quotient_msk [13], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19748 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20423 (A=\soc.cpu.pcpi_div.quotient_msk [14], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19749 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20424 (A=\soc.cpu.pcpi_div.quotient_msk [15], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19750 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20425 (A=\soc.cpu.pcpi_div.quotient_msk [16], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19751 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20426 (A=\soc.cpu.pcpi_div.quotient_msk [17], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19752 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20427 (A=\soc.cpu.pcpi_div.quotient_msk [18], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19753 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20428 (A=\soc.cpu.pcpi_div.quotient_msk [19], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19754 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20429 (A=\soc.cpu.pcpi_div.quotient_msk [20], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19755 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20430 (A=\soc.cpu.pcpi_div.quotient_msk [21], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19756 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20431 (A=\soc.cpu.pcpi_div.quotient_msk [22], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19757 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20432 (A=\soc.cpu.pcpi_div.quotient_msk [23], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19758 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20433 (A=\soc.cpu.pcpi_div.quotient_msk [24], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19759 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20434 (A=\soc.cpu.pcpi_div.quotient_msk [25], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19760 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20435 (A=\soc.cpu.pcpi_div.quotient_msk [26], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19761 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20436 (A=\soc.cpu.pcpi_div.quotient_msk [27], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19762 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20437 (A=\soc.cpu.pcpi_div.quotient_msk [28], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19763 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20438 (A=\soc.cpu.pcpi_div.quotient_msk [29], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19764 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20439 (A=\soc.cpu.pcpi_div.quotient_msk [30], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19765 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20440 (A=\soc.cpu.pcpi_div.quotient_msk [31], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19766 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20410 (A=\soc.cpu.pcpi_div.quotient_msk [1], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19736 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20283 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [1], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19769 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20284 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [2], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19770 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20285 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [3], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19771 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20286 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [4], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19772 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20287 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [5], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19773 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20288 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [6], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19774 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20289 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [7], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19775 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20290 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [8], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19776 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20291 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [9], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19777 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20292 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [10], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19778 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20293 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [11], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19779 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20294 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [12], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19780 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20295 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [13], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19781 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20296 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [14], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19782 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20297 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [15], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19783 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20298 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [16], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19784 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20299 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [17], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19785 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20300 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [18], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19786 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20301 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [19], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19787 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20302 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [20], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19788 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20303 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [21], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19789 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20304 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [22], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19790 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20305 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [23], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19791 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20306 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [24], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19792 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20307 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [25], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19793 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20308 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [26], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19794 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20309 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [27], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19795 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20310 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [28], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19796 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20311 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [29], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19797 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20312 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [30], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19798 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20282 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [0], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19768 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20313 (A=$techmap\soc.cpu.pcpi_div.$or$../picorv32.v:2494$1057_Y [31], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19799 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20125 (A=\soc.cpu.pcpi_div.divisor [2], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19801 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20126 (A=\soc.cpu.pcpi_div.divisor [3], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19802 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20127 (A=\soc.cpu.pcpi_div.divisor [4], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19803 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20128 (A=\soc.cpu.pcpi_div.divisor [5], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19804 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20129 (A=\soc.cpu.pcpi_div.divisor [6], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19805 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20130 (A=\soc.cpu.pcpi_div.divisor [7], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19806 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20131 (A=\soc.cpu.pcpi_div.divisor [8], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19807 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20132 (A=\soc.cpu.pcpi_div.divisor [9], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19808 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20133 (A=\soc.cpu.pcpi_div.divisor [10], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19809 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20134 (A=\soc.cpu.pcpi_div.divisor [11], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19810 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20135 (A=\soc.cpu.pcpi_div.divisor [12], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19811 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20136 (A=\soc.cpu.pcpi_div.divisor [13], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19812 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20137 (A=\soc.cpu.pcpi_div.divisor [14], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19813 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20138 (A=\soc.cpu.pcpi_div.divisor [15], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19814 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20139 (A=\soc.cpu.pcpi_div.divisor [16], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19815 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20140 (A=\soc.cpu.pcpi_div.divisor [17], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19816 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20141 (A=\soc.cpu.pcpi_div.divisor [18], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19817 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20142 (A=\soc.cpu.pcpi_div.divisor [19], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19818 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20143 (A=\soc.cpu.pcpi_div.divisor [20], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19819 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20144 (A=\soc.cpu.pcpi_div.divisor [21], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19820 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20145 (A=\soc.cpu.pcpi_div.divisor [22], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19821 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20146 (A=\soc.cpu.pcpi_div.divisor [23], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19822 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20147 (A=\soc.cpu.pcpi_div.divisor [24], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19823 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20148 (A=\soc.cpu.pcpi_div.divisor [25], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19824 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20149 (A=\soc.cpu.pcpi_div.divisor [26], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19825 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20150 (A=\soc.cpu.pcpi_div.divisor [27], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19826 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20151 (A=\soc.cpu.pcpi_div.divisor [28], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19827 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20152 (A=\soc.cpu.pcpi_div.divisor [29], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19828 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20153 (A=\soc.cpu.pcpi_div.divisor [30], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19829 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20154 (A=\soc.cpu.pcpi_div.divisor [31], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19830 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20124 (A=\soc.cpu.pcpi_div.divisor [1], B=1'0, S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19800 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20186 (A=1'0, B=$techmap\soc.cpu.pcpi_div.$shl$../picorv32.v:2469$1041_Y [62], S=\soc.cpu.pcpi_div.start) into $auto$simplemap.cc:420:simplemap_dff$19862 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21286 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$10070, S=$techmap\soc.cpu.pcpi_mul.$logic_and$../picorv32.v:2221$934_Y) into $auto$simplemap.cc:420:simplemap_dff$20978 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$21285 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$10080, S=$techmap\soc.cpu.pcpi_mul.$logic_and$../picorv32.v:2221$934_Y) into $auto$simplemap.cc:420:simplemap_dff$20979 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$21284 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$10090, S=$techmap\soc.cpu.pcpi_mul.$logic_and$../picorv32.v:2221$934_Y) into $auto$simplemap.cc:420:simplemap_dff$20980 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20479 (A=1'0, B=$techmap\soc.cpu.pcpi_div.$procmux$4697_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$19927 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$21278 (A=1'0, B=$techmap\soc.cpu.pcpi_mul.$procmux$4864_Y, S=$techmap\soc.cpu.pcpi_mul.$logic_and$../picorv32.v:2221$934_Y) into $auto$simplemap.cc:420:simplemap_dff$20981 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$21765 (A=1'0, B=$techmap\soc.cpu.pcpi_mul.$procmux$4797_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20983 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$21763 (A=1'1, B=$techmap\soc.cpu.pcpi_mul.$procmux$4805_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$20984 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$21757 (A=$auto$wreduce.cc:454:run$6080 [1], B=1'1, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$20986 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21758 (A=$auto$wreduce.cc:454:run$6080 [2], B=1'1, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$20987 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21759 (A=$auto$wreduce.cc:454:run$6080 [3], B=1'1, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$20988 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21760 (A=$auto$wreduce.cc:454:run$6080 [4], B=1'1, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$20989 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21756 (A=$auto$simplemap.cc:309:simplemap_lut$56909, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$20985 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21762 (A=$auto$wreduce.cc:454:run$6080 [6], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$20991 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21734 (A=\soc.cpu.pcpi_mul.next_rdt [3], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$20996 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21735 (A=\soc.cpu.pcpi_mul.next_rdt [7], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21000 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21736 (A=\soc.cpu.pcpi_mul.next_rdt [11], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21004 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21737 (A=\soc.cpu.pcpi_mul.next_rdt [15], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21008 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21738 (A=\soc.cpu.pcpi_mul.next_rdt [19], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21012 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21739 (A=\soc.cpu.pcpi_mul.next_rdt [23], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21016 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21740 (A=\soc.cpu.pcpi_mul.next_rdt [27], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21020 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21741 (A=\soc.cpu.pcpi_mul.next_rdt [31], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21024 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21742 (A=\soc.cpu.pcpi_mul.next_rdt [35], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21028 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21743 (A=\soc.cpu.pcpi_mul.next_rdt [39], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21032 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21744 (A=\soc.cpu.pcpi_mul.next_rdt [43], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21036 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21745 (A=\soc.cpu.pcpi_mul.next_rdt [47], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21040 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21746 (A=\soc.cpu.pcpi_mul.next_rdt [51], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21044 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21747 (A=\soc.cpu.pcpi_mul.next_rdt [55], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21048 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21748 (A=\soc.cpu.pcpi_mul.next_rdt [59], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21052 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21610 (A=\soc.cpu.pcpi_mul.next_rd [1], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21054 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21611 (A=\soc.cpu.pcpi_mul.next_rd [2], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21055 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21612 (A=\soc.cpu.pcpi_mul.next_rd [3], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21056 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21613 (A=$auto$simplemap.cc:309:simplemap_lut$57099, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21057 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21614 (A=\soc.cpu.pcpi_mul.next_rd [5], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21058 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21615 (A=\soc.cpu.pcpi_mul.next_rd [6], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21059 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21616 (A=\soc.cpu.pcpi_mul.next_rd [7], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21060 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21617 (A=$auto$simplemap.cc:309:simplemap_lut$56928, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21061 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21618 (A=\soc.cpu.pcpi_mul.next_rd [9], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21062 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21619 (A=\soc.cpu.pcpi_mul.next_rd [10], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21063 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21620 (A=\soc.cpu.pcpi_mul.next_rd [11], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21064 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21621 (A=$auto$simplemap.cc:309:simplemap_lut$57080, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21065 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21622 (A=\soc.cpu.pcpi_mul.next_rd [13], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21066 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21623 (A=\soc.cpu.pcpi_mul.next_rd [14], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21067 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21624 (A=\soc.cpu.pcpi_mul.next_rd [15], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21068 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21625 (A=$auto$simplemap.cc:309:simplemap_lut$57042, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21069 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21626 (A=\soc.cpu.pcpi_mul.next_rd [17], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21070 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21627 (A=\soc.cpu.pcpi_mul.next_rd [18], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21071 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21628 (A=\soc.cpu.pcpi_mul.next_rd [19], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21072 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21629 (A=$auto$simplemap.cc:309:simplemap_lut$57156, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21073 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21630 (A=\soc.cpu.pcpi_mul.next_rd [21], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21074 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21631 (A=\soc.cpu.pcpi_mul.next_rd [22], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21075 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21632 (A=\soc.cpu.pcpi_mul.next_rd [23], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21076 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21633 (A=$auto$simplemap.cc:309:simplemap_lut$57175, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21077 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21634 (A=\soc.cpu.pcpi_mul.next_rd [25], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21078 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21635 (A=\soc.cpu.pcpi_mul.next_rd [26], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21079 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21636 (A=\soc.cpu.pcpi_mul.next_rd [27], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21080 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21637 (A=$auto$simplemap.cc:309:simplemap_lut$57137, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21081 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21638 (A=\soc.cpu.pcpi_mul.next_rd [29], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21082 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21639 (A=\soc.cpu.pcpi_mul.next_rd [30], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21083 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21640 (A=\soc.cpu.pcpi_mul.next_rd [31], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21084 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21641 (A=$auto$simplemap.cc:309:simplemap_lut$57194, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21085 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21642 (A=\soc.cpu.pcpi_mul.next_rd [33], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21086 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21643 (A=\soc.cpu.pcpi_mul.next_rd [34], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21087 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21644 (A=\soc.cpu.pcpi_mul.next_rd [35], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21088 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21645 (A=$auto$simplemap.cc:309:simplemap_lut$57118, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21089 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21646 (A=\soc.cpu.pcpi_mul.next_rd [37], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21090 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21647 (A=\soc.cpu.pcpi_mul.next_rd [38], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21091 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21648 (A=\soc.cpu.pcpi_mul.next_rd [39], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21092 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21649 (A=$auto$simplemap.cc:309:simplemap_lut$56947, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21093 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21650 (A=\soc.cpu.pcpi_mul.next_rd [41], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21094 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21651 (A=\soc.cpu.pcpi_mul.next_rd [42], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21095 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21652 (A=\soc.cpu.pcpi_mul.next_rd [43], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21096 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21653 (A=$auto$simplemap.cc:309:simplemap_lut$56985, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21097 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21654 (A=\soc.cpu.pcpi_mul.next_rd [45], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21098 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21655 (A=\soc.cpu.pcpi_mul.next_rd [46], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21099 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21656 (A=\soc.cpu.pcpi_mul.next_rd [47], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21100 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21657 (A=$auto$simplemap.cc:309:simplemap_lut$56966, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21101 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21658 (A=\soc.cpu.pcpi_mul.next_rd [49], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21102 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21659 (A=\soc.cpu.pcpi_mul.next_rd [50], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21103 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21660 (A=\soc.cpu.pcpi_mul.next_rd [51], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21104 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21661 (A=$auto$simplemap.cc:309:simplemap_lut$57023, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21105 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21662 (A=\soc.cpu.pcpi_mul.next_rd [53], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21106 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21663 (A=\soc.cpu.pcpi_mul.next_rd [54], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21107 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21664 (A=\soc.cpu.pcpi_mul.next_rd [55], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21108 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21665 (A=$auto$simplemap.cc:309:simplemap_lut$57004, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21109 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21666 (A=\soc.cpu.pcpi_mul.next_rd [57], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21110 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21667 (A=\soc.cpu.pcpi_mul.next_rd [58], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21111 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21668 (A=\soc.cpu.pcpi_mul.next_rd [59], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21112 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21669 (A=\soc.cpu.pcpi_mul.next_rd [60], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21113 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21670 (A=\soc.cpu.pcpi_mul.next_rd [61], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21114 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21671 (A=\soc.cpu.pcpi_mul.next_rd [62], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21115 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21609 (A=$auto$simplemap.cc:309:simplemap_lut$57061, B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21053 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21672 (A=\soc.cpu.pcpi_mul.next_rd [63], B=1'0, S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21116 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21480 (A=1'0, B=\soc.cpu.reg_op2 [0], S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21117 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21414 (A=1'0, B=$techmap\soc.cpu.pcpi_mul.$procmux$4839_Y [63], S=\soc.cpu.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$21244 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22545 (A=1'0, B=\soc.spimemio.din_tag [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22242 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22546 (A=1'0, B=\soc.spimemio.din_tag [1], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22243 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22547 (A=1'0, B=\soc.spimemio.din_tag [2], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22244 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22548 (A=1'0, B=\soc.spimemio.din_tag [3], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22245 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22455 (A=1'0, B=\soc.spimemio.xfer.din_ddr, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22272 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22554 (A=1'1, B=$auto$wreduce.cc:454:run$6112 [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22240 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22553 (A=1'1, B=\soc.spimemio.xfer.next_fetch, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22241 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$22543 (A=1'0, B=\soc.spimemio.din_rd, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22246 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22541 (A=1'0, B=\soc.spimemio.din_qspi, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22247 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22530 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5020_Y [1], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22249 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22531 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5020_Y [2], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22250 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22529 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5020_Y [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22248 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22532 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5020_Y [3], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22251 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22514 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5030_Y [1], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22253 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22515 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5030_Y [2], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22254 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22513 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5030_Y [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22252 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22516 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5030_Y [3], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22255 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22453 (A=1'0, B=\soc.spimemio.xfer.din_dspi, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22273 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$22449 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5068_Y, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$22274 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15173 (A=1'0, B=$techmap\soc.cpu.$procmux$3195_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11373 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15510 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2635.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$12194_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11342 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7494 (A=1'0, B=\soc.cpu.mem_wdata [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7600 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7495 (A=1'0, B=\soc.cpu.mem_wdata [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7601 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7496 (A=1'0, B=\soc.cpu.mem_wdata [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7602 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7497 (A=1'0, B=\soc.cpu.mem_wdata [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7603 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7498 (A=1'0, B=\soc.cpu.mem_wdata [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7604 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7499 (A=1'0, B=\soc.cpu.mem_wdata [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7605 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7500 (A=1'0, B=\soc.cpu.mem_wdata [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7606 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7469 (A=1'0, B=\soc.cpu.mem_wdata [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7607 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7470 (A=1'0, B=\soc.cpu.mem_wdata [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7608 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7471 (A=1'0, B=\soc.cpu.mem_wdata [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7609 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7472 (A=1'0, B=\soc.cpu.mem_wdata [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7610 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7473 (A=1'0, B=\soc.cpu.mem_wdata [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7611 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7474 (A=1'0, B=\soc.cpu.mem_wdata [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7612 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7475 (A=1'0, B=\soc.cpu.mem_wdata [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7613 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7476 (A=1'0, B=\soc.cpu.mem_wdata [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7614 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7445 (A=1'0, B=\soc.cpu.mem_wdata [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7615 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7446 (A=1'0, B=\soc.cpu.mem_wdata [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7616 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7447 (A=1'0, B=\soc.cpu.mem_wdata [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7617 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7448 (A=1'0, B=\soc.cpu.mem_wdata [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7618 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7449 (A=1'0, B=\soc.cpu.mem_wdata [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7619 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7450 (A=1'0, B=\soc.cpu.mem_wdata [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7620 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7451 (A=1'0, B=\soc.cpu.mem_wdata [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7621 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7452 (A=1'0, B=\soc.cpu.mem_wdata [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7622 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7421 (A=1'0, B=\soc.cpu.mem_wdata [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7623 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7422 (A=1'0, B=\soc.cpu.mem_wdata [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7624 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7423 (A=1'0, B=\soc.cpu.mem_wdata [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7625 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7424 (A=1'0, B=\soc.cpu.mem_wdata [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7626 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7425 (A=1'0, B=\soc.cpu.mem_wdata [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7627 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7426 (A=1'0, B=\soc.cpu.mem_wdata [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7628 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7427 (A=1'0, B=\soc.cpu.mem_wdata [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7629 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7493 (A=1'0, B=\soc.cpu.mem_wdata [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7599 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7428 (A=1'0, B=\soc.cpu.mem_wdata [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$7630 (SB_DFFE).

6.40. Executing ICE40_OPT pass (performing simple optimizations).

6.40.1. Running ICE40 specific optimizations.

6.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.
<suppressed ~1478 debug messages>

6.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
<suppressed ~18207 debug messages>
Removed a total of 6069 cells.

6.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

6.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..
Removed 780 unused cells and 15086 unused wires.
<suppressed ~781 debug messages>

6.40.6. Rerunning OPT passes. (Removed registers in this run.)

6.40.7. Running ICE40 specific optimizations.

6.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module hx8kdemo.

6.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\hx8kdemo'.
Removed a total of 0 cells.

6.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

6.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \hx8kdemo..

6.40.12. Finished OPT passes. (There is nothing left to do.)

6.41. Executing TECHMAP pass (map to technology primitives).

6.41.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

6.41.2. Continuing TECHMAP pass.
No more expansions possible.

6.42. Executing ABC pass (technology mapping using ABC).

6.42.1. Extracting gate netlist of module `\hx8kdemo' to `<abc-temp-dir>/input.blif'..
Extracted 9122 gates and 11316 wires to a netlist network with 2192 inputs and 1623 outputs.

6.42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    2672.
ABC: Participating nodes from both networks       =    5607.
ABC: Participating nodes from the first network   =    2678. (  68.06 % of nodes)
ABC: Participating nodes from the second network  =    2929. (  74.43 % of nodes)
ABC: Node pairs (any polarity)                    =    2678. (  68.06 % of names can be moved)
ABC: Node pairs (same polarity)                   =    1971. (  50.09 % of names can be moved)
ABC: Total runtime =     0.45 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

6.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     3934
ABC RESULTS:        internal signals:     7501
ABC RESULTS:           input signals:     2192
ABC RESULTS:          output signals:     1623
Removing temp directory.

6.43. Executing TECHMAP pass (map to technology primitives).

6.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

6.43.2. Continuing TECHMAP pass.
Using template $paramod\$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110 for cells of type $__ICE40_CARRY_WRAPPER.
No more expansions possible.
<suppressed ~1045 debug messages>
Removed 331 unused cells and 12407 unused wires.

6.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     4679
  1-LUT              303
  2-LUT              593
  3-LUT             1940
  4-LUT             1843
  with \SB_CARRY     704

Eliminating LUTs.
Number of LUTs:     4679
  1-LUT              303
  2-LUT              593
  3-LUT             1940
  4-LUT             1843
  with \SB_CARRY     704

Combining LUTs.
Number of LUTs:     4601
  1-LUT              301
  2-LUT              519
  3-LUT             1869
  4-LUT             1912
  with \SB_CARRY     704

Eliminated 0 LUTs.
Combined 78 LUTs.
<suppressed ~29223 debug messages>

6.45. Executing TECHMAP pass (map to technology primitives).

6.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Generating RTLIL representation for module `\$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

6.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000011101111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001001100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000011101001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001100110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010111111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101101000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101000110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010001000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001101011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001011110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111101110110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000001100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011000000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000110011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011011101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100100010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011001100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010111001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101011111010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110001011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000011010101 for cells of type $lut.
No more expansions possible.
<suppressed ~7539 debug messages>
Removed 0 unused cells and 9279 unused wires.

6.46. Executing HIERARCHY pass (managing design hierarchy).

6.46.1. Analyzing design hierarchy..
Top module:  \hx8kdemo

6.46.2. Analyzing design hierarchy..
Top module:  \hx8kdemo
Removed 0 unused modules.

6.47. Printing statistics.

=== hx8kdemo ===

   Number of wires:               4735
   Number of wire bits:           9252
   Number of public wires:         394
   Number of public wire bits:    3702
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7241
     SB_CARRY                      992
     SB_DFF                        159
     SB_DFFE                       652
     SB_DFFESR                     542
     SB_DFFESS                      59
     SB_DFFNSR                       4
     SB_DFFSR                      216
     SB_DFFSS                        6
     SB_IO                           4
     SB_LUT4                      4601
     SB_RAM40_4K                     6

6.48. Executing CHECK pass (checking for obvious problems).
checking module hx8kdemo..
found and reported 0 problems.

6.49. Executing BLIF backend.

End of script. Logfile hash: b0504f6e23
CPU: user 18.72s system 2.46s, MEM: 128.61 MB total, 94.10 MB resident
Yosys 0.9+932 (git sha1 81876a37, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 24% 29x opt_expr (5 sec), 18% 23x opt_merge (3 sec), ...
